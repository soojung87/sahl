{"remainingRequest":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\D-noMoveLine\\src\\components\\ModeDeclarationGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\D-noMoveLine\\src\\components\\ModeDeclarationGroup.vue","mtime":1626150662339},{"path":"D:\\source\\D-noMoveLine\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIi4uL21haW4uanMiDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgY29sb3JUb29sYmFyOiAiIzZBNUFDRCIsDQogICAgICAgICAgICBwYW5lbE1ER3JvdXA6IFtdLA0KICAgICAgICAgICAgc2VsZWN0ZWRNREdyb3VwSXRlbTogW10sDQogICAgICAgICAgICBzZWxlY3RlZE1vZGVEZWNsYXJhdGlvbjpbXSwNCiAgICAgICAgICAgIE1ER3JvdXBJdGVtOiBbDQogICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdDQ1UyMF9NYWNoaW5lX09UQV9Nb2RlRGVjbGFyYXRpb25Hcm91cCcsDQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxtb2RlOiAnT2ZmJywNCiAgICAgICAgICAgICAgICAgICAgbW9kZURlY2xhcmF0aW9uOiBbICdPZmYnLCAnUnVubmluZycsICdVcGRhdGUnLCAnVmVyaWZ5J10sDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0NDVTIwX01hY2hpbmVfTWFjaGluZVN0YXRlX01vZGVEZWNsYXJhdGlvbkdyb3VwJywNCiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbG1vZGU6ICdSZXN0YXJ0JywNCiAgICAgICAgICAgICAgICAgICAgbW9kZURlY2xhcmF0aW9uOiBbICdEaWFnbm9zdGljJywgJ09mZicsICdSZXN0YXJ0JywgJ1J1bm5pbmcnLCAnU2h1dGRvd24nLCAnU3RhcnR1cCcsICdVcGRhdGUnLCAnVmVyaWZ5J10sDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0NDVTIwX01hY2hpbmVfTmV0d29ya19TdG9yYWdlX01vZGVEZWNsYXJhdGlvbkdyb3VwJywNCiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbG1vZGU6ICdSdW5uaW5nJywNCiAgICAgICAgICAgICAgICAgICAgbW9kZURlY2xhcmF0aW9uOiBbICdPZmYnLCAnUnVubmluZycsICdVcGRhdGUnLCAnVmVyaWZ5J10sDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICBlZGl0ZWRNREdyb3VwSXRlbTogew0KICAgICAgICAgICAgICAgIG5hbWU6ICcnLA0KICAgICAgICAgICAgICAgIGluaXRpYWxtb2RlOiAnJywNCiAgICAgICAgICAgICAgICBtb2RlRGVjbGFyYXRpb246IFtdLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRlZmF1bHRNREdyb3VwSXRlbTogew0KICAgICAgICAgICAgICAgIG5hbWU6ICcnLA0KICAgICAgICAgICAgICAgIGluaXRpYWxtb2RlOiAnJywNCiAgICAgICAgICAgICAgICBtb2RlRGVjbGFyYXRpb246IFtdLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGFkZE1ER3JvdXBtb2RlRGVjbGFyYXRpb246ICcnLA0KICAgICAgICAgICAgaXNlbGVtZW50YWRkOiBmYWxzZSwNCiAgICAgICAgICAgIGlzTURHb3VwbmFtZWFkZDogZmFsc2UsDQogICAgICAgICAgICBhZGRNb2RlRGVjbGFyYXRpb25OYW1lOiAnJywNCiAgICAgICAgICAgIGlzU2VsZWN0TW9kZTogZmFsc2UsDQogICAgICAgICAgICBpc2VsZW1lbnRPcGVuQ2xvc2U6IHRydWUsDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQgKCkgew0KICAgICAgICBFdmVudEJ1cy4kb24oIm9wZW4tbW9kZURlY2xhcmF0aW9uIiwgKGNsaWNrcGFuZWwpID0+IHsNCiAgICAgICAgICAgIHRoaXMucGFuZWxNREdyb3VwID0gW3RoaXMuTURHcm91cEl0ZW0uZmluZEluZGV4KGZpbmRuYW1lID0+IGZpbmRuYW1lLm5hbWUgPT0gY2xpY2twYW5lbCldDQogICAgICAgIH0pDQogICAgICAgIEV2ZW50QnVzLiRvbignc2VsZWN0LW1vZGVkZWNsYXJhdGlvbicsIChzZWxlY3RNb2RlKSA9PiB7DQogICAgICAgICAgICB0aGlzLmlzU2VsZWN0TW9kZSA9IHNlbGVjdE1vZGUNCiAgICAgICAgICAgIHRoaXMucGFuZWxNREdyb3VwID0gW10NCiAgICAgICAgfSkNCiAgICAgICAgRXZlbnRCdXMuJG9uKCJvbkFjdGl2YXRlZC1Nb2RlRGVjbGEiLCAob25BY3RpdmF0ZWQpID0+IHsNCiAgICAgICAgICAgIGlmIChvbkFjdGl2YXRlZCA9PSAyKSB7IA0KICAgICAgICAgICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0iI0ZGMTQ5MyIgDQogICAgICAgICAgICB9IGVsc2UgaWYgKG9uQWN0aXZhdGVkID09IDEpeyANCiAgICAgICAgICAgICAgICB0aGlzLmNvbG9yVG9vbGJhciA9ICIjQTUyQTJBIiANCiAgICAgICAgICAgIH0gZWxzZSBpZiAob25BY3RpdmF0ZWQgPT0gMCl7DQogICAgICAgICAgICAgICAgdGhpcy5jb2xvclRvb2xiYXIgPSAiIzZBNUFDRCINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgb25Nb3VzZURvd24gKCkgew0KICAgICAgICAgICAgLy9FdmVudEJ1cy4kZW1pdCgnYWN0aXZlLWVsZW1lbnQnLDQpIC8vbW92ZeulvCB0b29sYmFy66Gc66eMIOuwlOq+uOuLiOq5jCDrlLjrprAg7LC97J2EIOuIhOultOuptCBhY3RpdmXqsIAg7JWI65CY7IScIOydtOuypO2KuOuhnCDsoITtlbTspIDri6QuDQogICAgICAgIH0sDQogICAgICAgIHNob2VNb2RlRGVjbGFyYXRpb24gKCkgew0KICAgICAgICAgICAgdGhpcy5pc2VsZW1lbnRPcGVuQ2xvc2UgPSB0aGlzLmlzZWxlbWVudE9wZW5DbG9zZSA/IGZhbHNlIDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICBvcGVuYWxsTGlzdCAoKSB7DQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IEFycmF5LmZyb20oQXJyYXkodGhpcy5NREdyb3VwSXRlbS5sZW5ndGgpLmtleXMoKSk7DQogICAgICAgIH0sDQogICAgICAgIGNsb3NlYWxsTGlzdCAoKSB7DQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IFtdDQogICAgICAgIH0sDQogICAgICAgIGFkZE1ER3JvdXAgKCkgew0KICAgICAgICAgICAgaWYodGhpcy5pc2VsZW1lbnRhZGQgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgIGlmKHRoaXMuZWRpdGVkTURHcm91cEl0ZW0ubmFtZSAhPSAnJykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRlZE1ER3JvdXBJdGVtLm1vZGVEZWNsYXJhdGlvbiA9IHRoaXMuYWRkTURHcm91cG1vZGVEZWNsYXJhdGlvbi5zcGxpdCgiICIpDQogICAgICAgICAgICAgICAgICAgIHRoaXMuTURHcm91cEl0ZW0ucHVzaCh0aGlzLmVkaXRlZE1ER3JvdXBJdGVtKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmlzZWxlbWVudGFkZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdGVkTURHcm91cEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRlZmF1bHRNREdyb3VwSXRlbSkNCiAgICAgICAgICAgICAgICB0aGlzLmFkZE1ER3JvdXBtb2RlRGVjbGFyYXRpb24gPSAnJw0KICAgICAgICAgICAgfSBlbHNlew0KICAgICAgICAgICAgICAgIHRoaXMuaXNlbGVtZW50YWRkID0gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGVsZXRlTURHcm91cEl0ZW0gKGluZGV4KSB7DQogICAgICAgICAgICB0aGlzLk1ER3JvdXBJdGVtLnNwbGljZShpbmRleCwxKQ0KICAgICAgICB9LA0KICAgICAgICBhZGRNb2RlRGVjbGFyYXRpb25Nb2RlIChpdGVtKSB7DQogICAgICAgICAgICBpZiAodGhpcy5pc01ER291cG5hbWVhZGQgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmFkZE1vZGVEZWNsYXJhdGlvbk5hbWUgIT0gJycpIHsNCiAgICAgICAgICAgICAgICAgICAgaXRlbS5tb2RlRGVjbGFyYXRpb24ucHVzaCh0aGlzLmFkZE1vZGVEZWNsYXJhdGlvbk5hbWUpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuaXNNREdvdXBuYW1lYWRkID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLmFkZE1vZGVEZWNsYXJhdGlvbk5hbWUgPSAnJw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzTURHb3VwbmFtZWFkZCA9IHRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGVsZXRlTW9kZURlY2xhcmF0aW9uTW9kZSAoaXRlbSkgew0KICAgICAgICAgICAgaXRlbS5tb2RlRGVjbGFyYXRpb24gPSBpdGVtLm1vZGVEZWNsYXJhdGlvbi5maWx0ZXIoaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkTW9kZURlY2xhcmF0aW9uLmluZGV4T2YoaXRlbSkgPCAwIH0pDQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkTW9kZURlY2xhcmF0aW9uID0gW10NCiAgICAgICAgfSwNCiAgICAgICAgc2VsZWN0RnVuY3Rpb25UeXBlICgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkTURHcm91cEl0ZW0ubGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgICAgIGFsZXJ0ICgib25seSBzZWxlY3Qgb25lIikgDQogICAgICAgICAgICAgICAgcmV0dXJuIA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5zZWxlY3RlZE1ER3JvdXBJdGVtLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICAgICAgYWxlcnQoImNob29zZSBvbmUgaXRlbSIpDQogICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgic2VsZWN0LWZ1bmN0aW9uR3JvdXB0eXBlIiwgdGhpcy5zZWxlY3RlZE1ER3JvdXBJdGVtLCA0KTsgLy8gbWFpbnZpZXfsl5DshJwg7Zmc7ISx7ZmU7LC97J2EIOuwlOq/lOyjvOugpOqzoCAz7J2EIOuEo+yXiOydjCAz7J2AIE1vZGUgRGVjbGFyYXRpb24NCiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNREdyb3VwSXRlbSA9IFtdDQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IFtdDQogICAgICAgICAgICB0aGlzLmlzU2VsZWN0TW9kZSA9IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIGNhbmNsZUZ1bmN0aW9uVHVwZSAoKSB7DQogICAgICAgICAgICB0aGlzLmlzU2VsZWN0TW9kZSA9IGZhbHNlDQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkTURHcm91cEl0ZW0gPSBbXQ0KICAgICAgICAgICAgdGhpcy5wYW5lbE1ER3JvdXAgPSBbXQ0KICAgICAgICB9LA0KICAgIH0NCn0NCg=="},{"version":3,"sources":["ModeDeclarationGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ModeDeclarationGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"modedeclarationgroup\" @mousedown=\"onMouseDown\">\r\n        <v-container>\r\n            <v-card outlined >\r\n                <v-toolbar :color=colorToolbar dark hide-on-scroll dense class=\"drag-handle\">\r\n                    <v-btn icon @click=\"shoeModeDeclaration\">\r\n                        <v-icon>mdi-heart</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>Mode Declaration Group</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-row>\r\n                        <v-col>\r\n                            <v-btn text @click=\"addMDGroup\" x-small>\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                        <v-col>\r\n                            <v-btn @click=\"openallList\" x-small> all </v-btn>\r\n                            <v-btn @click=\"closeallList\" x-small>none</v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-btn v-if=\"isSelectMode==true\" @click=\"selectFunctionType\" x-small> select </v-btn>\r\n                    <v-btn v-if=\"isSelectMode==true\" @click=\"cancleFunctionTupe\" x-small>cancle</v-btn>\r\n                    <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"editedMDGroupItem.name\" label=\"name\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"editedMDGroupItem.initialmode\" label=\"Initial Mode\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"addMDGroupmodeDeclaration\" label=\"Mode Declaration namd\" placeholder=\"String String String...\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-expansion-panels v-model=\"panelMDGroup\" focusable multiple>\r\n                        <v-expansion-panel v-for=\"(item,i) in MDGroupItem\" :key=\"i\">\r\n                            <v-expansion-panel-header>\r\n                                <div class=\"panel-header\">\r\n                                    <input v-if=\"isSelectMode==true\" type=\"checkbox\" v-model=\"selectedMDGroupItem\" :value=\"item.name\">\r\n                                    <v-btn color=\"blue darken-1\" text @click.native.stop=\"deleteMDGroupItem(i)\" x-small>\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                        <label> name </label>\r\n                                    <span>{{ item.name }}</span>\r\n                                </div>\r\n                                <template v-slot:actions>\r\n                                    <v-icon v-if=\"item.name == ''\" color=\"error\">mdi-alert-circle</v-icon>\r\n                                </template>\r\n                            </v-expansion-panel-header>\r\n                            <v-expansion-panel-content>\r\n                                <br>\r\n                                <v-select v-model=\"item.initialmode\" :items=\"item.modeDeclaration\" label=\"Initial Mode\" dense outlined return-object></v-select>\r\n                                <v-card outlined max-height=\"300px\">\r\n                                    <div class=\"subtitle-2\">Mode Declarations\r\n                                        <v-btn text @click=\"addModeDeclarationMode(item)\" x-small>\r\n                                            <v-icon>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                        <v-btn @click=\"deleteModeDeclarationMode(item)\" text x-small>\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                        <v-text-field v-if=\"isMDGoupnameadd==true\" type=\"text\" v-model=\"addModeDeclarationName\" label=\"add name\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                                            <v-list class=\"overflow-y-auto\" outlined height=\"100\" dense>\r\n                                            <v-list-item-group v-model=\"selectedModeDeclaration\" multiple>\r\n                                                <v-list-item  v-for=\"(modeitem,i) in item.modeDeclaration\" :key=\"i\" :value=\"modeitem\" class=\"text-left\">\r\n                                                    <template v-slot:default=\"{ active }\">\r\n                                                        <v-list-item-content>\r\n                                                            <v-list-item-title v-text=\"modeitem\" ></v-list-item-title>\r\n                                                        </v-list-item-content>\r\n                                                        <v-list-item-action>\r\n                                                            <v-checkbox :input-value=\"active\" color=\"deep-purple accent-4\"></v-checkbox>\r\n                                                        </v-list-item-action>\r\n                                                    </template>\r\n                                                </v-list-item>\r\n                                            </v-list-item-group>\r\n                                        </v-list>\r\n                                    </div>\r\n                                </v-card>\r\n                            </v-expansion-panel-content>\r\n                        </v-expansion-panel>\r\n                    </v-expansion-panels>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            colorToolbar: \"#6A5ACD\",\r\n            panelMDGroup: [],\r\n            selectedMDGroupItem: [],\r\n            selectedModeDeclaration:[],\r\n            MDGroupItem: [\r\n                {   name: 'CCU20_Machine_OTA_ModeDeclarationGroup',\r\n                    initialmode: 'Off',\r\n                    modeDeclaration: [ 'Off', 'Running', 'Update', 'Verify'],\r\n                },\r\n                {   name: 'CCU20_Machine_MachineState_ModeDeclarationGroup',\r\n                    initialmode: 'Restart',\r\n                    modeDeclaration: [ 'Diagnostic', 'Off', 'Restart', 'Running', 'Shutdown', 'Startup', 'Update', 'Verify'],\r\n                },\r\n                {   name: 'CCU20_Machine_Network_Storage_ModeDeclarationGroup',\r\n                    initialmode: 'Running',\r\n                    modeDeclaration: [ 'Off', 'Running', 'Update', 'Verify'],\r\n                },\r\n            ],\r\n            editedMDGroupItem: {\r\n                name: '',\r\n                initialmode: '',\r\n                modeDeclaration: [],\r\n            },\r\n            defaultMDGroupItem: {\r\n                name: '',\r\n                initialmode: '',\r\n                modeDeclaration: [],\r\n            },\r\n            addMDGroupmodeDeclaration: '',\r\n            iselementadd: false,\r\n            isMDGoupnameadd: false,\r\n            addModeDeclarationName: '',\r\n            isSelectMode: false,\r\n            iselementOpenClose: true,\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on(\"open-modeDeclaration\", (clickpanel) => {\r\n            this.panelMDGroup = [this.MDGroupItem.findIndex(findname => findname.name == clickpanel)]\r\n        })\r\n        EventBus.$on('select-modedeclaration', (selectMode) => {\r\n            this.isSelectMode = selectMode\r\n            this.panelMDGroup = []\r\n        })\r\n        EventBus.$on(\"onActivated-ModeDecla\", (onActivated) => {\r\n            if (onActivated == 2) { \r\n                this.colorToolbar =\"#FF1493\" \r\n            } else if (onActivated == 1){ \r\n                this.colorToolbar = \"#A52A2A\" \r\n            } else if (onActivated == 0){\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        onMouseDown () {\r\n            //EventBus.$emit('active-element',4) //move를 toolbar로만 바꾸니까 딸린 창을 누르면 active가 안되서 이벤트로 전해준다.\r\n        },\r\n        shoeModeDeclaration () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        openallList () {\r\n            this.panelMDGroup = Array.from(Array(this.MDGroupItem.length).keys());\r\n        },\r\n        closeallList () {\r\n            this.panelMDGroup = []\r\n        },\r\n        addMDGroup () {\r\n            if(this.iselementadd == true) {\r\n                if(this.editedMDGroupItem.name != '') {\r\n                    this.editedMDGroupItem.modeDeclaration = this.addMDGroupmodeDeclaration.split(\" \")\r\n                    this.MDGroupItem.push(this.editedMDGroupItem)\r\n                }\r\n                this.iselementadd = false;\r\n                this.editedMDGroupItem = Object.assign({}, this.defaultMDGroupItem)\r\n                this.addMDGroupmodeDeclaration = ''\r\n            } else{\r\n                this.iselementadd = true;\r\n            }\r\n        },\r\n        deleteMDGroupItem (index) {\r\n            this.MDGroupItem.splice(index,1)\r\n        },\r\n        addModeDeclarationMode (item) {\r\n            if (this.isMDGoupnameadd == true) {\r\n                if (this.addModeDeclarationName != '') {\r\n                    item.modeDeclaration.push(this.addModeDeclarationName)\r\n                }\r\n                this.isMDGoupnameadd = false\r\n                this.addModeDeclarationName = ''\r\n            } else {\r\n                this.isMDGoupnameadd = true\r\n            }\r\n        },\r\n        deleteModeDeclarationMode (item) {\r\n            item.modeDeclaration = item.modeDeclaration.filter(item => {\r\n                    return this.selectedModeDeclaration.indexOf(item) < 0 })\r\n            this.selectedModeDeclaration = []\r\n        },\r\n        selectFunctionType () {\r\n            if (this.selectedMDGroupItem.length > 1) {\r\n                alert (\"only select one\") \r\n                return \r\n            }\r\n            else if (this.selectedMDGroupItem.length == 0) {\r\n                alert(\"choose one item\")\r\n                return\r\n            }\r\n            EventBus.$emit(\"select-functionGrouptype\", this.selectedMDGroupItem, 4); // mainview에서 활성화창을 바꿔주려고 3을 넣었음 3은 Mode Declaration\r\n            this.selectedMDGroupItem = []\r\n            this.panelMDGroup = []\r\n            this.isSelectMode = false\r\n        },\r\n        cancleFunctionTupe () {\r\n            this.isSelectMode = false\r\n            this.selectedMDGroupItem = []\r\n            this.panelMDGroup = []\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* .panel-header {\r\n  height: 18px;\r\n  width: 140px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 0 5px 0 5px;\r\n  text-decoration: none;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: rgb(0, 0, 0);\r\n}\r\n\r\n.panel-header label {\r\n  color: rgb(148, 144, 144);\r\n}\r\n\r\n.panel-header:hover {\r\n  overflow: visible;\r\n}  */\r\n\r\n</style>\r\n"]}]}