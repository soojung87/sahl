{"remainingRequest":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\D-noMoveLine\\src\\components\\HWElement.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\D-noMoveLine\\src\\components\\HWElement.vue","mtime":1626317373829},{"path":"D:\\source\\D-noMoveLine\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8qIC5wYW5lbC1oZWFkZXIgew0KICBoZWlnaHQ6IDE4cHg7DQogIHdpZHRoOiAxNDBweDsNCiAgcGFkZGluZzogMDsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbjogMCA1cHggMCA1cHg7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQogIHdoaXRlLXNwYWNlOiBub3dyYXA7DQogIGNvbG9yOiByZ2IoMCwgMCwgMCk7DQp9DQoNCi5wYW5lbC1oZWFkZXIgbGFiZWwgew0KICBjb2xvcjogcmdiKDE0OCwgMTQ0LCAxNDQpOw0KfQ0KDQoucGFuZWwtaGVhZGVyOmhvdmVyIHsNCiAgb3ZlcmZsb3c6IHZpc2libGU7DQp9ICAqLw0KDQouaHdlbGVtZW50IHsNCiAgICBoZWlnaHQ6IDIyMHB4Ow0KfQ0KDQo="},{"version":3,"sources":["HWElement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"HWElement.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"hwelement\" @mousedown=\"onMouseDown\">\r\n        <!--<v-app class=\"openelement\" > class='hwelement' :class=\"{ openelement: !iselementOpenClose}\" -->\r\n        <v-container>\r\n            <v-card outlined>\r\n                <v-toolbar :color=colorToolbar dark hide-on-scroll dense class=\"drag-handle\">\r\n                    <v-btn icon @click=\"shoeModeDeclaration\">\r\n                        <v-icon>mdi-heart</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>HW Element</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text  v-if=\"iselementOpenClose\">\r\n                    <v-row>\r\n                        <v-col>\r\n                            <v-btn text @click=\"addHWElement\" x-small>\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                        <v-col>\r\n                            <v-btn @click=\"openallList\" x-small> all </v-btn>\r\n                            <v-btn @click=\"closeallList\" x-small>none</v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-btn v-if=\"isSelectMode==true\" @click=\"selectHWElement\" x-small> select </v-btn>\r\n                    <v-btn v-if=\"isSelectMode==true\" @click=\"cancleSelectMode\" x-small>cancle</v-btn>\r\n                    <v-text-field v-if=\"this.iselementadd == true\" label=\"name\" v-model=\"editedHWElementItem.name\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-text-field v-if=\"this.iselementadd == true\" label=\"category\" v-model=\"editedHWElementItem.category\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-expansion-panels v-model=\"panelHWElement\" focusable dense multiple>\r\n                        <v-expansion-panel v-for=\"(item,i) in HWElementItem\" :key=\"i\">\r\n                            <v-expansion-panel-header>\r\n                                <div class=\"panel-header\">\r\n                                    <!-- <v-checkbox v-model=\"selectedHWElementItem\" :value=\"item.name\" @click.native.stop /> -->\r\n                                    <input v-if=\"isSelectMode==true\" type=\"checkbox\" v-model=\"selectedHWElementItem\" :value=\"item.name\">\r\n                                    <v-btn color=\"blue darken-1\" text @click.native.stop=\"deleteHWElementItem(i)\" x-small>\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                        <label> name </label>\r\n                                    <span>{{ item.name }}</span>\r\n                                </div>\r\n                                <template v-slot:actions>\r\n                                    <v-icon v-if=\"item.name == ''\" color=\"error\">mdi-alert-circle</v-icon>\r\n                                </template>\r\n                            </v-expansion-panel-header>\r\n                            <v-expansion-panel-content>\r\n                                <v-tooltip bottom :disabled=\"item.category.length < 3\">\r\n                                    <template v-slot:activator=\"{ on, attrs }\">\r\n                                        <div class=\"subtitle-2\" v-bind=\"attrs\" v-on=\"on\">HW Category</div>\r\n                                    </template>\r\n                                    <span>{{item.category.join(', ')}}</span>\r\n                                </v-tooltip>\r\n                                <v-chip-group active-class=\"primary--text\">\r\n                                    <v-chip v-for=\"(n, index) in item.category\" :key=\"index\" x-small outlined>{{ n }}</v-chip>\r\n                                </v-chip-group>\r\n                                <v-divider class=\"my-2\"></v-divider>\r\n                                <div class=\"subtitle-2\">HW-ATTRIBUTE-VALUES</div>\r\n                                <v-data-table v-model=\"selectdeleteAttribut\" show-select :headers=\"headersAttribut\" :items='item.attributeValue'  hide-default-footer  item-key=\"attributedef\" class=\"elevation-1\">\r\n                                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                    </template>\r\n                                </v-data-table>\r\n                            </v-expansion-panel-content>\r\n                        </v-expansion-panel>\r\n                    </v-expansion-panels>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n        <!-- </v-app> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            colorToolbar: \"#6A5ACD\",\r\n            panelHWElement: [],\r\n            selectedHWElementItem: [],\r\n            HWElementItem: [\r\n                {   name: 'Memory_1',\r\n                    category: [ 'MemorySegment', 'MemorySegment1', 'MemorySegment2', 'MemorySegment3'],\r\n                    attributeValue: [\r\n                        {   attributedef: 'memoryType',\r\n                            vt: 'EEPROM',\r\n                            v: '100000000',\r\n                        },\r\n                        {   attributedef: 'memorySize',\r\n                            vt: 'EEPROM',\r\n                            v: '100000000',\r\n                        },\r\n                ]},\r\n                {   name: 'SUPER_MACHINE_MEMORY_EEPROM',\r\n                    category: [ 'MemorySegment',],\r\n                    attributeValue: [\r\n                        {   attributedef: 'memoryType',\r\n                            vt: 'EEPROM',\r\n                            v: '100000000',\r\n                        },\r\n                        {   attributedef: 'memorySize',\r\n                            vt: 'EEPROM',\r\n                            v: '100000000',\r\n                        },\r\n\r\n                ]},\r\n            ],\r\n            editedHWElementItem: {\r\n                name: '',\r\n                category: [],\r\n            },\r\n            defaultHWElementItem: {\r\n                name: '',\r\n                category: [],\r\n            },\r\n            headersAttribut: [\r\n                { text: 'HW Attribute', align: 'start', sortable: false, value: 'attributedef' },\r\n                { text: 'Type',  sortable: false, value: 'vt' },\r\n                { text: 'Size', sortable: false, value: 'v' },\r\n            ],\r\n            iselementadd: false,\r\n            selectdeleteAttribut: [],\r\n            isSelectMode: false,\r\n            iselementOpenClose: true,\r\n            isoutsideViewPort: false, //요소가 화면밖에 있는지 알려줌\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on(\"select-HWElement\", (selectMode) => {\r\n            this.isSelectMode = selectMode\r\n        })\r\n        EventBus.$on(\"onActivated-HWElem\", (onActivated) => {\r\n            if (onActivated == 2) { \r\n                this.colorToolbar =\"#FF1493\" \r\n            } else if (onActivated == 1){ \r\n                this.colorToolbar = \"#A52A2A\" \r\n                this.calculatViewPort()\r\n                EventBus.$emit('reponse-outsideView', 3, this.isoutsideViewPort)\r\n            } else if (onActivated == 0){\r\n                this.colorToolbar = \"#6A5ACD\"\r\n                this.isoutsideViewPort = false\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        onMouseDown () {\r\n            //EventBus.$emit('active-element',3) //move를 toolbar로만 바꾸니까 딸린 창을 누르면 active가 안되서 이벤트로 전해준다.\r\n        },\r\n        shoeModeDeclaration () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        openallList () {\r\n            this.panelHWElement = Array.from(Array(this.HWElementItem.length).keys());\r\n        },\r\n        closeallList () {\r\n            this.panelHWElement = []\r\n        },\r\n        addHWElement () {\r\n            if(this.iselementadd == true) {\r\n                if (this.editedHWElementItem.name != '') {\r\n                    this.HWElementItem.push(this.editedHWElementItem)\r\n                }\r\n                this.iselementadd = false;\r\n                this.editedHWElementItem = Object.assign({}, this.defaultHWElementItem)\r\n            } else{\r\n                this.iselementadd = true;\r\n            }\r\n        },\r\n        deleteHWElementItem (index) {\r\n            this.HWElementItem.splice(index,1)\r\n        },\r\n        selectHWElement () {\r\n            if (this.selectedHWElementItem.length == 0) {\r\n                alert(\"choose one item\")\r\n                return\r\n            }\r\n            EventBus.$emit(\"selected-HWElement\", this.selectedHWElementItem);\r\n            this.selectedHWElementItem = []\r\n            this.panelHWElement = []\r\n            this.isSelectMode = false\r\n        },\r\n        cancleSelectMode () {\r\n            this.isSelectMode = false\r\n            this.selectedHWElementItem = []\r\n            this.panelHWElement = []\r\n        },\r\n        calculatViewPort () { //요게 minimap을 넣어놓으면 minimap안에 있을걸 가리키기 떄문에 안먹는다. \r\n            const target = document.getElementById('hwelement'); // 요소의 id 값\r\n            const clientRect = target.getBoundingClientRect(); // DomRect 구하기 (각종 좌표값이 들어있는 객체)\r\n            const relativeTop = clientRect.top; // Viewport의 시작지점을 기준으로한 상대좌표 Y 값.\r\n            const relativeLeft = clientRect.left\r\n\r\n            //alert(document.documentElement.clientHeight + '+' + relativeTop)\r\n            if ( relativeTop < 0  || relativeTop > document.documentElement.clientHeight ||\r\n                 relativeLeft < 0 || relativeLeft > document.documentElement.clientWidth ) {\r\n                this.isoutsideViewPort = true\r\n            } else {\r\n                this.isoutsideViewPort = false\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* .panel-header {\r\n  height: 18px;\r\n  width: 140px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 0 5px 0 5px;\r\n  text-decoration: none;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: rgb(0, 0, 0);\r\n}\r\n\r\n.panel-header label {\r\n  color: rgb(148, 144, 144);\r\n}\r\n\r\n.panel-header:hover {\r\n  overflow: visible;\r\n}  */\r\n\r\n.hwelement {\r\n    height: 220px;\r\n}\r\n\r\n</style>\r\n"]}]}