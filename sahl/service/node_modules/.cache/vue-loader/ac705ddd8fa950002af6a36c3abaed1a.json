{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\APErrorSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\APErrorSet.vue","mtime":1667797872859},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["APErrorSet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"APErrorSet.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showErrorSet\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>AP Application Error Set</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>AP Application Error Set</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputErrorSetName' @click=\"clickOtherFields()\" outlined dense></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/error'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showErrorRef\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isErrorRefOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Error Reference\r\n                                    <v-btn @click=\"isCheckErrorRef\" text x-small color=\"indigo\" v-if=\"isErrorRefOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isErrorRefOpenClose && isdeleteErrorRefItem\" @click=\"deletErrorRef\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isErrorRefOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectErrorRef\" :headers=\"headerErrorRef\" :items=\"element.errorref\" :items-per-page='$setNumTableList'\r\n                                            :show-select=\"isdeleteErrorRefItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer @click:row=\"rowClick\" single-select>\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteErrorRefItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-icon v-if=\"header.value == 'refView'\" class=\"refView-tableItem\" :color=\"refError === item.id ? 'red' : null \" @click=\"rowClick(idx)\">mdi-pencil</v-icon>\r\n                                                        <v-edit-dialog v-if=\"header.value != 'refView'\" persistent @open=\"openErrorRef(idx)\" @cancel=\"cancelErrorRef\" @save=\"editErrorRef(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editItem.error' label='Error Reference' :items='selError' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingError\" clearable @click=\"setErrorSelect()\" \r\n                                                                            @click:clear='clearErrorRef' @blur=\"isEditingError=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newError\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelErrorRef\" @save=\"addErrorRef()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editItem.error' label='Error Reference' :items='selError' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingError\" clearable @click=\"setErrorSelect()\" \r\n                                                                            @click:clear='clearErrorRef' @blur=\"isEditingError=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newError\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else>\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent scrollable width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;height: 50px;\">&#60;AP-APPLICATION-ERROR-REFS&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextErrorRef()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <div class=\"text-editDialog\" style=\"height: 180px;\">\r\n                            <br>\r\n                            <v-row v-for=\"(item, i) in editARXML.errorref\" :key=\"i\" style=\"height: 40px;\">\r\n                                <v-btn style=\"margin: 10px -15px 0px 15px\" @click=\"deletTextErrorRef(i)\" text x-small color=\"indigo\">\r\n                                    <v-icon>mdi-minus</v-icon>\r\n                                </v-btn>\r\n                                <label style=\"padding:10px;\">&#60;AP-APPLICATION-ERROR-REF&#62;</label>\r\n                                <v-text-field v-model=\"item.error\" placeholder=\"Path\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                <label style=\"padding:10px;\">&#60;&#47;AP-APPLICATION-ERROR-REF&#62;</label>\r\n                            </v-row>\r\n                        </div>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;&#47;AP-APPLICATION-ERROR-REFS&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        /*detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },*/\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: true,//this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogText: false,\r\n            editARXML: {name:'', errorref: []},\r\n            editTextItem: { error : null, id: ''},        \r\n            isErrorRefOpenClose: true,\r\n            selError: this.$store.getters.getError,\r\n            isEditingError: true,\r\n            isdeleteErrorRefItem: false,\r\n            selectDelectErrorRef: [],\r\n            headerErrorRef: [\r\n                { text: '', sortable: false, value: 'refView', width: '5px' },\r\n                { text: 'AP Application Error Ref', align: 'start', sortable: false, value: 'error' },\r\n            ],\r\n            errorItem: [],\r\n            editItem: { error : null, id: ''},\r\n            deleteChangeLine : [],\r\n            refError: null,\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n        EventBus.$on(this.element.uuid, (refNum, idxID) => {\r\n            this.refError = null\r\n            if (refNum == 1) {\r\n                this.refError = idxID\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showErrorSet () {\r\n            this.clickOtherFields()\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLine')\r\n            })\r\n        },\r\n        showErrorRef() {\r\n            this.clickOtherFields()\r\n            this.isErrorRefOpenClose = this.isErrorRefOpenClose ? false : true\r\n        },\r\n        inputErrorSetName () {\r\n            this.$store.commit('editErrorSet', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clickOtherFields() {\r\n            this.refError = null\r\n            this.deleteOpenElement()\r\n        },\r\n        rowClick(idx) {\r\n            console.log('rowClick ' + idx)\r\n            if (this.refError != this.element.errorref[idx].id) { // 같은거 계속 누르면 안됨\r\n                //기존것 delete하고 \r\n                this.deleteOpenElement()\r\n                // 새로들어온 idx line draw\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+this.element.errorref[idx].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getErrorPath(this.element.errorref[idx].error)\r\n                }\r\n                if (endLine != null) {\r\n                    // 기존에 있던거 좌표 바꿔줘야함.\r\n                    var isExist = true\r\n                    if (this.$store.getters.getDeleteOpenElement(endLine) == -1) {\r\n                        this.$store.commit('editError', {compo:\"drag\", uuid: endLine, top: this.element.top + 100, left: this.element.left + this.$setPositionLeft} )\r\n                        isExist = false\r\n                    }\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Error_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/error', endLine, isExist)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/error', end:endLine, iscircle:false, refNum:1, idxID: this.element.errorref[idx].id})\r\n                }\r\n                this.refError = this.element.errorref[idx].id\r\n            }\r\n        },\r\n\r\n        isCheckErrorRef() {\r\n            if (this.isdeleteErrorRefItem == true) {\r\n                this.isdeleteErrorRefItem = false\r\n                this.selectDelectErrorRef = []\r\n            } else {\r\n                if (this.refError != null) {\r\n                    this.deleteOpenElement()\r\n                    this.refError = null\r\n                }\r\n                this.isdeleteErrorRefItem = true\r\n            }\r\n        },\r\n        deletErrorRef() {\r\n            if (this.isdeleteErrorRefItem == true) {\r\n                this.selectDelectErrorRef.forEach(item => {\r\n                    for(let i=0; i<this.element.errorref.length; i++){\r\n                        if (item.id == this.element.errorref[i].id) {\r\n                            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+this.element.errorref[i].id)\r\n                            if(endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/error-'+this.element.errorref[i].id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.element.errorref = this.element.errorref.filter(item => {\r\n                        return this.selectDelectErrorRef.indexOf(item) < 0 })\r\n\r\n                this.isdeleteErrorRefItem = false\r\n                this.selectDelectErrorRef = []\r\n            } \r\n        },\r\n        openErrorRef(idx) {\r\n            this.selError = this.$store.getters.getError\r\n            if ( this.element.errorref[idx].error != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+this.element.errorref[idx].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getErrorPath(this.element.errorref[idx].error)\r\n                }\r\n                this.editItem.error = { name: this.element.errorref[idx].error, uuid: endLine }\r\n            }\r\n        },\r\n        editErrorRef(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+this.element.errorref[idx].id)\r\n            if (endLine != undefined && this.editItem.error == null) {\r\n                this.deleteLine(this.element.uuid+'/error-'+this.element.errorref[idx].id)\r\n                this.element.errorref[idx].error = null\r\n            } else if (endLine != undefined && endLine != this.editItem.error.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/error-'+this.element.errorref[idx].id)\r\n                this.newLine(this.element.uuid+'/error-'+this.element.errorref[idx].id, this.element.uuid+'/error', this.editItem.error.uuid, false)\r\n                this.element.errorref[idx].error = this.editItem.error.name\r\n            } else if (endLine == undefined && this.editItem.error != null && this.editItem.error.uuid != null) {\r\n                this.newLine(this.element.uuid+'/error-'+this.element.errorref[idx].id, this.element.uuid+'/error', this.editItem.error.uuid, false)\r\n                this.element.errorref[idx].error = this.editItem.error.name\r\n            }\r\n\r\n            if (this.refError == this.element.errorref[idx].id) {\r\n                this.deleteOpenElement()\r\n                if (this.editItem.error != null && this.editItem.error.uuid != null) {\r\n                    var isExist = true, endLineChange = this.editItem.error.uuid\r\n                    if (this.$store.getters.getDeleteOpenElement(this.editItem.error.uuid) == -1) {\r\n                        this.$store.commit('editError', {compo:\"drag\", uuid: this.editItem.error.uuid, top: this.element.top + 100, left: this.element.left + this.$setPositionLeft} )\r\n                        isExist = false\r\n                    }\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Error_str, uuid: this.editItem.error.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/error', endLineChange, isExist)\r\n                        document.getElementById(endLineChange+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/error', end:this.editItem.error.uuid, iscircle:false, refNum:1, idxID: this.refError})\r\n                }\r\n            }\r\n            \r\n            this.cancelErrorRef()\r\n        },\r\n        cancelErrorRef() {\r\n            this.editItem.error = null\r\n            this.setactiveUUID()\r\n        },\r\n        addErrorRef() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.errorref.some(item => item.id === n)\r\n            }\r\n            this.editItem.id = n\r\n            this.deleteOpenElement()\r\n            if( this.editItem.error != null) {\r\n                var endLine = this.editItem.error.uuid\r\n                var isExist = true\r\n                if (this.$store.getters.getDeleteOpenElement(this.editItem.error.uuid) == -1) {\r\n                    this.$store.commit('editError', {compo:\"drag\", uuid: this.editItem.error.uuid, top: this.element.top + 100, left: this.element.left + this.$setPositionLeft} )\r\n                    isExist = false\r\n                }\r\n                this.$store.commit('setzIndexVisible', {parent:constant.Error_str, uuid: this.editItem.error.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                this.editItem.error = this.editItem.error.name\r\n                this.$nextTick(() => { \r\n                    this.newLine(this.element.uuid+'/error-'+n, this.element.uuid+'/error', endLine, true, isExist)\r\n                    document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                })\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/error', end:endLine, iscircle:false, refNum:1, idxID: this.editItem.id})\r\n            }\r\n            const addObj = Object.assign({}, this.editItem)\r\n            this.element.errorref.push(addObj);\r\n            this.refError = n\r\n            console.log('//  ' + this.refError)\r\n\r\n            this.cancelErrorRef()\r\n        },\r\n\r\n        clearErrorRef() {\r\n            this.isEditingError = true\r\n            this.editItem.error = null\r\n        },\r\n        setErrorSelect() {\r\n            if (this.isEditingError == true) {\r\n                if (this.editItem.error != null && this.editItem.error.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editItem.error.uuid, element: constant.Error_str} )\r\n                    /*document.getElementById(this.editItem.error.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editItem.error.uuid)*/\r\n                }\r\n                this.setErrorList()\r\n                this.isEditingError = false\r\n            } else {\r\n                this.isEditingError = true\r\n            }\r\n        },\r\n        setErrorList() {\r\n            this.selError = this.$store.getters.getError\r\n            this.setactiveUUID()\r\n        },\r\n        newError() {\r\n            this.$store.commit('addElementError', {\r\n                name: this.$store.getters.getNameError, path: '', input: false,\r\n                top: this.element.top + 100, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                desc: '', errorcode: '', errorDref: null\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.Error_str)\r\n            this.$store.commit('editErrorSet', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editErrorSet', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n                this.deleteOpenElement()\r\n            }\r\n        },\r\n        deleteOpenElement() {\r\n            //EventBus.$emit('delete-line', this.$store.getters.getDeleteOpenElement(this.element.uuid))\r\n            this.$store.commit('deleteOpenElemnt', {uuid: this.element.uuid, isDeleteAll: false, startUUID: this.element.uuid} )\r\n        },\r\n        newLine(startLine, drawLine, endLine, isView, isExist) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            if (isView) {\r\n                EventBus.$emit('new-line', drawLine, endLine, isExist)\r\n            }\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.errorref = JSON.parse(JSON.stringify(this.element.errorref))\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editErrorSet', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n            \r\n            if (this.editARXML.errorref.length > 0) {\r\n                this.editARXML.errorref.forEach(item => {\r\n                    var isHaveTable = false\r\n                    for(let n=0; n<this.element.errorref.length; n++){\r\n                        if (this.element.errorref[n].id == item.id &&\r\n                            this.element.errorref[n].error == item.error) {\r\n                            isHaveTable = true\r\n                        }\r\n                    }\r\n                    if (!isHaveTable) {\r\n                        var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+item.id)\r\n                        if (endLine != undefined) {\r\n                            this.deleteLine(this.element.uuid+'/error-'+item.id)\r\n                        }\r\n                        var chandEndLine = this.$store.getters.getErrorPath(item.error)\r\n                        if (chandEndLine != null) {\r\n                            this.newLine(this.element.uuid+'/error-'+item.id, this.element.uuid+'/error', chandEndLine, false)\r\n                        }\r\n                    }\r\n                })\r\n                this.element.errorref.forEach(item => {\r\n                    var isHaveTable = false\r\n                    this.editARXML.errorref.forEach(edit => {\r\n                        if (edit.id == item.id) {\r\n                            isHaveTable = true\r\n                        }\r\n                    })\r\n                    if (!isHaveTable) {\r\n                        var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+item.id)\r\n                        if (endLine != undefined) {\r\n                            this.deleteLine(this.element.uuid+'/error-'+item.id)\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                this.element.errorref.forEach(item => {\r\n                    if (item.error != null) {\r\n                        var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/error-'+item.id)\r\n                        if (endLine != undefined) {\r\n                            this.deleteLine(this.element.uuid+'/error-'+item.id)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            this.element.errorref = JSON.parse(JSON.stringify(this.editARXML.errorref))\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', errorref: []}\r\n            this.editTextItem = { error : null, id: ''}\r\n            this.dialogText = false\r\n        },\r\n        newTextErrorRef() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.editARXML.errorref.some(item => item.id === n)\r\n            }\r\n            this.editTextItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextItem)\r\n            this.editARXML.errorref.push(addObj);\r\n        },\r\n        deletTextErrorRef(idx) {\r\n            this.editARXML.errorref.splice(idx,1)\r\n        },\r\n    },\r\n}\r\n</script>"]}]}