{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\implementationData.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\implementationData.vue","mtime":1638427871009},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["implementationData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"implementationData.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined>\r\n                <v-toolbar v-if=\"!isDatailView\" :color=\"colorToolbar\" dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showImplementationData\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-toolbar-title>Implementation Data Type</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Implementation Data Type</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputImplementationName' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"element.category\" label=\"Category\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-text-field v-model=\"element.namespace\" label=\"Name space\" placeholder=\"String/String/...\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-text-field v-model=\"element.arraysize\" label=\"Array Size\" placeholder=\"Integer\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-text-field v-model=\"element.typeemitter\" label=\"Type Emitter\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-autocomplete :id=\"element.uuid+'/typeref'\" v-model='element.typeref' label='Type Reference' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                          return-object :readonly=\"!isEditingTypeRef\" clearable @click:clear='clearTypeRef' @click=\"setTypeRefSelect()\" @change=\"inputImplementationTypeRef\" @blur=\"isEditingTypeRef=true\" outlined dense style=\"height: 45px;\">\r\n                          <template v-slot:append-item>\r\n                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                <v-icon >mdi-plus</v-icon>New Item\r\n                            </v-btn>\r\n                        </template>\r\n                    </v-autocomplete>\r\n                    <v-autocomplete :id=\"element.uuid+'/templateType'\" v-model='element.templatetype' label='Template Type' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                          return-object :readonly=\"!isEditingtemplateType\" clearable @click:clear='clearTemplateType' @click=\"setTemplateTypeSelect()\" @change=\"inputImplementationTemplateType\" @blur=\"isEditingtemplateType=true\" outlined dense style=\"height: 45px;\">\r\n                          <template v-slot:append-item>\r\n                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                <v-icon >mdi-plus</v-icon>New Item\r\n                            </v-btn>\r\n                        </template>\r\n                    </v-autocomplete>\r\n                    <v-text-field v-model=\"element.desc\" label=\"Desc\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/DDPC'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showDDPCItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isDDPCOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Data Def Props Conditional\r\n                            <v-btn @click=\"isCheckDDPC\" text x-small color=\"indigo\" v-if=\"isDDPCOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn  v-if=\"isDDPCOpenClose && isdeleteDDPCItem\" @click=\"deleteDDPC\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isDDPCOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectDDPCItem\" :headers=\"headerDDPC\" :items=\"DDPCItem\" :id=\"element.uuid+'/ddpctable'\"\r\n                                    :show-select=\"isdeleteDDPCItem\" item-key=\"compumethod\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteDDPCItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <!-- <v-icon v-if=\"header.value == 'sort'\" small class=\"sortHandle\" >mdi-arrow-all</v-icon> -->\r\n                                                <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openDDPC(idx)\" @cancel=\"editDDPC(idx)\" @save=\"cancelDDPC\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editDDPCItem.compumethod' label='Compu Method' :items='selCompuMethod' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingCompuMethod\" @click=\"setCompuMethodSelect()\" @blur=\"isEditingCompuMethod=true\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-autocomplete v-model='editDDPCItem.dataconstr' label='Data Constr' :items='selDataConstr' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingDataConstr\"  @click=\"setDataConstrSelect()\" @blur=\"isEditingDataConstr=true\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addDDPC()\" @save=\"cancelDDPC\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editDDPCItem.compumethod' label='Compu Method' :items='selCompuMethod' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingCompuMethod\" @click=\"setCompuMethodSelect()\" @blur=\"isEditingCompuMethod=true\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-autocomplete v-model='editDDPCItem.dataconstr' label='Data Constr' :items='selDataConstr' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingDataConstr\" @click=\"setDataConstrSelect()\" @blur=\"isEditingDataConstr=true\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/IDTElement'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showIDTElementItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isIDTElementOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Implementation Data Type\r\n                            <v-btn @click=\"isCheckIDTElement\" text x-small color=\"indigo\" v-if=\"isIDTElementOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn v-if=\"isIDTElementOpenClose && isdeleteIDTElementItem\" @click=\"deleteIDTElement\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isIDTElementOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectIDTElementItem\" :headers=\"headerIDTElement\" :items=\"IDTElementItem\" :id=\"element.uuid+'/idtetable'\"\r\n                                    :show-select=\"isdeleteIDTElementItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteIDTElementItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openIDTElement(idx)\" @cancel=\"editIDTElement(idx)\" @save=\"cancelIDTElement\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingIDTETypeRef\" @click=\"setIDTElementSelect()\" @blur=\"isEditingIDTETypeRef=true\" outlined dense style=\"height: 45px;\">\r\n                                                            <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\" @click=\"setactiveUUID()\"></v-checkbox>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addIDTElement()\" @save=\"cancelIDTElement\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingIDTETypeRef\" @click=\"setIDTElementSelect()\" @blur=\"isEditingIDTETypeRef=true\" outlined dense style=\"height: 45px;\">\r\n                                                            <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\" @click=\"setactiveUUID()\"></v-checkbox>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"element.name\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView'],\r\n    computed: { \r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            uuid: this.element.uuid,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: true, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isEditingTypeRef: true,\r\n            isEditingtemplateType: true,\r\n            isEditingCompuMethod: true,\r\n            isEditingDataConstr: true,\r\n            isDDPCOpenClose: true,\r\n\r\n            isdeleteDDPCItem: false,\r\n            headerDDPC: [\r\n                { text: '', sortable: false, value: 'sort' },\r\n                { text: 'Compu Method', align: 'start', sortable: false, value: 'compumethod' },\r\n                { text: 'Data Constr', sortable: false, value: 'dataconstr' },\r\n            ],\r\n            DDPCItem:  [],\r\n            selectDelectDDPCItem: [],\r\n            defaultDDPCItem: { compumethod: '', dataconstr: '' },\r\n            editDDPCItem: { compumethod: '', dataconstr: '' },\r\n            selCompuMethod: this.$store.getters.getCompuMethod,\r\n            selDataConstr: this.$store.getters.getDataConstr,\r\n            selTemplateType: this.$store.getters.getImplementationDataType,\r\n\r\n            isIDTElementOpenClose: true,\r\n            isdeleteIDTElementItem: false,\r\n            isEditingIDTETypeRef: true,\r\n            headerIDTElement: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type Reference​', sortable: false, value: 'typeref' },\r\n                { text: 'Inplace', sortable: false, value: 'inplace' },\r\n                { text: 'Desc', sortable: false, value: 'desc' }\r\n            ],\r\n            IDTElementItem: [],\r\n            selectDelectIDTElementItem: [],\r\n            defaultIDTElementItem: { name: '', typeref: '', inplace: false, desc: '' },\r\n            editIDTElementItem: { name: '', typeref: '', inplace: false, desc: '' },\r\n            changeLineImp: [],\r\n            changeLineDDPC: [],\r\n        }\r\n    },\r\n    mounted () {\r\n        this.$nextTick(() => {\r\n            if(this.element.ddpc != undefined) {\r\n                this.DDPCItem = this.element.ddpc.slice()\r\n            }\r\n            if(this.element.idtelement != undefined) {\r\n                this.IDTElementItem = this.element.idtelement.slice()\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showImplementationData() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        showDDPCItem() {\r\n            this.isDDPCOpenClose = this.isDDPCOpenClose ? false : true\r\n        },\r\n        showIDTElementItem() {\r\n            this.isIDTElementOpenClose = this.isIDTElementOpenClose ? false : true\r\n        },\r\n        inputImplementationName() {\r\n            this.$store.commit('editImplementation', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changeNameImplementation', {uuid:this.element.uuid, name:this.element.name} )\r\n        },\r\n        inputImplementationTypeRef() {\r\n            if( this.element.typeref != '') {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n                if (endLine != undefined && endLine != this.element.typeref.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/typeref')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/typeref', this.element.uuid+'/typeref', this.element.typeref.uuid)\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        inputImplementationTemplateType() {\r\n            if( this.element.templatetype != '') {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n                if (endLine != undefined && endLine != this.element.templatetype.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/templateType')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/templateType', this.element.uuid+'/templateType', this.element.templatetype.uuid)\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        clearTemplateType() {\r\n            this.isEditingtemplateType=true\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n            if (endLine != undefined) {\r\n                this.element.templatetype = null\r\n                this.deleteLine(this.element.uuid+'/templateType')\r\n            }\r\n        },\r\n        clearTypeRef() {\r\n            this.isEditingTypeRef=true\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n            if (endLine != undefined) {\r\n                this.element.typeref = null\r\n                this.deleteLine(this.element.uuid+'/typeref')\r\n            }\r\n        },\r\n        inputDDPC() {\r\n            this.$store.commit('editImplementation', {compo:\"DDPC\", uuid:this.element.uuid, ddpc:this.DDPCItem} )\r\n        },\r\n        inputIDTElement() {\r\n            this.$store.commit('editImplementation', {compo:\"IDT Element\", uuid:this.element.uuid, idtelement:this.IDTElementItem} )\r\n        },\r\n        isCheckDDPC() {\r\n            if (this.isdeleteDDPCItem == true) {\r\n                this.isdeleteDDPCItem = false\r\n                this.selectDelectDDPCItem = []\r\n            } else {\r\n                this.isdeleteDDPCItem = true\r\n            }\r\n        },\r\n        deleteDDPC() {\r\n            if (this.isdeleteDDPCItem == true) {\r\n                for(let i=0; i<this.DDPCItem.length; i++){\r\n                    var endLineCom = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+i)\r\n                    if(endLineCom != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/ddpccompu-'+i)\r\n                    }\r\n                    var endLineData = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+i)\r\n                    if(endLineData != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/ddpcdata-'+i)\r\n                    }\r\n                    if(endLineCom != undefined || endLineData != undefined) {\r\n                        this.changeLineDDPC.push({compumethod:this.DDPCItem[i].compumethod, dataconstr:this.DDPCItem[i].dataconstr, endLineCom:endLineCom, endLineData:endLineData})\r\n                    }\r\n                }\r\n\r\n                this.DDPCItem = this.DDPCItem.filter(item => {\r\n                         return this.selectDelectDDPCItem.indexOf(item) < 0 })\r\n\r\n                let idx = 0 \r\n                for(let n=0; n<this.DDPCItem.length; n++) {\r\n                    let rigth= true\r\n                    while (rigth) {\r\n                        console.log('while'+ idx+'+'+this.changeLineDDPC[idx].compumethod +'+'+this.changeLineDDPC[idx].dataconstr)\r\n                        console.log('while'+ idx+'+'+this.DDPCItem[n].compumethod +'+'+this.DDPCItem[n].dataconstr)\r\n                        if (this.DDPCItem[n].compumethod == this.changeLineDDPC[idx].compumethod &&\r\n                            this.DDPCItem[n].dataconstr == this.changeLineDDPC[idx].dataconstr) {\r\n                                rigth = false\r\n                                idx--\r\n                        }\r\n                        idx++\r\n                    }\r\n                    console.log('escape')\r\n                    if (this.DDPCItem[n].compumethod != '') {\r\n                        this.newLine(this.element.uuid+'/ddpccompu-'+n, this.element.uuid+'/DDPC', this.changeLineDDPC[idx].endLineCom)\r\n                    }\r\n                    if (this.DDPCItem[n].dataconstr != '') {\r\n                        this.newLine(this.element.uuid+'/ddpcdata-'+n, this.element.uuid+'/DDPC', this.changeLineDDPC[idx].endLineData)\r\n                    }\r\n                }\r\n\r\n                this.isdeleteDDPCItem = false\r\n                this.selectDelectDDPCItem = []\r\n                this.changeLineDDPC = []\r\n                this.inputDDPC()\r\n            } \r\n        },\r\n        openDDPC(idx) {\r\n            this.editDDPCItem.compumethod = { name :this.DDPCItem[idx].compumethod, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+idx) }\r\n            this.editDDPCItem.dataconstr = { name :this.DDPCItem[idx].dataconstr, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+idx) }\r\n        },\r\n        addDDPC() {\r\n            var datacount\r\n            if(this.DDPCItem == undefined) {\r\n                datacount = 0\r\n            }else {\r\n                datacount = this.DDPCItem.length\r\n            }\r\n\r\n            if( this.editDDPCItem.compumethod != '') {\r\n                this.newLine(this.element.uuid+'/ddpccompu-'+datacount, this.element.uuid+'/DDPC', this.editDDPCItem.compumethod.uuid)\r\n                this.editDDPCItem.compumethod = this.editDDPCItem.compumethod.name\r\n            }\r\n            if( this.editDDPCItem.dataconstr != '') {\r\n                this.newLine(this.element.uuid+'/ddpcdata-'+datacount, this.element.uuid+'/DDPC', this.editDDPCItem.dataconstr.uuid)\r\n                this.editDDPCItem.dataconstr = this.editDDPCItem.dataconstr.name\r\n            }\r\n            const addObj = Object.assign({}, this.editDDPCItem)\r\n            this.DDPCItem.push(addObj)\r\n            this.cancelDDPC()\r\n            this.inputDDPC()\r\n        },\r\n        editDDPC(idx) {\r\n            var endcompuLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+idx)\r\n            if (endcompuLine != undefined && endcompuLine != this.editDDPCItem.compumethod.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/ddpccompu-'+idx)\r\n                this.newLine(this.element.uuid+'/ddpccompu-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.compumethod.uuid)\r\n            }\r\n\r\n            var enddataLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+idx)\r\n            if (enddataLine != undefined && enddataLine != this.editDDPCItem.dataconstr.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/ddpcdata-'+idx)\r\n                this.newLine(this.element.uuid+'/ddpcdata-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.dataconstr.uuid)\r\n            }\r\n            this.DDPCItem[idx].compumethod = this.editDDPCItem.compumethod.name\r\n            this.DDPCItem[idx].dataconstr = this.editDDPCItem.dataconstr.name\r\n            this.cancelDDPC()\r\n            this.inputDDPC()\r\n        },\r\n        cancelDDPC() {\r\n            this.editDDPCItem = Object.assign({}, this.defaultDDPCItem)\r\n            this.setactiveUUID()\r\n        },\r\n        setCompuMethodList() {\r\n            this.selCompuMethod = this.$store.getters.getCompuMethod\r\n            this.setactiveUUID()\r\n        },\r\n        setDataConstrList() {\r\n            this.selDataConstr =  this.$store.getters.getDataConstr\r\n            this.setactiveUUID()\r\n        },\r\n        newCompuMethod() {\r\n            this.$store.commit('addElementCompuMehtod', {\r\n                    name: constant.CompuMethod_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.CompuMethod.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, category:null, scales:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            EventBus.$emit('add-element', constant.CompuMethod_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        newDataConstr() {\r\n            this.$store.commit('addElementDataConstr', {\r\n                    name: constant.DataConstr_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.DataConstr.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, lowerlimit:null, upperlimit:null, icon:\"mdi-clipboard-outline\", validation: false })\r\n            EventBus.$emit('add-element', constant.DataConstr_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setCompuMethodSelect() {\r\n            if (this.isEditingCompuMethod == true) { \r\n                // new에서 들어왔을 때 이게 뭔지 보고싶을때 이건 연결한 상태가 아니기 때문에 enduuid로 찾을수가없다. \r\n                // edit할때랑 new할때랑 생각해봐야함\r\n                if (this.editDDPCItem.compumethod != '') {\r\n                    //var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+idx)\r\n                    this.$store.commit('setDetailView', {uuid: this.editDDPCItem.compumethod.uuid, element: constant.CompuMethod_str} )\r\n                }\r\n                this.setCompuMethodList()\r\n                this.isEditingCompuMethod = false\r\n            } else {\r\n                this.isEditingCompuMethod = true\r\n            }\r\n        },\r\n        setDataConstrSelect() {\r\n            if (this.isEditingDataConstr == true) {\r\n                if (this.editDDPCItem.dataconstr != '') {\r\n                    //var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+idx)\r\n                    this.$store.commit('setDetailView', {uuid: this.editDDPCItem.dataconstr.uuid, element: constant.DataConstr_str} )\r\n                }\r\n                this.setDataConstrList()\r\n                this.isEditingDataConstr = false\r\n            } else {\r\n                this.isEditingDataConstr = true\r\n            }\r\n        },\r\n\r\n        isCheckIDTElement() {\r\n            if (this.isdeleteIDTElementItem == true) {\r\n                this.isdeleteIDTElementItem = false\r\n                this.selectDelectIDTElementItem = []\r\n            } else {\r\n                this.isdeleteIDTElementItem = true\r\n            }\r\n        },\r\n        deleteIDTElement() {\r\n            if (this.isdeleteIDTElementItem == true) {\r\n                for(let i=0; i<this.IDTElementItem.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineImp.push({name:this.IDTElementItem[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/idtetable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.IDTElementItem = this.IDTElementItem.filter(item => {\r\n                         return this.selectDelectIDTElementItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.IDTElementItem.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineImp.length; idx++) {\r\n                        if (this.IDTElementItem[n].name == this.changeLineImp[idx].name) {\r\n                            this.newLine(this.element.uuid+'/idtetable-'+n, this.element.uuid+'/idtetable', this.changeLineImp[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteIDTElementItem = false\r\n                this.selectDelectIDTElementItem = []\r\n                this.changeLineImp = []\r\n                this.inputIDTElement()\r\n            }\r\n        },\r\n        openIDTElement(idx) {\r\n            this.editIDTElementItem.name = this.IDTElementItem[idx].name\r\n            this.editIDTElementItem.typeref = { name: this.IDTElementItem[idx].typeref, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+idx) }\r\n            this.editIDTElementItem.inplace = this.IDTElementItem[idx].inplace\r\n            this.editIDTElementItem.desc = this.IDTElementItem[idx].desc\r\n        },\r\n        addIDTElement() {\r\n            if( this.editIDTElementItem.typeref != '') {\r\n                var datacount\r\n                if(this.IDTElementItem == undefined) {\r\n                    datacount = 0\r\n                }else {\r\n                    datacount = this.IDTElementItem.length\r\n                }\r\n                this.newLine(this.element.uuid+'/idtetable-'+datacount, this.element.uuid+'/idtetable', this.editIDTElementItem.typeref.uuid)\r\n                this.editIDTElementItem.typeref = this.editIDTElementItem.typeref.name\r\n            }\r\n            const addObj = Object.assign({}, this.editIDTElementItem);\r\n            this.IDTElementItem.push(addObj);\r\n            this.cancelIDTElement()\r\n            this.inputIDTElement()\r\n        },\r\n        editIDTElement(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+idx)\r\n            console.log(endLine + '+' + this.editIDTElementItem.typeref.uuid)\r\n            if (endLine != undefined && endLine != this.editIDTElementItem.typeref.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/idtetable-'+idx)\r\n                this.newLine(this.element.uuid+'/idtetable-'+idx, this.element.uuid+'/idtetable', this.editIDTElementItem.typeref.uuid)\r\n            }\r\n\r\n            this.IDTElementItem[idx].name = this.editIDTElementItem.name\r\n            this.IDTElementItem[idx].typeref = this.editIDTElementItem.typeref.name\r\n            this.IDTElementItem[idx].inplace = this.editIDTElementItem.inplace\r\n            this.IDTElementItem[idx].desc = this.editIDTElementItem.desc\r\n            this.cancelIDTElement()\r\n            this.inputIDTElement()\r\n        },\r\n        cancelIDTElement() {\r\n            this.editIDTElementItem = Object.assign({}, this.defaultIDTElementItem)\r\n            this.setactiveUUID()\r\n        },\r\n        setIDTElementSelect() {\r\n            console.log('setIDTElementSelect   ' + this.isEditingIDTETypeRef)\r\n\r\n            if (this.isEditingIDTETypeRef == true) {\r\n                 if (this.editIDTElementItem.typeref != '') {\r\n                    this.$store.commit('setDetailView', {uuid: this.editIDTElementItem.typeref.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setTemplateTypeList()\r\n                this.isEditingIDTETypeRef = false\r\n            } else {\r\n                this.isEditingIDTETypeRef = true\r\n            }\r\n        },\r\n\r\n        setTypeRefSelect() {\r\n            if (this.isEditingTypeRef == true) {\r\n                if (this.element.typeref.name != undefined) {\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n                    this.$store.commit('setDetailView', {uuid: endLine, element: constant.Implementation_str} )\r\n                }\r\n                 this.setTemplateTypeList()\r\n                this.isEditingTypeRef = false\r\n            } else {\r\n                this.isEditingTypeRef = true\r\n            }\r\n        },\r\n        setTemplateTypeSelect() {\r\n            if (this.isEditingtemplateType == true) {\r\n                this.setTemplateTypeList()\r\n                if (this.element.templatetype.name != undefined) {\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n                    this.$store.commit('setDetailView', {uuid: endLine, element: constant.Implementation_str, name: this.element.name} )\r\n                }\r\n                this.isEditingtemplateType = false\r\n            } else { //한번 눌렀을 경우 detail view에 화면 보여줘야한다.\r\n                this.isEditingtemplateType = true \r\n            }\r\n        },\r\n        setTemplateTypeList() {\r\n            this.selTemplateType = this.$store.getters.getImplementationDataType\r\n            this.setactiveUUID()\r\n        },\r\n        newTemplateType() {\r\n            this.$store.commit('addElementImplementation', {\r\n                    name: constant.Implementation_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.ImplementationDataType.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, category:null, namespace:null, \r\n                    arraysize:null, typeemitter:null, typeref: { name:null, uuid:null}, templatetype:{ name:null, uuid:null}, desc:null, ddpc:null, idtelement:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            EventBus.$emit('add-element', constant.Implementation_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delet-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n    },\r\n\r\n}\r\n</script>"]}]}