{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\Process.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\Process.vue","mtime":1667970104691},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Process.vue"],"names":[],"mappingskfile":"Process.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showProcess\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Process</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Process</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-show=\"iselementOpenClose\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputProcessName' outlined dense  @click=\"clickOtherFields()\"></v-text-field>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.prodesign\" readonly @click=\"setProcessDesignSelect()\" :style=\"refDesign ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                 clearable @click:clear='clearProcessDesign()' label=\"Design Reference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processprodesign'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessDesignList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selProcessDesign\" :key=\"i\" link @click=\"setProcessDesign(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcessDesign\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.determin\" readonly @click=\"setDeterminSelect()\" :style=\"refDeterministric ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                 clearable @click:clear='clearDetermin()' label=\"Deterministric Client Reference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processdetermin'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setDeterminList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selDeterministic\" :key=\"i\" link @click=\"setDeterministicClient(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newDeterministicClient\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row style=\"height: 70px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.execut\" readonly @click=\"setExecutableSelect()\" :style=\"refExecutable ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                 clearable @click:clear='clearExecutable()' label=\"Executable Reference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processexecut'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setExecutableList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selExecutable\" :key=\"i\" link @click=\"setExecutable(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-select v-model=\"element.logLevel\" :items=\"logLevel\" label=\"Log Trace Default log Level\" @click=\"[clickOtherFields(),setactiveUUID()]\" @click:clear=\"clickOtherFields()\" clearable outlined dense return-object style=\"height: 45px;\" class=\"lable-placeholer-color\"></v-select>\r\n                            <v-text-field v-model=\"element.logPath\" label=\"Log Trace File Path\" @click=\"clickOtherFields()\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-select v-model=\"element.logMode\" :items=\"logMode\" label=\"Log Trace log Mode\" chips @click=\"[clickOtherFields(),setactiveUUID()]\" @click:clear=\"clickOtherFields()\" style=\"height: 70px;\" outlined multiple class=\"lable-placeholer-color\"></v-select>\r\n                            <v-text-field v-model=\"element.logProDesc\" label=\"Log Trace Process Desc\" @click=\"clickOtherFields()\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.logProID\" label=\"Log Trace Process ID\" @click=\"clickOtherFields()\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.restart\" label=\"Number Of Restart Attempts\" @click=\"clickOtherFields()\" placeholder=\"Int\" style=\"height: 25px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-checkbox v-model=\"element.preMapping\" label=\"Pre Mapping\" value=\"element.preMapping\" :indeterminate=\"element.preMapping==null? true:false\" true-value=\"true\" false-value=\"false\" style=\"height: 35px;\"></v-checkbox>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showStateMachine\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isStateMachineOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Process State Machine\r\n                                </div>\r\n                                <v-card-text v-show=\"isStateMachineOpenClose\">\r\n                                    <v-text-field v-model=\"element.machinname\" label=\"name\" :rules=\"rules.name\" @click=\"clickOtherFields()\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                                    <v-row style=\"height: 70px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.machinetype\" readonly @click=\"setModeDeclarationSelect()\" :style=\"refType ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                         clearable @click:clear='clearModeDeclaration()' label=\"Type TReference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processmodedeclar'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setModeDeclarationList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list>\r\n                                                    <v-list-item v-for=\"(item, i) in selModeDeclaration\" :key=\"i\" link @click=\"setModeDeclaration(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newModeDeclarationGroup\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/processStarupC'\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showDependentStartup\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isDependentStartupOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    State Dependent Startup Config\r\n                                    <v-btn v-if=\"isDependentStartupOpenClose\" @click=\"addDependentStartup\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-plus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-tabs v-model='dependentStartupTab' v-show=\"isDependentStartupOpenClose\" show-arrows @change=\"changeDependentStartupTab()\">\r\n                                    <v-tab v-for=\"(tab, idx) in element.dependent\" :key=\"idx\" @click=\"clickDependentStartuptab()\"> \r\n                                        {{idx}}\r\n                                        <v-btn text x-small @click=\"deleteDependentStartup(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                                </v-tabs>\r\n                                <v-tabs-items v-model=\"dependentStartupTab\" v-show=\"isDependentStartupOpenClose\">\r\n                                    <v-tab-item v-for=\"(tab, idx) in element.dependent\" :key=\"idx\">\r\n                                        <v-card flat>\r\n                                            <v-card-text>\r\n                                                <v-card outlined class=\"mx-auto\">\r\n                                                    <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/edtable'+tab.id\">\r\n                                                        <v-hover v-slot=\"{ hover }\">\r\n                                                            <v-btn text @click=\"showExecutionD\" x-small color=\"indigo\">\r\n                                                                <v-icon>{{ isExecutionDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                            </v-btn>\r\n                                                        </v-hover>\r\n                                                        Execution Dependencys\r\n                                                        <v-btn  v-if=\"isExecutionDOpenClose\" @click=\"isCheckExecutionD\" text x-small color=\"indigo\">\r\n                                                            <v-icon>mdi-check</v-icon>\r\n                                                        </v-btn>\r\n                                                        <v-btn  v-if=\"isdeleteExecutionD && isExecutionDOpenClose\" @click=\"deleteExecutionD\" text x-small color=\"indigo\">\r\n                                                            <v-icon>mdi-minus</v-icon>\r\n                                                        </v-btn>\r\n                                                    </div>\r\n                                                    <v-card-text v-show=\"isExecutionDOpenClose\">\r\n                                                        <v-data-table v-model=\"selectDelectExecutionDItem\" :headers=\"headerFunctionG\" :items=\"tab.execution\" :items-per-page='$setNumTableList'\r\n                                                                :show-select=\"isdeleteExecutionD\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                                            <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                                <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                            </template>\r\n                                                            <template v-if=\"!isdeleteExecutionD\" v-slot:body=\"{ items, headers }\">\r\n                                                                <tbody>\r\n                                                                    <tr v-for=\"(item,num) in items\" :key=\"num\" >\r\n                                                                        <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                            <v-icon v-if=\"header.value == 'refView'\" class=\"refView-tableItem\" :color=\"refExecution === item.id ? 'red' : null \" @click=\"rowExecutionClick(num)\">mdi-pencil</v-icon>\r\n                                                                            <v-edit-dialog v-if=\"header.value != 'refView'\" persistent @open=\"openExecutionD(num)\" @cancel=\"cancelExecutionD\" @save=\"editExecutionD(num)\" large >\r\n                                                                                {{item[header.value]}}\r\n                                                                                <template v-slot:input>\r\n                                                                                    <br> <!--v-autocomplete 여기에서 item의 uuid가 같을경우 item-text='name' item-value=\"uuid\"로 해주면 uuid값이 같기 때문에 item의 list가 다 나오지 않는다 name으로 바꿔야지만 list가 잘나옴 -->\r\n                                                                                    <v-autocomplete v-model='editExecutionDItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingCM\" @click=\"setCMSelect()\" @blur=\"isEditingCM=true\" \r\n                                                                                            clearable @click:clear='clearCMRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                    <v-autocomplete v-model='editExecutionDItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingTM\"  @click=\"setTMSelect()\" @blur=\"isEditingTM=true\" \r\n                                                                                            clearable @click:clear='clearTMRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                </template>\r\n                                                                            </v-edit-dialog>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <th colspan=\"3\">\r\n                                                                            <v-edit-dialog  large persistent @open=\"newOpenDependent()\" @cancel=\"cancelExecutionD\" @save=\"addExecutionD()\"> \r\n                                                                                <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                </v-btn>\r\n                                                                                <template v-slot:input>\r\n                                                                                    <br>\r\n                                                                                    <v-autocomplete v-model='editExecutionDItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingCM\" @click=\"setCMSelect()\" @blur=\"isEditingCM=true\" \r\n                                                                                            clearable @click:clear='clearCMRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                    <v-autocomplete v-model='editExecutionDItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingTM\"  @click=\"setTMSelect()\" @blur=\"isEditingTM=true\" \r\n                                                                                            clearable @click:clear='clearTMRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                </template>\r\n                                                                            </v-edit-dialog>\r\n                                                                        </th>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </template>\r\n                                                        </v-data-table>\r\n                                                    </v-card-text>\r\n                                                </v-card>\r\n                                                <v-card outlined class=\"mx-auto\">\r\n                                                    <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/fgtable'+tab.id\">\r\n                                                        <v-hover v-slot=\"{ hover }\">\r\n                                                            <v-btn text @click=\"showFunctionG\" x-small color=\"indigo\">\r\n                                                                <v-icon>{{ isFunctionGOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                            </v-btn>\r\n                                                        </v-hover>\r\n                                                        Function Group State\r\n                                                        <v-btn  v-if=\"isFunctionGOpenClose\" @click=\"isCheckFunctionG\" text x-small color=\"indigo\">\r\n                                                            <v-icon>mdi-check</v-icon>\r\n                                                        </v-btn>\r\n                                                        <v-btn  v-if=\"isdeleteFunctionG && isFunctionGOpenClose\" @click=\"deleteFunctionG\" text x-small color=\"indigo\">\r\n                                                            <v-icon>mdi-minus</v-icon>\r\n                                                        </v-btn>\r\n                                                    </div>\r\n                                                    <v-card-text v-show=\"isFunctionGOpenClose\">\r\n                                                        <v-data-table v-model=\"selectDelectFunctionGItem\" :headers=\"headerFunctionG\" :items=\"tab.functionItem\" :items-per-page='$setNumTableList'\r\n                                                                :show-select=\"isdeleteFunctionG\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                                            <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                                <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                            </template>\r\n                                                            <template v-if=\"!isdeleteFunctionG\" v-slot:body=\"{ items, headers }\">\r\n                                                                <tbody>\r\n                                                                    <tr v-for=\"(item,num) in items\" :key=\"num\" >\r\n                                                                        <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                            <v-icon v-if=\"header.value == 'refView'\" class=\"refView-tableItem\" :color=\"refFunction === item.id ? 'red' : null \" @click=\"rowFunctionClick(num)\">mdi-pencil</v-icon>\r\n                                                                            <v-edit-dialog v-if=\"header.value != 'refView'\" persistent @open=\"openFunctionG(num)\" @cancel=\"cancelFunctionG\" @save=\"editFunctionG(num)\" large >\r\n                                                                                {{item[header.value]}}\r\n                                                                                <template v-slot:input>\r\n                                                                                    <br> <!--v-autocomplete 여기에서 item의 uuid가 같을경우 item-text='name' item-value=\"uuid\"로 해주면 uuid값이 같기 때문에 item의 list가 다 나오지 않는다 name으로 바꿔야지만 list가 잘나옴 -->\r\n                                                                                    <v-autocomplete v-model='editFunctionGItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingContextMode\" @click=\"setContextModeSelect()\" @blur=\"isEditingContextMode=true\" \r\n                                                                                            clearable @click:clear='clearContextModeRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                    <v-autocomplete v-model='editFunctionGItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingTargetMode\"  @click=\"setTargetModeSelect()\" @blur=\"isEditingTargetMode=true\" \r\n                                                                                            clearable @click:clear='clearTargetModeRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                </template>\r\n                                                                            </v-edit-dialog>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <th colspan=\"3\">\r\n                                                                            <v-edit-dialog  large persistent @open=\"newOpenDependent()\" @cancel=\"cancelFunctionG\" @save=\"addFunctionG()\"> \r\n                                                                                <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                </v-btn>\r\n                                                                                <template v-slot:input>\r\n                                                                                    <br>\r\n                                                                                    <v-autocomplete v-model='editFunctionGItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingContextMode\" @click=\"setContextModeSelect()\" @blur=\"isEditingContextMode=true\" \r\n                                                                                            clearable @click:clear='clearContextModeRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                    <v-autocomplete v-model='editFunctionGItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingTargetMode\"  @click=\"setTargetModeSelect()\" @blur=\"isEditingTargetMode=true\" \r\n                                                                                            clearable @click:clear='clearTargetModeRef'>\r\n                                                                                    </v-autocomplete>\r\n                                                                                </template>\r\n                                                                            </v-edit-dialog>\r\n                                                                        </th>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </template>\r\n                                                        </v-data-table>\r\n                                                    </v-card-text>\r\n                                                </v-card>\r\n                                                <v-row style=\"height: 45px\">\r\n                                                    <v-col cols=\"10\">\r\n                                                        <v-text-field v-model=\"tab.resourceRef\" readonly @click=\"setResourceGSelect(tab)\" :style=\"refResource ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                                     clearable @click:clear='clearResourceG(tab)' label=\"Resource Group Reference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </v-col>\r\n                                                    <v-col cols=\"2\">\r\n                                                        <v-menu>\r\n                                                            <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processresorce'+tab.id\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setResourceGList()\">\r\n                                                                    <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                            <v-list >\r\n                                                                <v-list-item v-for=\"(item, i) in selResourceG\" :key=\"i\" link @click=\"setResourceG(item, tab)\">\r\n                                                                    <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                </v-list-item>\r\n                                                                <v-list-item v-if=\"selResourceG.length == 0\">\r\n                                                                    <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                                </v-list-item>\r\n                                                            </v-list>\r\n                                                        </v-menu>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 70px\">\r\n                                                    <v-col cols=\"10\">\r\n                                                        <v-text-field v-model=\"tab.startupConfigRef\" readonly @click=\"setStartupCSelect(tab)\" :style=\"refStartupC ? 'height: 43px;border:solid red 2px' : ''\" \r\n                                                                     clearable @click:clear='clearStartupC(tab)' label=\"Startup Config Reference\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </v-col>\r\n                                                    <v-col cols=\"2\">\r\n                                                        <v-menu>\r\n                                                            <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processstartup'+tab.id\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setStartupCList()\">\r\n                                                                    <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                            <v-list>\r\n                                                                <v-list-item v-for=\"(item, i) in selStartupC\" :key=\"i\" link @click=\"setStartupC(item, tab)\">\r\n                                                                    <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                </v-list-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newStartupC\" >\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </v-list>\r\n                                                        </v-menu>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                            </v-card-text>\r\n                                        </v-card>\r\n                                    </v-tab-item>\r\n                                </v-tabs-items>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-show=\"!iselementOpenClose|| !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;DESIGN-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.prodesign\" placeholder=\"Path\"  class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;DESIGN-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;EXECUTABLE-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.execut\" placeholder=\"Path\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;EXECUTABLE-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;DETERMINISTIC-CLIENT-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.determin\" placeholder=\"Path\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;DETERMINISTIC-CLIENT-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;LOG-TRACE-DEFAULT-LOG-LEVEL&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.logLevel\" placeholder=\"FATAL or ERROR or WARN or INFO or DEBUG or VERBOSE\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-DEFAULT-LOG-LEVEL&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <label style=\"padding:10px;\">&#60;LOG-TRACE-FILE-PATH&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.logPath\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-FILE-PATH&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 50px;\">\r\n                            <label style=\"padding:10px;\">&#60;LOG-TRACE-LOG-MODES&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextLogMode()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <div class=\"text-editDialog\" style=\"height: 100px;\">\r\n                            <v-row v-for=\"(item, i) in editARXML.logMode\" :key=\"i\" style=\"height: 25px;\">\r\n                                <div>\r\n                                    <br>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <v-btn style=\"margin: 15px -20px 0px 20px\" @click=\"deletTextLogMode(i)\" text x-small color=\"indigo\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 10px;\">&#60;LOG-TRACE-LOG-MODE&#62;</label>\r\n                                        <v-text-field v-model=\"editARXML.logMode[i]\" style=\"width:280px\" placeholder=\"CONSOLE or FILE or NETWORK\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-LOG-MODE&#62;</label>\r\n                                    </v-row>\r\n                                </div>\r\n                            </v-row>\r\n                        </div> \r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-LOG-MODES&#62;</label>\r\n                        </v-row>              \r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;LOG-TRACE-PROCESS-DESC&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.logProDesc\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-PROCESS-DESC&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;LOG-TRACE-PROCESS-ID&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.logProID\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;LOG-TRACE-PROCESS-ID&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;NUMBER-OF-RESTART-ATTEMPTS&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.restart\" placeholder=\"Int\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;NUMBER-OF-RESTART-ATTEMPTS&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;PRE-MAPPING&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.preMapping\" placeholder=\"true or false\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;PRE-MAPPING&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <label style=\"padding:10px;\">&#60;PROCESS-STATE-MACHINE&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;margin-left:10px\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.machinname\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <label style=\"padding:10px;margin-left:10px\">&#60;TYPE-TREF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.machinetype\" placeholder=\"Path\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;TYPE-TREF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 15px;\">\r\n                            <label style=\"padding:10px;\">&#60;&#47;PROCESS-STATE-MACHINE&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 50px;\">\r\n                            <label style=\"padding:10px;\">&#60;STATE-DEPENDENT-STARTUP-CONFIGS&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextDependent()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <div class=\"text-editDialog\" style=\"height: 550px;\">\r\n                            <v-row v-for=\"(item, i) in editARXML.dependent\" :key=\"i\" style=\"height: 520px;\">\r\n                                <div>\r\n                                    <v-row style=\"height: 10px;margin:0px;\">\r\n                                        <v-btn style=\"margin: 15px -20px 0px 20px\" @click=\"deletTextDependent(i)\" text x-small color=\"indigo\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 10px;\">&#60;STATE-DEPENDENT-STARTUP-CONFIG&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 50px;\">\r\n                                        <label style=\"padding:10px;margin-left:90px;\">&#60;EXECUTION-DEPENDENCYS&#62;</label>\r\n                                        <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextExecution(i)\" icon color=\"teal darken\" x-samll dark>\r\n                                            <v-icon dense dark>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                    </v-row>\r\n                                    <div class=\"text-Inner-editDialog\" style=\"height: 180px;\">\r\n                                        <v-row v-for=\"(exe, e) in item.execution\" :key=\"e\" style=\"height: 140px;\">\r\n                                            <div>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-btn style=\"margin: 15px -80px 0px 80px\" @click=\"deletTextExecution(e,i)\" text x-small color=\"indigo\">\r\n                                                            <v-icon>mdi-minus</v-icon>\r\n                                                    </v-btn>\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 70px;\">&#60;EXECUTION-DEPENDENCY&#62;</label>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 130px;\">&#60;PROCESS-STATE-IREF&#62;</label>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-col cols=\"6\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 140px;\">&#60;CONTEXT-MODE-DECLARATION-GROUP-REF&#62;</label>\r\n                                                    </v-col><v-col cols=\"4\">\r\n                                                    <v-text-field v-model=\"exe.contextMode\" placeholder=\"Path\" style=\"margin: -5px 0px 0px 75px\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    </v-col><v-col cols=\"2\">\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF&#62;</label>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-col cols=\"5\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 140px;\">&#60;TARGET-MODE-DECLARATION-REF&#62;</label>\r\n                                                    </v-col><v-col cols=\"4\">\r\n                                                    <v-text-field v-model=\"exe.targetMode\" placeholder=\"Path\" style=\"margin: -5px 0px 0px 80px\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    </v-col><v-col cols=\"3\">\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;TARGET-MODE-DECLARATION-REF&#62;</label>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 130px;\">&#60;&#47;PROCESS-STATE-IREF&#62;</label>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 30px;margin:0px;\">\r\n                                                    <label style=\"padding:10px;margin-left:115px;\">&#60;&#47;EXECUTION-DEPENDENCY&#62;</label>\r\n                                                </v-row>\r\n                                            </div>\r\n                                        </v-row>\r\n                                    </div> \r\n                                    <v-row style=\"height: 15px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 90px;\">&#60;&#47;EXECUTION-DEPENDENCYS&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 50px;\">\r\n                                        <label style=\"padding:10px;margin-left:90px;\">&#60;FUNCTION-GROUP-STATE-IREFS&#62;</label>\r\n                                        <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextFunction(i)\" icon color=\"teal darken\" x-samll dark>\r\n                                            <v-icon dense dark>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                    </v-row>\r\n                                    <div class=\"text-Inner-editDialog\" style=\"height: 150px;\">\r\n                                        <v-row v-for=\"(fun, f) in item.functionItem\" :key=\"f\" style=\"height: 90px;\">\r\n                                            <div>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-btn style=\"margin: 15px -80px 0px 80px\" @click=\"deletTextFunction(f,i)\" text x-small color=\"indigo\">\r\n                                                        <v-icon>mdi-minus</v-icon>\r\n                                                    </v-btn>\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 70px;\">&#60;FUNCTION-GROUP-STATE-IREF&#62;</label>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-col cols=\"6\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 120px;\">&#60;CONTEXT-MODE-DECLARATION-GROUP-REF&#62;</label>\r\n                                                    </v-col><v-col cols=\"4\">\r\n                                                    <v-text-field v-model=\"fun.contextMode\" placeholder=\"Path\" style=\"margin: -5px 0px 0px 70px\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    </v-col><v-col cols=\"2\">\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF&#62;</label>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-col cols=\"5\">\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 120px;\">&#60;TARGET-MODE-DECLARATION-REF&#62;</label>\r\n                                                    </v-col><v-col cols=\"4\">\r\n                                                    <v-text-field v-model=\"fun.targetMode\" placeholder=\"Path\" style=\"margin: -5px 0px 0px 75px\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    </v-col><v-col cols=\"3\">\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;TARGET-MODE-DECLARATION-REF&#62;</label>\r\n                                                    </v-col>\r\n                                                </v-row>\r\n                                                <v-row style=\"height: 30px;margin:0px;\">\r\n                                                    <label style=\"padding:10px;margin-left:110px;\">&#60;&#47;FUNCTION-GROUP-STATE-IREF&#62;</label>\r\n                                                </v-row>\r\n                                            </div>\r\n                                        </v-row>\r\n                                    </div> \r\n                                    <v-row style=\"height: 35px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 90px;\">&#60;&#47;FUNCTION-GROUP-STATE-IREFS&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 30px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;RESOURCE-GROUP-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.resourceRef\" placeholder=\"Path\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;RESOURCE-GROUP-REF&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 30px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;STARTUP-CONFIG-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.startupConfigRef\" placeholder=\"Path\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;STARTUP-CONFIG-REF&#62;</label>\r\n                                    </v-row>                               \r\n                                    <v-row style=\"height: 30px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin-left:55px;\">&#60;&#47;STATE-DEPENDENT-STARTUP-CONFIG&#62;</label>\r\n                                    </v-row>\r\n                                </div>\r\n                            </v-row>\r\n                        </div>\r\n                        <v-row style=\"height: 20px;\">\r\n                            <label style=\"padding:10px;\">&#60;&#47;STATE-DEPENDENT-STARTUP-CONFIGS&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        /*detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },*/\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                        if(this.iselementOpenClose) {\r\n                            if(this.element.dependent.length > 0 && this.location == 1) {\r\n                                if (this.isDependentStartupOpenClose) {\r\n                                    EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.element.dependent[this.dependentStartupTab].id)\r\n                                } else {\r\n                                    EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: true,//this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogText: false,\r\n            editARXML: {name:'', logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []},\r\n            editTextDependent: {execution: [], functionItem: [], resourceRef: null, startupConfigRef: null, id: ''},\r\n            editTextExecution: {contextMode: null, targetMode: null, id: ''},\r\n            editTextFunction: {contextMode: null, targetMode: null, id: ''},\r\n            isStateMachineOpenClose: true,\r\n            isDependentStartupOpenClose: true,\r\n            isFunctionGOpenClose : true,\r\n            isExecutionDOpenClose : true,\r\n            selProcessDesign: this.$store.getters.getProcessDesign,\r\n            selDeterministic: this.$store.getters.getDeterministicClient,\r\n            selExecutable: this.$store.getters.getExecutable,\r\n            selModeDeclaration: this.$store.getters.getModeDeclarationG,\r\n            selResourceG: this.$store.getters.getResourceGroup,\r\n            selStartupC: this.$store.getters.getStartupConfig,\r\n            dependentStartupTab: 0,\r\n\r\n            logLevel: ['FATAL', 'ERROR', 'WARN', 'INFO', 'DEBUG', 'VERBOSE'],\r\n            logMode: [ 'CONSOLE', 'FILE', 'NETWORK'],\r\n            isdeleteFunctionG: false,\r\n            selectDelectFunctionGItem: [],\r\n            headerFunctionG: [\r\n                { text: '', sortable: false, value: 'refView', width: '5px' },\r\n                { text: 'Context Mode Ref', align: 'start', sortable: false, value: 'contextMode' },\r\n                { text: 'Target Mode Ref', sortable: false, value: 'targetMode' },\r\n            ],\r\n            isEditingContextMode: true,\r\n            isEditingTargetMode: true,\r\n            defaultItem: { contextMode: null, targetMode: null, id: '' },\r\n            editFunctionGItem: { contextMode: null, targetMode: null, id: '' },\r\n            selContextMode: this.$store.getters.getMachineFG,\r\n            selTargetMode: this.$store.getters.getModeDeclaration,\r\n\r\n            isdeleteExecutionD: false,\r\n            selectDelectExecutionDItem: [],\r\n            isEditingCM: true,\r\n            isEditingTM: true,\r\n            editExecutionDItem: { contextMode: null, targetMode: null, id: '' },\r\n\r\n            refDesign: false,\r\n            refDeterministric: false,\r\n            refExecutable: false,\r\n            refType: false,\r\n            refExecution: '',\r\n            refFunction: '',\r\n            refResource: false,\r\n            refStartupC: false,\r\n\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n        EventBus.$on(this.element.uuid, (refNum, idxID, tabID, id, isDeleteItem, item, idxRow) => {\r\n            console.log('## '+id+' / '+isDeleteItem+ ' / ' + item+ ' / '+tabID)\r\n            if (isDeleteItem) {\r\n                if (this.resourceRef && this.element.dependent[this.dependentStartupTab].id == tabID && item == 'resource') {\r\n                    this.clickOtherFields()\r\n                } else if (this.refStartupC && this.element.dependent[this.dependentStartupTab].id == tabID && item == 'startup') {\r\n                    this.clickOtherFields()\r\n                } else if (this.refExecution == id && item == 'Execution' && this.element.dependent[this.dependentStartupTab].id == tabID) {\r\n                    this.refExecution = id + 1\r\n                    this.rowExecutionClick(idxRow)\r\n                } else if (this.refFunction == id && item == 'Function' && this.element.dependent[this.dependentStartupTab].id == tabID) {\r\n                    this.refFunction = id + 1\r\n                    this.rowFunctionClick(idxRow)\r\n                }\r\n            } else {\r\n                this.refDesign = false\r\n                this.refDeterministric = false\r\n                this.refExecutable = false\r\n                this.refType = false\r\n                this.refResource = false\r\n                this.refStartupC = false\r\n                this.refExecution = null\r\n                this.refFunction = null\r\n\r\n                if (refNum == 1) {\r\n                    this.refDesign = true\r\n                } else if (refNum == 2) {\r\n                    this.refDeterministric = true\r\n                } else if (refNum == 3) {\r\n                    this.refExecutable = true\r\n                } else if (refNum == 4) {\r\n                    this.refType = true\r\n                } else if (refNum == 5) {\r\n                    this.dependentStartupTab = tabID\r\n                    this.refExecution = idxID\r\n                } else if (refNum == 6) {\r\n                    this.dependentStartupTab = tabID\r\n                    this.refFunction = idxID\r\n                } else if (refNum == 7) {\r\n                    this.dependentStartupTab = tabID\r\n                    this.refResource = idxID\r\n                } else if (refNum == 8) {\r\n                    this.dependentStartupTab = tabID\r\n                    this.refStartupC = idxID\r\n                }\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showProcess() {\r\n            this.clickOtherFields()\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLine')\r\n            })\r\n        },\r\n        showStateMachine() {\r\n            this.clickOtherFields()\r\n            this.isStateMachineOpenClose = this.isStateMachineOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            //EventBus.$emit('drawLine')\r\n        },\r\n        showDependentStartup() {\r\n            this.clickOtherFields()\r\n            this.isDependentStartupOpenClose = this.isDependentStartupOpenClose ? false : true\r\n           /* if(this.element.dependent.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isDependentStartupOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.element.dependent[this.dependentStartupTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }*/\r\n        },\r\n        showFunctionG() {\r\n            this.clickOtherFields()\r\n            this.isFunctionGOpenClose = this.isFunctionGOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            //EventBus.$emit('drawLine')\r\n        },\r\n        showExecutionD() {\r\n            this.clickOtherFields()\r\n            this.isExecutionDOpenClose = this.isExecutionDOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            //EventBus.$emit('drawLine')\r\n        },\r\n        inputProcessName() {\r\n            this.$store.commit('editProcess', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clickOtherFields() {\r\n            if (this.refDesign || this.refDeterministric ||this.refExecutable ||this.refType ||\r\n                this.refResource ||this.refStartupC || this.refExecution != null || this.refFunction != null) {\r\n                this.deleteOpenElement()\r\n                this.refDesign = false\r\n                this.refDeterministric = false\r\n                this.refExecutable = false\r\n                this.refType = false\r\n                this.refResource = false\r\n                this.refStartupC = false\r\n                this.refExecution = null\r\n                this.refFunction = null\r\n            }\r\n        },\r\n        rowExecutionClick(idx) {\r\n            console.log('rowClick ' + idx+' / '+ this.refExecution)\r\n            if (this.refExecution != this.element.dependent[this.dependentStartupTab].execution[idx].id) { // 같은거 계속 누르면 안됨\r\n                //기존것 delete하고 \r\n                this.clickOtherFields()\r\n                // 새로들어온 idx line draw\r\n                var endLineContext = null, endLineTarget = null\r\n                console.log(this.element.dependent[this.dependentStartupTab].execution[idx].contextMode)\r\n                if (this.element.dependent[this.dependentStartupTab].execution[idx].targetMode != null) {\r\n                    endLineTarget = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                    if (endLineTarget == undefined) {\r\n                        endLineTarget = this.$store.getters.getModeDeclarationPath(this.element.dependent[this.dependentStartupTab].execution[idx].targetMode, 1)\r\n                    }\r\n                    if (endLineTarget != null) {\r\n                        // 기존에 있던거 좌표 바꿔줘야함.\r\n                        this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: endLineTarget, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: endLineTarget, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineTarget, \r\n                                        iscircle:false, refNum:5, idxID: this.element.dependent[this.dependentStartupTab].execution[idx].id, tabID: this.dependentStartupTab})\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('Element-open', false, endLineTarget)\r\n                            EventBus.$emit('new-line', this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, endLineTarget)\r\n                        })\r\n                    }\r\n                }\r\n                if (this.element.dependent[this.dependentStartupTab].execution[idx].contextMode != null) {\r\n                    endLineContext = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                    if (endLineContext == undefined) {\r\n                        endLineContext = this.$store.getters.getMachinePath(this.element.dependent[this.dependentStartupTab].execution[idx].contextMode, 2)\r\n                    }\r\n                    if (endLineContext != null) {\r\n                        // 기존에 있던거 좌표 바꿔줘야함.\r\n                        var top = 200\r\n                        if (endLineTarget != null) {\r\n                            top = 600\r\n                        }\r\n                        this.$store.commit('editMachine', {compo:\"drag\", uuid: endLineContext, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: endLineContext, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineContext,\r\n                                         iscircle:false, refNum:5, idxID: this.element.dependent[this.dependentStartupTab].execution[idx].id, tabID: this.dependentStartupTab})\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('Element-open', false, endLineContext)\r\n                            EventBus.$emit('new-line', this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, endLineContext)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                this.$nextTick(() => { \r\n                    if (endLineContext != null && endLineTarget == null) {\r\n                        EventBus.$emit('Element-open', true, endLineContext)\r\n                    } else if (endLineContext == null && endLineTarget != null) {\r\n                        EventBus.$emit('Element-open', true, endLineTarget)\r\n                    } \r\n                })\r\n                this.refExecution = this.element.dependent[this.dependentStartupTab].execution[idx].id\r\n            }\r\n        },\r\n        rowFunctionClick(idx) {\r\n            console.log('rowClick ' + idx)\r\n            if (this.refFunction != this.element.dependent[this.dependentStartupTab].functionItem[idx].id) { // 같은거 계속 누르면 안됨\r\n                //기존것 delete하고 \r\n                this.clickOtherFields()\r\n                // 새로들어온 idx line draw\r\n                var endLineContext = null, endLineTarget = null\r\n                if (this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode != null) {\r\n                    endLineTarget = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                    if (endLineTarget == undefined) {\r\n                        endLineTarget = this.$store.getters.getModeDeclarationPath(this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode, 1)\r\n                    }\r\n                    if (endLineTarget != null) {\r\n                        // 기존에 있던거 좌표 바꿔줘야함.\r\n                        this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: endLineTarget, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: endLineTarget, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineTarget, \r\n                                    iscircle:false, refNum:6, idxID: this.element.dependent[this.dependentStartupTab].functionItem[idx].id, tabID: this.dependentStartupTab})\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('Element-open', false, endLineTarget)\r\n                           EventBus.$emit('new-line', this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, endLineTarget)\r\n                        })\r\n                    }\r\n                }\r\n                if (this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode != null) {\r\n                    endLineContext = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                    if (endLineContext == undefined) {\r\n                        endLineContext = this.$store.getters.getMachinePath(this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode, 2)\r\n                    }\r\n                    if (endLineContext != null) {\r\n                        // 기존에 있던거 좌표 바꿔줘야함.\r\n                        var top = 200\r\n                        if (endLineTarget != null) {\r\n                            top = 600\r\n                        }\r\n                        this.$store.commit('editMachine', {compo:\"drag\", uuid: endLineContext, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: endLineContext, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineContext,\r\n                                     iscircle:false, refNum:6, idxID: this.element.dependent[this.dependentStartupTab].functionItem[idx].id, tabID: this.dependentStartupTab})\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('Element-open', false, endLineContext)\r\n                           EventBus.$emit('new-line', this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, endLineContext)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                this.$nextTick(() => { \r\n                    if (endLineContext != null && endLineTarget == null) {\r\n                        EventBus.$emit('Element-open', true, endLineContext)\r\n                    } else if (endLineContext == null && endLineTarget != null) {\r\n                        EventBus.$emit('Element-open', true, endLineTarget)\r\n                    } \r\n                })\r\n                this.refFunction = this.element.dependent[this.dependentStartupTab].functionItem[idx].id\r\n            }\r\n        },\r\n\r\n        clearProcessDesign() {\r\n            this.element.prodesign = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processprodesign')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setProcessDesignSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.prodesign != null) {this.refDesign = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getProcessDesignPath(this.element.prodesign)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/processprodesign', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processprodesign', end:endLine, iscircle:false, refNum:1})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.ProcessDesign_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setProcessDesignList() {\r\n            this.selProcessDesign = this.$store.getters.getProcessDesign\r\n            this.setactiveUUID()\r\n        },\r\n        setProcessDesign(item) {\r\n            this.clickOtherFields()\r\n            if(this.element.prodesign != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processprodesign')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refDesign = true\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processprodesign', this.element.uuid+'/processprodesign', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processprodesign', end:item.uuid, iscircle:false, refNum:1})\r\n                }\r\n                this.element.prodesign = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refDesign = true\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processprodesign', this.element.uuid+'/processprodesign', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processprodesign', end:item.uuid, iscircle:false, refNum:1})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcessDesign() {\r\n            this.$store.commit('addElementProcessDesign', { //executableref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameProcessDesign, path: '', input: false,\r\n                top: this.element.top, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                executableref: null, determin: [],\r\n            })\r\n            EventBus.$emit('add-element', constant.ProcessDesign_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearDetermin() {\r\n            this.element.determin = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processdetermin')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setDeterminSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.determin != null) {this.refDeterministric = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getDeterministicClientPath(this.element.determin)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editDeterministicClien', {compo:\"drag\", uuid: endLine, top: this.element.top + 60, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.DeterministicClient_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/processdetermin', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processdetermin', end:endLine, iscircle:false, refNum:2})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.DeterministicClient_str} )\r\n                    /*document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', endLine)*/\r\n                }\r\n            }\r\n        },\r\n        setDeterminList() {\r\n            this.selDeterministic = this.$store.getters.getDeterministicClient\r\n            this.setactiveUUID()\r\n        },\r\n        setDeterministicClient(item) {\r\n            this.clickOtherFields()\r\n            if(this.element.determin != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processdetermin')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refDeterministric = true\r\n                    this.$store.commit('editDeterministicClien', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 60, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.DeterministicClient_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processdetermin', this.element.uuid+'/processdetermin', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processdetermin', end:item.uuid, iscircle:false, refNum:2})\r\n                }\r\n                this.element.determin = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refDeterministric = true\r\n                    this.$store.commit('editDeterministicClien', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 60, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.DeterministicClient_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processdetermin', this.element.uuid+'/processdetermin', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processdetermin', end:item.uuid, iscircle:false, refNum:2})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newDeterministicClient() {\r\n            this.$store.commit('addElementDeterministicClien', {\r\n                name: this.$store.getters.getNameDeterministicClient, path: '', input: false,\r\n                top: this.element.top + 60, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                cycletiem: '', numofworkers: '',\r\n            })\r\n            EventBus.$emit('add-element', constant.DeterministicClient_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearExecutable() {\r\n            this.element.execut = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processexecut')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setExecutableSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.execut != null) {this.refExecutable = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getExecutablePath(this.element.execut)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/processexecut', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processexecut', end:endLine, iscircle:false, refNum:3})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.Executable_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setExecutableList() {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            this.setactiveUUID()\r\n        },\r\n        setExecutable(item) {\r\n            this.clickOtherFields()\r\n            if(this.element.execut != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processexecut')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refExecutable = true\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processexecut', this.element.uuid+'/processexecut', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processexecut', end:item.uuid, iscircle:false, refNum:3})\r\n                }\r\n                this.element.execut = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refExecutable = true\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processexecut', this.element.uuid+'/processexecut', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processexecut', end:item.uuid, iscircle:false, refNum:3})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newExecutable() {\r\n            this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameExecutable, path: '', input: false,\r\n                top: this.element.top, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n            })\r\n            EventBus.$emit('add-element', constant.Executable_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearModeDeclaration() {\r\n            this.element.machinetype = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processmodedeclar')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setModeDeclarationSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.machinetype != null) {this.refType = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getModeDeclarationPath(this.element.machinetype, 0)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: endLine, top: this.element.top + 480, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', true, endLine)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/processmodedeclar', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processmodedeclar', end:endLine, iscircle:false, refNum:4})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.ModeDeclarationGroup_str} )\r\n                    /*document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', endLine)*/\r\n                }\r\n            }\r\n        },\r\n        setModeDeclarationList() {\r\n            this.selModeDeclaration = this.$store.getters.getModeDeclarationG\r\n            this.setactiveUUID()\r\n        },\r\n        setModeDeclaration(item) {\r\n            this.clickOtherFields()\r\n            if(this.element.machinetype != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processmodedeclar')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refType = true\r\n                    this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 480, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/processmodedeclar', this.element.uuid+'/processmodedeclar', item.uuid, true) \r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processmodedeclar', end:item.uuid, iscircle:false, refNum:4})\r\n                }\r\n                this.element.machinetype = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refType = true\r\n                    this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 480, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/processmodedeclar', this.element.uuid+'/processmodedeclar', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processmodedeclar', end:item.uuid, iscircle:false, refNum:4})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newModeDeclarationGroup() {\r\n            this.$store.commit('addElementModeDeclarationGroup', {\r\n                name: this.$store.getters.getNameModeDeclarationGroup, path: '', input: false,\r\n                top: this.element.top + 480, left: this.element.left + this.$setPositionLeft, zindex: 10, \r\n                modedeclaration:[{name: 'Off', value: ''},{name: 'Startup', Value: ''}], initmode:'Off', icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.ModeDeclarationGroup_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        addDependentStartup() {\r\n            this.clickOtherFields()\r\n            const editItem = { execution: [], functionItem: [], resourceRef: null, startupConfigRef: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++;\r\n                res = this.element.dependent.some(item => item.id == n)\r\n            }\r\n            editItem.id = n\r\n            const addObj = new Object(editItem)\r\n            this.element.dependent.push(addObj)\r\n            this.dependentStartupTab = this.element.dependent.length-1\r\n            if (this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n            }\r\n        },\r\n        clickDependentStartuptab() {\r\n            //console.log('clickDependentStartuptab')\r\n            this.isdeleteFunctionG = false\r\n            this.isdeleteExecutionD = false\r\n            this.selectDelectFunctionGItem = []\r\n            this.selectDelectExecutionDItem = []\r\n        },\r\n        changeDependentStartupTab() {\r\n            if (this.refExecution != null || this.refFunction != null || this.refResource || this.refStartupC) {\r\n                this.deleteOpenElement()\r\n                this.refExecution = null\r\n                this.refFunction = null\r\n                this.refResource = false\r\n                this.refStartupC = false\r\n            }\r\n            //console.log('changeDependentStartupTab' +this.dependentStartupTab)\r\n            /*if(this.element.dependent.length > 0 && this.location == 1 && this.dependentStartupTab != undefined) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.element.dependent[this.dependentStartupTab].id)}, 300);\r\n            }*/\r\n        },\r\n        deleteDependentStartup(idx) {\r\n            this.clickOtherFields()\r\n            console.log('deleteDependentStartup' + idx)\r\n            this.element.dependent[idx].functionItem.forEach(item => {\r\n                var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+item.id+'-'+this.element.dependent[idx].id)\r\n                if(endLineCon != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/fgcontext-'+item.id+'-'+this.element.dependent[idx].id)\r\n                }\r\n                var endLinetarg = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+item.id+'-'+this.element.dependent[idx].id)\r\n                if(endLinetarg != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/fgtarget-'+item.id+'-'+this.element.dependent[idx].id)\r\n                }\r\n            })\r\n            this.element.dependent[idx].execution.forEach(item => {\r\n                var endLineC = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+item.id+'-'+this.element.dependent[idx].id)\r\n                if(endLineC != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/edcontext-'+item.id+'-'+this.element.dependent[idx].id)\r\n                }\r\n                var endLinet = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+item.id+'-'+this.element.dependent[idx].id)\r\n                if(endLinet != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/edtarget-'+item.id+'-'+this.element.dependent[idx].id)\r\n                }\r\n            })\r\n            var endLine\r\n            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.element.dependent[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processresorce-'+this.element.dependent[idx].id)\r\n            }\r\n            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.element.dependent[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processstartup-'+this.element.dependent[idx].id)\r\n            }\r\n            \r\n            this.element.dependent.splice(idx, 1)\r\n        },\r\n        isCheckFunctionG() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteFunctionG == true) {\r\n                this.isdeleteFunctionG = false\r\n                this.selectDelectFunctionGItem = []\r\n            } else {\r\n                this.isdeleteFunctionG = true\r\n            }\r\n        },\r\n        deleteFunctionG() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteFunctionG == true) {\r\n                this.selectDelectFunctionGItem.forEach(item => {\r\n                    for(let i=0; i<this.element.dependent[this.dependentStartupTab].functionItem.length; i++){\r\n                        if (item.id == this.element.dependent[this.dependentStartupTab].functionItem[i].id) {\r\n                            var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            if(endLineCon != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/fgcontext-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            }\r\n                            var endLinetarg = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            if(endLinetarg != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/fgtarget-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.element.dependent[this.dependentStartupTab].functionItem = this.element.dependent[this.dependentStartupTab].functionItem.filter(item => {\r\n                         return this.selectDelectFunctionGItem.indexOf(item) < 0 })\r\n\r\n                this.isdeleteFunctionG = false\r\n                this.selectDelectFunctionGItem = []\r\n            }\r\n        },\r\n        openFunctionG(idx) {\r\n            this.selContextMode = this.$store.getters.getMachineFG\r\n            this.selTargetMode = this.$store.getters.getModeDeclaration\r\n\r\n            if (this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode != null ) {\r\n                var endLineC = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLineC == undefined) {\r\n                    endLineC = this.$store.getters.getMachinePath(this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode, 2)\r\n                }\r\n                this.editFunctionGItem.contextMode = { name :this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode, uuid: endLineC }\r\n            }\r\n            if (this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode != null) {\r\n                var endLineT = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLineT == undefined) {\r\n                    endLineT = this.$store.getters.getModeDeclarationPath(this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode, 1)\r\n                }\r\n                this.editFunctionGItem.targetMode = { name :this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode, uuid: endLineT }\r\n            }\r\n        },\r\n        editFunctionG(idx) {\r\n            var endcontextMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endcontextMLine != undefined && this.editFunctionGItem.contextMode == null) {\r\n                this.deleteLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = null\r\n            } else if (endcontextMLine != undefined && endcontextMLine != this.editFunctionGItem.contextMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.newLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id, \r\n                                this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, this.editFunctionGItem.contextMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = this.editFunctionGItem.contextMode.name\r\n            } else if(endcontextMLine == undefined && this.editFunctionGItem.contextMode != null && this.editFunctionGItem.contextMode.uuid != null) {\r\n                this.newLine(this.element.uuid+'/fgcontext-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, this.editFunctionGItem.contextMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = this.editFunctionGItem.contextMode.name\r\n            } else if (this.editFunctionGItem.contextMode != null && endcontextMLine == this.editFunctionGItem.contextMode.uuid && this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode != this.editFunctionGItem.contextMode.name) {\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = this.editFunctionGItem.contextMode.name\r\n            }\r\n\r\n            var endtargetMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endtargetMLine != undefined && this.editFunctionGItem.targetMode == null) {\r\n                this.deleteLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = null\r\n            } else if (endtargetMLine != undefined && endtargetMLine != this.editFunctionGItem.targetMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.newLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id, \r\n                                this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, this.editFunctionGItem.targetMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = this.editFunctionGItem.targetMode.name\r\n            } else if (endtargetMLine == undefined && this.editFunctionGItem.targetMode != undefined && this.editFunctionGItem.targetMode.uuid != undefined) {\r\n                this.newLine(this.element.uuid+'/fgtarget-'+this.element.dependent[this.dependentStartupTab].functionItem[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, this.editFunctionGItem.targetMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = this.editFunctionGItem.targetMode.name\r\n            } else if (this.editFunctionGItem.targetMode != undefined && endtargetMLine == this.editFunctionGItem.targetMode.uuid && this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode != this.editFunctionGItem.targetMode.name) {\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = this.editFunctionGItem.targetMode.name\r\n            }\r\n\r\n            var endLineContext = null, endLineTarget = null\r\n            if (this.refFunction == this.element.dependent[this.dependentStartupTab].functionItem[idx].id) {\r\n                this.deleteOpenElement()\r\n                if (this.editFunctionGItem.targetMode != null && this.editFunctionGItem.targetMode.uuid != null) {\r\n                    endLineTarget = this.editFunctionGItem.targetMode.uuid\r\n                    this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: this.editFunctionGItem.targetMode.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: this.editFunctionGItem.targetMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineTarget, \r\n                                    iscircle:false, refNum:6, idxID: this.refFunction, tabID: this.dependentStartupTab})\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', false, this.editFunctionGItem.targetMode.uuid)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, endLineTarget)\r\n                    })\r\n\r\n                }\r\n                if (this.editFunctionGItem.contextMode != null && this.editFunctionGItem.contextMode.uuid != null) {\r\n                    endLineContext = this.editFunctionGItem.contextMode.uuid\r\n                    var top = 200\r\n                    if (endLineTarget != null) {\r\n                        top = 600\r\n                    }\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editFunctionGItem.contextMode.uuid, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editFunctionGItem.contextMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, \r\n                                    end:endLineContext, iscircle:false, refNum:6, idxID: this.refFunction, tabID: this.dependentStartupTab})\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', false, this.editFunctionGItem.contextMode.uuid)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, endLineContext)\r\n                    })\r\n\r\n                }\r\n\r\n                this.$nextTick(() => { \r\n                    if (endLineContext != null && endLineTarget == null) {\r\n                        EventBus.$emit('Element-open', true, endLineContext)\r\n                    } else if (endLineContext == null && endLineTarget != null) {\r\n                        EventBus.$emit('Element-open', true, endLineTarget)\r\n                    } \r\n                })\r\n            }\r\n            \r\n            this.cancelFunctionG()\r\n        },\r\n        cancelFunctionG() {\r\n            this.editFunctionGItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addFunctionG() {\r\n            this.clickOtherFields()\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.dependent[this.dependentStartupTab].functionItem.some(item => item.id === n)\r\n            }\r\n            this.editFunctionGItem.id = n\r\n            var endLineContext = null, endLineTarget = null\r\n            if( this.editFunctionGItem.targetMode != null) {\r\n                endLineTarget = this.editFunctionGItem.targetMode.uuid\r\n                this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: this.editFunctionGItem.targetMode.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: this.editFunctionGItem.targetMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                this.editFunctionGItem.targetMode = this.editFunctionGItem.targetMode.name\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineTarget, \r\n                                    iscircle:false, refNum:6, idxID: this.editFunctionGItem.id, tabID: this.dependentStartupTab})\r\n                this.$nextTick(() => { \r\n                    EventBus.$emit('Element-open', false, this.editFunctionGItem.targetMode.uuid)\r\n                    this.newLine(this.element.uuid+'/fgtarget-'+n+'-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 endLineTarget, true)\r\n                })\r\n            }\r\n            if( this.editFunctionGItem.contextMode != null) {\r\n                endLineContext = this.editFunctionGItem.contextMode.uuid\r\n                var top = 200\r\n                if (endLineTarget != null) {\r\n                    top = 600\r\n                }\r\n                this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editFunctionGItem.contextMode.uuid, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editFunctionGItem.contextMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                this.editFunctionGItem.contextMode = this.editFunctionGItem.contextMode.name\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineContext, \r\n                                    iscircle:false, refNum:6, idxID: this.editFunctionGItem.id, tabID: this.dependentStartupTab})\r\n                this.$nextTick(() => { \r\n                    EventBus.$emit('Element-open', false, this.editFunctionGItem.contextMode.uuid)\r\n                    this.newLine(this.element.uuid+'/fgcontext-'+n+'-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/fgtable'+this.element.dependent[this.dependentStartupTab].id, \r\n                                endLineContext, true)\r\n                })\r\n            }\r\n\r\n            this.$nextTick(() => { \r\n                if (endLineContext != null && endLineTarget == null) {\r\n                    EventBus.$emit('Element-open', true, endLineContext)\r\n                } else if (endLineContext == null && endLineTarget != null) {\r\n                    EventBus.$emit('Element-open', true, endLineTarget)\r\n                } \r\n            })\r\n            \r\n            const addObj = Object.assign({}, this.editFunctionGItem)\r\n            this.element.dependent[this.dependentStartupTab].functionItem.push(addObj)\r\n            this.refFunction = n\r\n            this.cancelFunctionG()\r\n        },\r\n        setContextModeSelect() {\r\n            if (this.isEditingContextMode == true) { \r\n                if (this.editFunctionGItem.contextMode != null && this.editFunctionGItem.contextMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editFunctionGItem.contextMode.uuid, element: constant.Machine_str} )\r\n                    // document.getElementById(this.editFunctionGItem.contextMode.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', this.editFunctionGItem.contextMode.uuid)\r\n                }\r\n                this.setContextMList()\r\n                this.isEditingContextMode = false\r\n            } else {\r\n                this.isEditingContextMode = true\r\n            }\r\n        },\r\n        setContextMList() {\r\n            this.selContextMode =  this.$store.getters.getMachineFG\r\n            this.setactiveUUID()\r\n        },\r\n        clearContextModeRef() {\r\n            this.isEditingContextMode = true\r\n            this.editFunctionGItem.contextMode = null\r\n        },\r\n        setTargetModeSelect() {\r\n            if (this.isEditingTargetMode == true) { \r\n                if (this.editFunctionGItem.targetMode != null && this.editFunctionGItem.targetMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editFunctionGItem.targetMode.uuid, element: constant.ModeDeclarationGroup_str} )\r\n                    // document.getElementById(this.editFunctionGItem.targetMode.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', this.editFunctionGItem.targetMode.uuid)\r\n                }\r\n                this.setTargetMList()\r\n                this.isEditingTargetMode = false\r\n            } else {\r\n                this.isEditingTargetMode = true\r\n            }\r\n        },\r\n        setTargetMList() {\r\n            this.selTargetMode =  this.$store.getters.getModeDeclaration\r\n            console.log('setTargetMList'+this.selTargetMode.length)\r\n            this.setactiveUUID()\r\n        },\r\n        clearTargetModeRef() {\r\n            this.isEditingTargetMode = true\r\n            this.editFunctionGItem.targetMode = null\r\n        },\r\n\r\n\r\n        clearResourceG(item) {\r\n            item.resourceRef = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id)\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setResourceGSelect(item) {\r\n            this.clickOtherFields()\r\n            if (item.resourceRef != null) {this.refResource = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getMachinePath(item.resourceRef, 1)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: endLine, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', true, endLine)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id, endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:endLine, iscircle:false, refNum: 7, idxID: 0, tabID: this.dependentStartupTab})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setResourceGList() {\r\n            this.selResourceG = this.$store.getters.getResourceGroup\r\n            this.setactiveUUID()\r\n        },\r\n        setResourceG(item, tab) {\r\n            this.clickOtherFields()\r\n            if(tab.resourceRef != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refResource = true\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/processresorce'+this.element.dependent[this.dependentStartupTab].id, item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processresorce'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:item.uuid, iscircle:false, refNum:7, idxID: 0, tabID: this.dependentStartupTab})\r\n                }\r\n                tab.resourceRef = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refResource = true\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/processresorce-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/processresorce'+this.element.dependent[this.dependentStartupTab].id, item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processresorce'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:item.uuid, iscircle:false, refNum:7, idxID: 0, tabID: this.dependentStartupTab})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        clearStartupC(item) {\r\n            item.startupConfigRef = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id)\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setStartupCSelect(item) {\r\n            this.clickOtherFields()\r\n            if (item.startupConfigRef != null) {this.refStartupC = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getStartupConfigPath(item.startupConfigRef)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editStartupConfig', {compo:\"drag\", uuid: endLine, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.StartupConfig_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('new-line', this.element.uuid+'/processstartup'+this.element.dependent[this.dependentStartupTab].id, endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id, end:endLine, \r\n                                        iscircle:false, refNum:8, idxID: 0, tabID: this.dependentStartupTab})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.StartupConfig_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setStartupCList() {\r\n            this.selStartupC = this.$store.getters.getStartupConfig\r\n            this.setactiveUUID()\r\n        },\r\n        setStartupC(item, tab) {\r\n            this.clickOtherFields()\r\n            if(tab.startupConfigRef != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refStartupC = true\r\n                    this.$store.commit('editStartupConfig', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.StartupConfig_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        this.newLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/processstartup'+this.element.dependent[this.dependentStartupTab].id, \r\n                                    item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processstartup'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:item.uuid, iscircle:false, refNum:8, idxID: 0, tabID: this.dependentStartupTab})\r\n                }\r\n                tab.startupConfigRef = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refStartupC = true\r\n                    this.$store.commit('editStartupConfig', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.StartupConfig_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {\r\n                        this.newLine(this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/processstartup'+this.element.dependent[this.dependentStartupTab].id, \r\n                                  item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processstartup-'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:item.uuid, iscircle:false, refNum:8, idxID: 0, tabID: this.dependentStartupTab})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newStartupC() {\r\n            this.$store.commit('addElementStartupConfig', {\r\n                name: this.$store.getters.getNameStartupConfig, path: '', input: false,\r\n                top: this.element.top + 1145, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                config: []\r\n            })\r\n            EventBus.$emit('add-element', constant.StartupConfig_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckExecutionD() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteExecutionD == true) {\r\n                this.isdeleteExecutionD = false\r\n                this.selectDelectExecutionDItem = []\r\n            } else {\r\n                this.isdeleteExecutionD = true\r\n            }\r\n        },\r\n        deleteExecutionD() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteExecutionD == true) {\r\n                this.selectDelectExecutionDItem.forEach(item => {\r\n                    for(let i=0; i<this.element.dependent[this.dependentStartupTab].execution.length; i++){\r\n                        if (item.id == this.element.dependent[this.dependentStartupTab].execution[i].id) {\r\n                            var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            if(endLineCon != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/edcontext-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            }\r\n                            var endLinetarg = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            if(endLinetarg != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/edtarget-'+item.id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.element.dependent[this.dependentStartupTab].execution = this.element.dependent[this.dependentStartupTab].execution.filter(item => {\r\n                         return this.selectDelectExecutionDItem.indexOf(item) < 0 })\r\n\r\n                this.isdeleteExecutionD = false\r\n                this.selectDelectExecutionDItem = []\r\n            }\r\n        },\r\n        openExecutionD(idx) {\r\n            this.selContextMode = this.$store.getters.getMachineFG\r\n            this.selTargetMode = this.$store.getters.getModeDeclaration\r\n\r\n            if (this.element.dependent[this.dependentStartupTab].execution[idx].contextMode != null ) {\r\n                var endLineC = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLineC == undefined) {\r\n                    endLineC = this.$store.getters.getMachinePath(this.element.dependent[this.dependentStartupTab].execution[idx].contextMode, 2)\r\n                }\r\n                this.editExecutionDItem.contextMode = { name :this.element.dependent[this.dependentStartupTab].execution[idx].contextMode, uuid: endLineC }\r\n            } \r\n\r\n            if (this.element.dependent[this.dependentStartupTab].execution[idx].targetMode != null) {\r\n                var endLineT = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                if (endLineT == undefined) {\r\n                    endLineT = this.$store.getters.getModeDeclarationPath(this.element.dependent[this.dependentStartupTab].execution[idx].targetMode, 1)\r\n                }\r\n                this.editExecutionDItem.targetMode = { name :this.element.dependent[this.dependentStartupTab].execution[idx].targetMode, uuid: endLineT }\r\n            } \r\n        },\r\n        editExecutionD(idx) {\r\n            var endcontextMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endcontextMLine != undefined && this.editExecutionDItem.contextMode == null) {\r\n                this.deleteLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].contextMode = null\r\n            } else if (endcontextMLine != undefined && endcontextMLine != this.editExecutionDItem.contextMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.newLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id, \r\n                                this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, this.editExecutionDItem.contextMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].contextMode = this.editExecutionDItem.contextMode.name\r\n            } else if(endcontextMLine == undefined && this.editExecutionDItem.contextMode != null && this.editExecutionDItem.contextMode.uuid != null) {\r\n                this.newLine(this.element.uuid+'/edcontext-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, this.editExecutionDItem.contextMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].contextMode = this.editExecutionDItem.contextMode.name\r\n            } else if (this.editExecutionDItem.contextMode!= null && endcontextMLine == this.editExecutionDItem.contextMode.uuid && this.element.dependent[this.dependentStartupTab].execution[idx].contextMode != this.editExecutionDItem.contextMode.name) {\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].contextMode = this.editExecutionDItem.contextMode.name\r\n            }\r\n\r\n            var endtargetMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n            if (endtargetMLine != undefined && this.editExecutionDItem.targetMode == null) {\r\n                this.deleteLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].targetMode = null\r\n            } else if (endtargetMLine != undefined && endtargetMLine != this.editExecutionDItem.targetMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id)\r\n                this.newLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id,\r\n                                this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, this.editExecutionDItem.targetMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].targetMode = this.editExecutionDItem.targetMode.name\r\n            } else if (endtargetMLine == undefined && this.editExecutionDItem.targetMode != undefined && this.editExecutionDItem.targetMode.uuid != null) {\r\n                this.newLine(this.element.uuid+'/edtarget-'+this.element.dependent[this.dependentStartupTab].execution[idx].id+'-'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, this.editExecutionDItem.targetMode.uuid, false)\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].targetMode = this.editExecutionDItem.targetMode.name\r\n            } else if (this.editExecutionDItem.targetMode != null && endtargetMLine == this.editExecutionDItem.targetMode.uuid && this.element.dependent[this.dependentStartupTab].execution[idx].targetMode != this.editExecutionDItem.targetMode.name) {\r\n                this.element.dependent[this.dependentStartupTab].execution[idx].targetMode = this.editExecutionDItem.targetMode.name\r\n            }\r\n            \r\n            var endLineContext = null, endLineTarget = null\r\n            if (this.refExecution == this.element.dependent[this.dependentStartupTab].execution[idx].id) {\r\n                this.deleteOpenElement()\r\n                if ( this.editExecutionDItem.targetMode != undefined && this.editExecutionDItem.targetMode.uuid != null) {\r\n                    endLineTarget = this.editExecutionDItem.targetMode.uuid\r\n                    this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: this.editExecutionDItem.targetMode.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: this.editExecutionDItem.targetMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/dtable'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:endLineTarget, iscircle:false, refNum:5, idxID: this.refExecution, tabID: this.dependentStartupTab})\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', false, this.editExecutionDItem.targetMode.uuid)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, endLineTarget)\r\n                    })\r\n                }\r\n                if (this.editExecutionDItem.contextMode != null && this.editExecutionDItem.contextMode.uuid != null) {\r\n                    endLineContext = this.editExecutionDItem.contextMode.uuid\r\n                    var top = 200\r\n                    if (endLineTarget != null) {\r\n                        top = 600\r\n                    }\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editExecutionDItem.contextMode.uuid, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editExecutionDItem.contextMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, \r\n                                        end:endLineContext, iscircle:false, refNum:5, idxID: this.refExecution, tabID: this.dependentStartupTab})\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('Element-open', false, this.editExecutionDItem.contextMode.uuid)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, endLineContext)\r\n                    })\r\n                }\r\n\r\n                this.$nextTick(() => {\r\n                    if (endLineContext != null && endLineTarget == null) {\r\n                        EventBus.$emit('Element-open', true, endLineContext)\r\n                    } else if (endLineContext == null && endLineTarget != null) {\r\n                        EventBus.$emit('Element-open', true, endLineTarget)\r\n                    } \r\n                })\r\n            }\r\n\r\n            this.cancelExecutionD()\r\n        },\r\n        cancelExecutionD() {\r\n            this.editExecutionDItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        newOpenDependent() {\r\n            this.selContextMode = this.$store.getters.getMachineFG\r\n            this.selTargetMode = this.$store.getters.getModeDeclaration\r\n            this.clickOtherFields()\r\n        },\r\n        addExecutionD() {\r\n            this.clickOtherFields()\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.dependent[this.dependentStartupTab].execution.some(item => item.id === n)\r\n            }\r\n            this.editExecutionDItem.id = n\r\n\r\n            var endLineContext = null, endLineTarget = null \r\n            if( this.editExecutionDItem.targetMode != null) {\r\n                endLineTarget = this.editExecutionDItem.targetMode.uuid\r\n                this.$store.commit('editModeDeclarationGroup', {compo:\"drag\", uuid: this.editExecutionDItem.targetMode.uuid, top: this.element.top + 200, left: this.element.left + this.$setPositionLeft} )\r\n                this.$store.commit('setzIndexVisible', {parent:constant.ModeDeclarationGroup_str, uuid: this.editExecutionDItem.targetMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                this.editExecutionDItem.targetMode = this.editExecutionDItem.targetMode.name\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineTarget, \r\n                                    iscircle:false, refNum:5, idxID: this.editExecutionDItem.id, tabID: this.dependentStartupTab})\r\n                this.$nextTick(() => {\r\n                    EventBus.$emit('Element-open', false, endLineTarget)\r\n                    this.newLine(this.element.uuid+'/edtarget-'+n+'-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 endLineTarget, true)\r\n                })\r\n            }\r\n            if( this.editExecutionDItem.contextMode != null) {\r\n                var top = 200\r\n                if (endLineTarget != null) {\r\n                    top = 600\r\n                }\r\n                endLineContext = this.editExecutionDItem.contextMode.uuid\r\n                this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editExecutionDItem.contextMode.uuid, top: this.element.top + top, left: this.element.left + this.$setPositionLeft} )\r\n                this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editExecutionDItem.contextMode.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                this.editExecutionDItem.contextMode = this.editExecutionDItem.contextMode.name\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id, end:endLineContext, \r\n                                    iscircle:false, refNum:5, idxID: this.editExecutionDItem.id, tabID: this.dependentStartupTab})\r\n                this.$nextTick(() => {\r\n                    EventBus.$emit('Element-open', false, endLineContext)\r\n                    this.newLine(this.element.uuid+'/edcontext-'+n+'-'+this.element.dependent[this.dependentStartupTab].id, this.element.uuid+'/edtable'+this.element.dependent[this.dependentStartupTab].id,\r\n                                 endLineContext, true)\r\n                })\r\n            }\r\n\r\n            this.$nextTick(() => {\r\n                if (endLineContext != null && endLineTarget == null) {\r\n                    EventBus.$emit('Element-open', true, endLineContext)\r\n                } else if (endLineContext == null && endLineTarget != null) {\r\n                    EventBus.$emit('Element-open', true, endLineTarget)\r\n                } \r\n            })\r\n            const addObj = Object.assign({}, this.editExecutionDItem)\r\n            this.element.dependent[this.dependentStartupTab].execution.push(addObj)\r\n            this.refExecution = n\r\n            this.cancelExecutionD()\r\n        },\r\n        setCMSelect() {\r\n            if (this.isEditingCM == true) { \r\n                if (this.editExecutionDItem.contextMode != null && this.editExecutionDItem.contextMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editExecutionDItem.contextMode.uuid, element: constant.Machine_str} )\r\n                    // document.getElementById(this.editExecutionDItem.contextMode.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', this.editExecutionDItem.contextMode.uuid)\r\n                }\r\n                this.setContextMList()\r\n                this.isEditingCM = false\r\n            } else {\r\n                this.isEditingCM = true\r\n            }\r\n        },\r\n        clearCMRef() {\r\n            this.isEditingCM = true\r\n            this.editExecutionDItem.contextMode = null\r\n        },\r\n        setTMSelect() {\r\n            if (this.isEditingTM == true) { \r\n                if (this.editExecutionDItem.targetMode != null && this.editExecutionDItem.targetMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editExecutionDItem.targetMode.uuid, element: constant.ModeDeclarationGroup_str} )\r\n                    // document.getElementById(this.editExecutionDItem.targetMode.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', this.editExecutionDItem.targetMode.uuid)\r\n                }\r\n                this.setTargetMList()\r\n                this.isEditingTM = false\r\n            } else {\r\n                this.isEditingTM = true\r\n            }\r\n        },\r\n        clearTMRef() {\r\n            this.isEditingTM = true\r\n            this.editExecutionDItem.targetMode = null\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n                this.deleteOpenElement()\r\n            }\r\n        },\r\n        deleteOpenElement() {\r\n            //EventBus.$emit('delete-line', this.$store.getters.getDeleteOpenElement(this.element.uuid))\r\n            this.$store.commit('deleteOpenElemnt', {uuid: this.element.uuid, isDeleteAll: false, startUUID: this.element.uuid} )\r\n        },\r\n        newLine(startLine, drawLine, endLine, isView) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            if (isView) {\r\n                EventBus.$emit('new-line', drawLine, endLine)\r\n            }\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.logLevel = this.element.logLevel\r\n            this.editARXML.logPath = this.element.logPath\r\n            this.editARXML.logProDesc = this.element.logProDesc\r\n            this.editARXML.logProID = this.element.logProID\r\n            this.editARXML.restart = this.element.restart\r\n            this.editARXML.preMapping = this.element.preMapping\r\n            this.editARXML.prodesign = this.element.prodesign\r\n            this.editARXML.determin = this.element.determin\r\n            this.editARXML.execut = this.element.execut\r\n            this.editARXML.machinname = this.element.machinname\r\n            this.editARXML.machinetype = this.element.machinetype\r\n            this.editARXML.logMode = JSON.parse(JSON.stringify(this.element.logMode))\r\n            this.editARXML.dependent = JSON.parse(JSON.stringify(this.element.dependent))\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editProcess', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n            this.element.logPath = this.editARXML.logPath\r\n            this.element.logProDesc = this.editARXML.logProDesc\r\n            this.element.logProID = this.editARXML.logProID\r\n            this.element.restart = this.editARXML.restart\r\n            this.element.preMapping = this.editARXML.preMapping\r\n            this.element.machinname = this.editARXML.machinname\r\n\r\n            this.editARXML.logLevel = this.editARXML.logLevel.toUpperCase()\r\n            if(this.editARXML.logLevel == 'FATAL' || this.editARXML.logLevel == 'ERROR' || this.editARXML.logLevel == 'WARN' \r\n               || this.editARXML.logLevel == 'INFO' || this.editARXML.logLevel == 'DEBUG' || this.editARXML.logLevel == 'VERBOSE') {\r\n                this.element.logLevel = this.editARXML.logLevel\r\n            }\r\n\r\n            var endLine = null, changEndLine = null\r\n\r\n            if (this.editARXML.prodesign != this.element.prodesign) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processprodesign')\r\n                }\r\n                changEndLine = this.$store.getters.getProcessDesignPath(this.editARXML.prodesign)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/processprodesign', this.element.uuid+'/processprodesign', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.prodesign = this.editARXML.prodesign\r\n\r\n            if (this.editARXML.determin != this.element.determin) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processdetermin')\r\n                }\r\n                changEndLine = this.$store.getters.getDeterministicClientPath(this.editARXML.determin)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/processdetermin', this.element.uuid+'/processdetermin', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.determin = this.editARXML.determin\r\n\r\n            if (this.editARXML.execut != this.element.execut) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processexecut')\r\n                }\r\n                changEndLine = this.$store.getters.getExecutablePath(this.editARXML.execut)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/processexecut', this.element.uuid+'/processexecut', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.execut = this.editARXML.execut\r\n\r\n            if (this.editARXML.machinetype != this.element.machinetype) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processmodedeclar')\r\n                }\r\n                changEndLine = this.$store.getters.getModeDeclarationPath(this.editARXML.machinetype, 0)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/processmodedeclar', this.element.uuid+'/processmodedeclar', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.machinetype = this.editARXML.machinetype\r\n\r\n            if (this.editARXML.dependent.length > 0) {\r\n                this.editARXML.dependent.forEach(item => {\r\n                    item.execution.forEach(data => {\r\n                        var isHaveTableC = false, isHaveTableT = false\r\n                        this.element.dependent.forEach(dep => {\r\n                            dep.execution.forEach(exe => {\r\n                                if (exe.id == data.id) {\r\n                                    if (exe.contextMode == data.contextMode) {\r\n                                        isHaveTableC = true\r\n                                    }\r\n                                    if (exe.targetMode == data.targetMode) {\r\n                                        isHaveTableT = true\r\n                                    }\r\n                                }\r\n                            })\r\n                        })\r\n                        if (!isHaveTableC) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getMachinePath(data.contextMode, 2)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                            }\r\n                        }\r\n                        if (!isHaveTableT) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getModeDeclarationPath(data.targetMode, 1)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                            }\r\n                        }\r\n                    })\r\n                    item.functionItem.forEach(data => {\r\n                        var isHaveTableC = false, isHaveTableT = false\r\n                        this.element.dependent.forEach(dep => {\r\n                            dep.functionItem.forEach(fun => {\r\n                                if (fun.id == data.id ) {\r\n                                    if (fun.contextMode == data.contextMode) {\r\n                                        isHaveTableC = true\r\n                                    }\r\n                                    if (fun.targetMode == data.targetMode) {\r\n                                        isHaveTableT = true\r\n                                    }\r\n                                }\r\n                            })\r\n                        })\r\n                        if (!isHaveTableC) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getMachinePath(data.contextMode, 2)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                            }\r\n                        }\r\n                        if (!isHaveTableT) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getModeDeclarationPath(data.targetMode, 1)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                            }\r\n                        }\r\n                    })\r\n                    var isHaveTableR = false, isHaveTableS = false\r\n                    this.element.dependent.forEach(ele => {\r\n                        if (ele.id == item.id) {\r\n                            if (ele.resourceRef == item.resourceRef) {\r\n                                isHaveTableR = true\r\n                            }\r\n                            if (ele.startupConfigRef == item.startupConfigRef) {\r\n                                isHaveTableS = true\r\n                            }\r\n                        }\r\n                    })\r\n                    if (!isHaveTableR) {\r\n                        endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+item.id)\r\n                        if (endLine != undefined) {\r\n                            this.deleteLine(this.element.uuid+'/processresorce-'+item.id)\r\n                        }\r\n                        changEndLine = this.$store.getters.getMachinePath(item.resourceRef, 1)\r\n                        if (changEndLine != null) {\r\n                            this.newLine(this.element.uuid+'/processresorce-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                        }\r\n                    }\r\n                    if (!isHaveTableS) {\r\n                        endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+item.id)\r\n                        if (endLine != undefined) {\r\n                            this.deleteLine(this.element.uuid+'/processstartup-'+item.id)\r\n                        }\r\n                        changEndLine = this.$store.getters.getStartupConfigPath(item.startupConfigRef)\r\n                        if (changEndLine != null) {\r\n                            this.newLine(this.element.uuid+'/processstartup-'+item.id, this.element.uuid+'/processStarupC', changEndLine, false)\r\n                        }\r\n                    }\r\n                })\r\n                this.element.dependent.forEach(item => {\r\n                    var isHaveTable = false\r\n                    item.execution.forEach(data => {\r\n                        isHaveTable = false\r\n                        this.editARXML.dependent.forEach(edit => {\r\n                            edit.execution.forEach(editA => {\r\n                                if (editA.id == data.id) {\r\n                                    isHaveTable = true\r\n                                }\r\n                            })\r\n                        })\r\n                        if (!isHaveTable) {\r\n                            if (data.contextMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                            if (data.targetMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                    item.functionItem.forEach(data => {\r\n                        isHaveTable = false\r\n                        this.editARXML.dependent.forEach(edit => {\r\n                            edit.functionItem.forEach(editE => {\r\n                                if (editE.id == data.id) {\r\n                                    isHaveTable = true\r\n                                }\r\n                            })\r\n                        })\r\n                        if (!isHaveTable) {\r\n                            if (data.contextMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                            if (data.targetMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                    isHaveTable = false\r\n                    this.editARXML.dependent.forEach(edit => {\r\n                        if (edit.id == item.id) {\r\n                            isHaveTable = true\r\n                        }\r\n                    })\r\n                    if (!isHaveTable) {\r\n                        if (item.resourceRef != null) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processresorce-'+item.id)\r\n                            }\r\n                        }\r\n                        if (item.startupConfigRef != null) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processstartup-'+item.id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                if (this.element.dependent.length > 0) {\r\n                    this.element.dependent.forEach(item => {\r\n                        item.execution.forEach(data => {\r\n                            if (data.contextMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/edcontext-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                            if (data.targetMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/edtarget-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                        })\r\n                        item.functionItem.forEach(data => {\r\n                            if (data.contextMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/fgcontext-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                            if (data.targetMode != null) {\r\n                                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                                if (endLine != undefined) {\r\n                                    this.deleteLine(this.element.uuid+'/fgtarget-'+data.id+'-'+item.id)\r\n                                }\r\n                            }\r\n                        })\r\n                        if (item.resourceRef != null) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processresorce-'+item.id)\r\n                            }\r\n                        }\r\n                        if (item.startupConfigRef != null) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+item.id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processstartup-'+item.id)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            this.element.dependent = JSON.parse(JSON.stringify(this.editARXML.dependent))\r\n\r\n            for(let i=0; i<this.editARXML.logMode.length; i++) {\r\n                if (!(this.editARXML.logMode[i] == 'CONSOLE' || this.editARXML.logMode[i] == 'FILE' ||\r\n                    this.editARXML.logMode[i] == 'NETWORK')) {\r\n                        this.editARXML.logMode.splice(i ,1)\r\n                }\r\n            }\r\n            this.element.logMode = JSON.parse(JSON.stringify(this.editARXML.logMode))\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []}\r\n            this.editTextDependent = {execution: [], functionItem: [], resourceRef: null, startupConfigRef: null, id: ''}\r\n            this.editTextExecution = {contextMode: null, targetMode: null, id: ''}\r\n            this.editTextFunction = {contextMode: null, targetMode: null, id: ''}\r\n            this.dialogText = false\r\n        },\r\n        newTextDependent() {\r\n            this.editTextDependent = {execution: [], functionItem: [], resourceRef: null, startupConfigRef: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                 n++;\r\n                res = this.editARXML.dependent.some(item => item.id === n)\r\n            }\r\n            this.editTextDependent.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextDependent)\r\n            this.editARXML.dependent.push(addObj);\r\n        },\r\n        deletTextDependent(idx) {\r\n            this.editARXML.dependent.splice(idx,1)\r\n        },\r\n        newTextExecution(idxD) {\r\n            this.editTextExecution = {contextMode: null, targetMode: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.editARXML.dependent[idxD].execution.some(item => item.id === n)\r\n            }\r\n            this.editTextExecution.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextExecution)\r\n            this.editARXML.dependent[idxD].execution.push(addObj);\r\n        },\r\n        deletTextExecution(idx, idxD) {\r\n            this.editARXML.dependent[idxD].execution.splice(idx,1)\r\n        },\r\n        newTextFunction(idxD) {\r\n            this.editTextFunction = {contextMode: null, targetMode: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++;\r\n                res = this.editARXML.dependent[idxD].functionItem.some(item => item.id === n)\r\n            }\r\n            this.editTextFunction.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextFunction)\r\n            this.editARXML.dependent[idxD].functionItem.push(addObj);\r\n        },\r\n        deletTextFunction(idx, idxD) {\r\n            this.editARXML.dependent[idxD].functionItem.splice(idx,1)\r\n        },\r\n        newTextLogMode() {\r\n            if (this.editARXML.logMode.length < 3) {\r\n                this.editARXML.logMode.push('')\r\n            }\r\n        },\r\n        deletTextLogMode(idx) {\r\n            this.editARXML.logMode.splice(idx,1)\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}