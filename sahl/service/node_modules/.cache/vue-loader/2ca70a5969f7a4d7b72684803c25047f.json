{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\navigatorbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\navigatorbar.vue","mtime":1659587878704},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["navigatorbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"navigatorbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-icon class=\"subtitle-1 green\" style=\"margin:0 5px 0 15px;\" dark >mdi-view-dashboard</v-icon>\r\n                    SAHL\r\n        <v-divider></v-divider>\r\n        <v-list dense>\r\n            <v-list-group v-for=\"(item,idx) in navigatorList\" :key=\"idx\"\r\n                    prepend-icon=\"mdi-alpha-p-circle-outline\" no-action sub-group v-model=\"openlist\"> <!--  sub-group 빼면 리스트가 하나씩만 보인다-->\r\n                <template v-slot:activator>\r\n                    <v-list-item-icon v-if=\"item.validation\">\r\n                        <v-icon color=\"red\" dark>mdi-exclamation</v-icon>\r\n                    </v-list-item-icon>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.name\" style=\"fontsize:20px\" @contextmenu=\"show($event, 0)\"></v-list-item-title>\r\n                    </v-list-item-content>\r\n                </template> \r\n                <v-card flat @contextmenu=\"show($event,1)\">\r\n                    <v-treeview ref=\"tree\" :items=\"item.children\" activatable item-key=\"uuid\" :open.sync=\"openIds\" :active.sync=\"activenode\" dense @update:open=\"openNode\" @update:active=\"activeElement()\" class=\"caption\">\r\n                        <template v-slot:prepend=\"{ item, open }\">\r\n                            <!-- <v-badge v-if=\"item.validation\" bordered dot color=\"red\" offset-x=\"10\" offset-y=\"12\"> -->\r\n                            <div v-if=\"item.validation\">\r\n                                <v-icon color=\"red\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    mdi-folder-alert\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children\" color=\"red\">mdi-alpha-e-circle-outline</v-icon>\r\n                                <v-icon v-else color=\"red\">mdi-clipboard-alert-outline</v-icon>\r\n                            </div>\r\n                            <!-- </v-badge> -->\r\n                            <div v-else>\r\n                                <v-icon color=\"#ECB35D\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children && item.children.length == 0\" color=\"primary\">mdi-alpha-e</v-icon>\r\n                                <v-icon v-else color=\"primary\">{{item.icon}}</v-icon>\r\n                            </div>\r\n                        </template>\r\n                    </v-treeview>\r\n                </v-card>\r\n            </v-list-group>\r\n        </v-list>\r\n        <v-menu v-model=\"showMenu\" :position-x=\"x\" :position-y=\"y\" absolute offset-y>\r\n            <v-list v-if=\"ismenu == 2\" dense class=\"text-start\">\r\n                <v-edit-dialog eager large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"setRename()\" @save=\"cancelRename()\"> \r\n                    <v-list-item @click=\"renameElement()\">\r\n                        <v-list-item-content>\r\n                            <v-list-item-title>Element Rename</v-list-item-title> <!--이름을 길게 안하면 menu밑에 text가 길어서 active된 라인이 짧아짐-->\r\n                        </v-list-item-content>\r\n                    </v-list-item>\r\n                    <template v-slot:input>\r\n                        <br>\r\n                        <v-text-field v-model=\"rename.name\" outlined clearable label=\"Rename\" type=\"text\"></v-text-field>\r\n                    </template>\r\n                </v-edit-dialog>\r\n                <v-list-item  v-for=\"(item, index) in menuElementitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else-if=\"ismenu == 0\" dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuProjectitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else-if=\"ismenu == 1\" dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuFirstitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-menu>\r\n        <v-dialog v-model=\"dialogDeleteProject\" persistent width=\"600\">\r\n            <v-card color=\"red accent-2\">\r\n                <v-card-title class=\"text-h6 white--text\" height=\"10px\"> \r\n                    <v-icon color=\"white lighten-1\">mdi-alert-outline</v-icon>\r\n                    warning \r\n                </v-card-title>\r\n                <v-card-text class=\"text-h5 text--primary text-center\">\r\n                    {{strDelete}}\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"white darken-1\" text  @click=\"okDelete(ismenu)\" >\r\n                        Ok\r\n                    </v-btn>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"white darken-1\" text @click=\"dialogDeleteProject = false\">\r\n                        Cancel\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../main'\r\nimport constant from \"../store/constants.js\"\r\n\r\n\r\nexport default({\r\n    computed: {\r\n        SAHLProject () {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        ismakeProject() {\r\n            return this.$store.state.ismakeProject\r\n        },\r\n    },\r\n    watch:{\r\n        activeUUID(val) {\r\n            //console.log('activeUUID '+this.activenode[0])\r\n            //console.log('activeUUID*** '+ val)\r\n            if(this.activenode[0] != null) {\r\n                if(val != null) {\r\n                    this.activenode = []\r\n                    this.activenode.push(val)\r\n                } else if (val == null && this.activenode[0].indexOf('-') !== -1) {\r\n                    this.activenode = []\r\n                }\r\n            } else if (this.activenode[0] == undefined && val != null) {\r\n                this.activenode.push(val)\r\n            }\r\n        },\r\n        ismakeProject(val) {\r\n            if (!val) {\r\n                this.openIds = []\r\n            }\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            rules: { name:  [val => (val || '').length > 0 ],},\r\n            showMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n            openlist: true,\r\n            ismenu: 0,\r\n            activenode: [],\r\n            openIds: [],\r\n            dialogDeleteProject: false,\r\n            strDelete: null,\r\n            rename: { id: 0, name: null, parent: null},\r\n            menuElementitems: [\r\n                // { title: 'Rename', menuAction: action => { this.renameElement(action) } },\r\n                { title: 'Delete', menuAction: action => { this.deleteElement(action) } },\r\n                { title: 'Copy & Paste', menuAction: action => { this.copyElement(action) } },\r\n            ],\r\n            menuFirstitems: [\r\n                { title: 'New',    menuAction: action => { this.newGroupElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.openElement(action) } },\r\n                { title: 'Close',   menuAction: action => { this.closeElement(action) } },\r\n            ],\r\n            menuitems: [\r\n                { title: 'New',    menuAction: action => { this.newElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.openElement(action) } },\r\n                { title: 'Close',   menuAction: action => { this.closeElement(action) } },\r\n            ],\r\n            menuProjectitems: [\r\n                { title: 'Open All',   menuAction: action => { this.openAll(action) } },\r\n                { title: 'Close All',   menuAction: action => { this.closeAll(action) } },\r\n                { title: 'Delete Project', menuAction: action => { this.deleteProject(action) } },\r\n                { title: 'Save',           menuAction: action => { this.saveElement(action) } },\r\n            ],\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('add-element', (element) => { \r\n            if(!this.openIds.some(item => item === element)){\r\n                this.openIds.push(element)\r\n            }\r\n        })\r\n        EventBus.$on('active-element', (uuid) => {\r\n            this.activenode = []\r\n            if (uuid != null) {\r\n                this.activenode.push(uuid)\r\n            }\r\n            //console.log(this.activenode)\r\n        })\r\n        EventBus.$on('new-file', () => {this.newElement()})\r\n        EventBus.$on('delete-file', () => {this.deleteElement()})\r\n        EventBus.$on('delete-project', () => {this.deleteProject()})\r\n    },\r\n\r\n    methods: {\r\n        show (e, isprojectmenu) {\r\n            e.preventDefault()\r\n            if (this.activenode[0] != null || isprojectmenu == 0) {\r\n                this.ismenu = 3\r\n                if (isprojectmenu == 0) {\r\n                    this.ismenu = isprojectmenu\r\n                } else if (this.activenode[0].indexOf('-') != -1) {\r\n                    this.ismenu = 2\r\n                } else if (!(this.activenode[0] == constant.DateType_str || this.activenode[0] == constant.Service_str || this.activenode[0] == constant.AdaptiveApplication_str\r\n                    || this.activenode[0] == constant.Machines_str || this.activenode[0] == constant.Platform_str || this.activenode[0] == constant.ServiceInterfaces_str\r\n                    || this.activenode[0] == constant.SomeIPEvents_str || this.activenode[0] == constant.ServiceInstances_str || this.activenode[0] == constant.Errors_str\r\n                    || this.activenode[0] == constant.PER_str || this.activenode[0] == constant.PHM_str || this.activenode[0] == constant.NM_str || this.activenode[0] == constant.Log_str\r\n                    || this.activenode[0] == constant.IAM_str || this.activenode[0] == constant.UCM_str)) {\r\n                    this.ismenu = isprojectmenu\r\n                }\r\n                this.showMenu = false\r\n                this.x = e.clientX\r\n                this.y = e.clientY\r\n                this.$nextTick(() => {\r\n                    this.showMenu = true\r\n                })\r\n            }\r\n        },\r\n        openNode() {\r\n            //alert(this.openIds)\r\n        },\r\n        newElement() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000)) // (max - min) + min\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            // const elementX = Array.from({length:4}, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n            // const elementY = Array.from({length:4}, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n            if (this.activenode[0] == constant.CompuMethod_str) {\r\n                this.$store.commit('addElementCompuMehtod', {\r\n                    name: this.$store.getters.getNameCompuMethod, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:'', attributeName: '', scales:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.DataConstr_str) {\r\n                this.$store.commit('addElementDataConstr', {\r\n                    name: this.$store.getters.getNameDataConstr, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, lowerlimit:'', upperlimit:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.SWBaseType_str) {\r\n                this.$store.commit('addElementSWBaseType', {\r\n                    name: this.$store.getters.getNameSWBaseType, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:'', encoding:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.ApplicationArray_str) {\r\n                this.$store.commit('addElementApplicationArray', { // elehandling, elesemantics 는 select라서 초기값이 null이다.\r\n                    name: this.$store.getters.getNameApplicationArray,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', dynamicArrySize:'', elename: '', elehandling: null, elesemantics: null, elemaxnumber:'', \r\n                })\r\n            } else if (this.activenode[0] == constant.Implementation_str) {\r\n                this.$store.commit('addElementImplementation', { //typeref, templatetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameImplementation, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', namespace:'', arraysize:'', typeemitter:'', \r\n                    typeref: null, templatetype:null, desc:'', traceName: '', trace: [], ddpc:[], idtelement:[],\r\n                })\r\n            } else if (this.activenode[0] == constant.Machine_str) {\r\n                this.$store.commit('addElementMachine', {\r\n                    name: this.$store.getters.getNameMachine, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, machinedesign:null, timeout:'', hwelement:[], executable:null, admin: '',\r\n                    functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.MachineDesigne_str) {\r\n                this.$store.commit('addElementMachineDesign', {\r\n                    name: this.$store.getters.getNameMachineDesign, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, access: null, resettimer:'', connector:[], servicediscover:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.ModeDeclarationGroup_str) {\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: this.$store.getters.getNameModeDeclarationGroup, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, modedeclaration:[], initmode:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.HWElement_str) {\r\n                this.$store.commit('addElementHWElement', { //category 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameHWElement,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:null, attribute:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.HWCategory_str) {\r\n                this.$store.commit('addElementHWCategory', { \r\n                    name: this.$store.getters.getNameHWCategory,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    attribute: []\r\n                })\r\n            }else if (this.activenode[0] == constant.EthernetCluster_str) {\r\n                this.$store.commit('addElementEthernetCluster', {\r\n                    name: this.$store.getters.getNameEthernetCluster, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, conditional:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.ProcesstoMachineMapping_str) {\r\n                this.$store.commit('addElementProtoMachineMapping', { //ptmmMachine, ptmmProcess  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcesstoMachineMapping, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    mapping: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.SWComponents_str) {\r\n                this.$store.commit('addElementSWComponents', {\r\n                    name: this.$store.getters.getNameSWComponents, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    pport: [], rport: [], prport: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.Process_str) {\r\n                this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n                })\r\n            } else if (this.activenode[0] == constant.ProcessDesign_str) {\r\n                this.$store.commit('addElementProcessDesign', { //executableref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcessDesign, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,icon:\"mdi-clipboard-outline\", validation: false,\r\n                    executableref: null, determin: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.Executable_str) {\r\n                this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameExecutable, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.StartupConfig_str) {\r\n                this.$store.commit('addElementStartupConfig', {\r\n                    name: this.$store.getters.getNameStartupConfig, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    config: []\r\n                })\r\n            } else if (this.activenode[0] == constant.DeterministicClient_str) {\r\n                this.$store.commit('addElementDeterministicClien', {\r\n                    name: this.$store.getters.getNameDeterministicClient, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    cycletiem: '', numofworkers: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPServiceInterfaceDeployment_str) {\r\n                this.$store.commit('addElementSomeIPService', {\r\n                    name: this.$store.getters.getNameSomeIPService, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, version:null, namespace:null, events:null, fields:null, methods:null, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    service: null, majversion:'', minversion:'', id: '', eventG:[], eventD: [], methodD:[], fieldD:[],\r\n                })\r\n            } else if (this.activenode[0] == constant.ServiceInterface_str) {\r\n                this.$store.commit('addElementService', {\r\n                    name: this.$store.getters.getNameServiceInterface, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    versionMaj:'', versionMin:'', namespace:'', events:[], fields:[], methods:[], isservice: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.Client_str) {\r\n                this.$store.commit('addElementClient', { \r\n                    name: this.$store.getters.getNameClient, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    delay: '', max: '', timetolive: '', delaymax: '', delaymin:''\r\n                })\r\n            } else if (this.activenode[0] == constant.Server_str) {\r\n                this.$store.commit('addElementServer', { \r\n                    name: this.$store.getters.getNameServer, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    delaymax: '', delaymin: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPClient_str) {\r\n                this.$store.commit('addElementSomeIPClient', { \r\n                    name: this.$store.getters.getNameSomeIPClient, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    findtime: '', inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPServer_str) {\r\n                this.$store.commit('addElementSomeIPServer', { \r\n                    name: this.$store.getters.getNameSomeIPServer, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '', delaymax: '', delaymin: '',\r\n                    offer: '', tiemtolive: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPToMachineMapping_str) {\r\n                this.$store.commit('addElementSomeIPtoMachine', { //ccref, siref  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameSomeIPtoMachine, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    ccref: null, serviceI: [], tcp:'', udp: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.ToPortPrototypeMapping_str) {\r\n                this.$store.commit('addElementToPortPrototype', { \r\n                    name: this.$store.getters.getNameToPortPrototype, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    selectPort:null, porttype: null, context: null, process:null, selectServiceIns: null, serviceIns: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.RequiredSomeIP_str) {\r\n                this.$store.commit('addElementRequiredSomeIP', {  //deployref, clientref,ver는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameRequiredSomeIP, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, minover: '', id: '', clientref: null, ver: null, method: [], requiredevent: [], E2EEvent: [], E2EMethod: []\r\n                })\r\n            } else if (this.activenode[0] == constant.ProvidedSomeIP_str) {\r\n                this.$store.commit('addElementProvidedSomeIP', {\r\n                    name: this.$store.getters.getNameProvidedSomeIP, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, someipserver: null, id: '', loadPriority: '', loadWeight: '', eventP: [], method: [], eventG: [], E2EEvent: [], E2EMethod: []\r\n                })\r\n            } else if (this.activenode[0] == constant.E2EProfileConfig_str) {\r\n                this.$store.commit('addElementE2EProfileConfig', {\r\n                    name: this.$store.getters.getNameE2EProfileConfig, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    profile: []\r\n                })\r\n            } else if (this.activenode[0] == constant.SDG_DEF_str) {\r\n                this.$store.commit('addElementSDG_DEF', {\r\n                    name: this.$store.getters.getNameSDG_DEF, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    sdgClass: []\r\n                })\r\n            } else if (this.activenode[0] == constant.Error_str) {\r\n                this.$store.commit('addElementError', { //errorDref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameError, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    desc: '', errorcode: '', errorDref: null\r\n                })\r\n            } else if (this.activenode[0] == constant.Errorset_str) {\r\n                this.$store.commit('addElementErrorSet', {\r\n                    name: this.$store.getters.getNameErrorSet, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    errorref: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.ErrorDomain_str) {\r\n                this.$store.commit('addElementErrorDomain', {\r\n                    name: this.$store.getters.getNameErrorDomain, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    namespace: '', value: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.FileArray_str) {\r\n                this.$store.commit('addElementPERFileArray', {\r\n                    name: this.$store.getters.getNamePERFileArray, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    sdgs: [], maxSize: '', miniSize: '', updateS: null, uri: '', files: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.FileProxyInterf_str) {\r\n                this.$store.commit('addElementPERFileProxy', {\r\n                    name: this.$store.getters.getNamePERFileProxy, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category: '', minisize: '', redundancy: null, updateS: null, encoding: '', proxy: [], maxfiles: ''\r\n                })\r\n            } else if (this.activenode[0] == constant.KeyValueData_str) {\r\n                this.$store.commit('addElementPERKeyValueD', {\r\n                    name: this.$store.getters.getNamePERKeyValueD, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    sdgs: [], maxSize: '', miniSize: '', updateS: null, uri: '', redundancy: [], keyValue: []\r\n                })\r\n            } else if (this.activenode[0] == constant.KeyValueDI_str) {\r\n                this.$store.commit('addElementPERKeyValueDI', {\r\n                    name: this.$store.getters.getNamePERKeyValueDI, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    minisize: '', redundancy: null, updateS: null, data: [], serialization: []\r\n                })\r\n            } else if (this.activenode[0] == constant.PortProtoFileA_str) {\r\n                this.$store.commit('addElementPERPPtoFileArray', {\r\n                    name: this.$store.getters.getNamePERPPtoFileArray, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    fileArray: null, port: null, process: null\r\n                })\r\n            } else if (this.activenode[0] == constant.PortProtoKeyV_str) {\r\n                this.$store.commit('addElementPERPPtoKeyValue', {\r\n                    name: this.$store.getters.getNamePERPPtoKeyValue, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    keyValue: null, port: null, process: null\r\n                })\r\n            } else if (this.activenode[0] == constant.PlatformHealthManagC_str) {\r\n                this.$store.commit('addElementPHMContribution', {\r\n                    name: this.$store.getters.getNamePHMContribution, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                })\r\n            } else if (this.activenode[0] == constant.ContritoMachine_str) {\r\n                this.$store.commit('addElementPHMtoMachine', {\r\n                    name: this.$store.getters.getNamePHMtoMachine, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    machine: null, contri: []\r\n                })\r\n            } else if (this.activenode[0] == constant.HealthChannel_str) {\r\n                this.$store.commit('addElementPHMHealth', {\r\n                    name: this.$store.getters.getNamePHMHealth, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    status: []\r\n                })\r\n            } else if (this.activenode[0] == constant.RecoveryVA_str) {\r\n                this.$store.commit('addElementPHMRecovery', {\r\n                    name: this.$store.getters.getNamePHMRecovery, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    reconame: '', faf: null\r\n                })\r\n            } else if (this.activenode[0] == constant.PHMSupervised_str) {\r\n                this.$store.commit('addElementPHMSupervised', {\r\n                    name: this.$store.getters.getNamePHMSupervised, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    checkpoint: []\r\n                })\r\n            } else if (this.activenode[0] == constant.RecoveryActionInterf_str) {\r\n                this.$store.commit('addElementRecoveryVia', {\r\n                    name: this.$store.getters.getNameRecoveryVia, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    process: null, swcomponent: null, port: null, phmRecovery: null\r\n                })\r\n            } else if (this.activenode[0] == constant.ComMethodGDesign_str) {\r\n                this.$store.commit('addElementMethodGD', {\r\n                    name: this.$store.getters.getNameMethodGD, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    processD: null, SIMethod: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ComEventGDesign_str) {\r\n                this.$store.commit('addElementEventGD', {\r\n                    name: this.$store.getters.getNameEventGD, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    processD: null, SIEvent: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ComFieldGDesign_str) {\r\n                this.$store.commit('addElementFieldGD', {\r\n                    name: this.$store.getters.getNameFieldGD, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    processD: null, SIField: null, role: null\r\n                })\r\n            } else if (this.activenode[0] == constant.ComMethodGrant_str) {\r\n                this.$store.commit('addElementMethodG', {\r\n                    name: this.$store.getters.getNameMethodG, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    methodD: null, provide: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ComEventGrant_str) {\r\n                this.$store.commit('addElementEventG', {\r\n                    name: this.$store.getters.getNameEventG, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    eventD: null, provide: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ComFieldGrant_str) {\r\n                this.$store.commit('addElementFieldG', {\r\n                    name: this.$store.getters.getNameFieldG, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    fieldD: null, provide: null, role: null\r\n                })\r\n            } else if (this.activenode[0] == constant.SWCluster_str) {\r\n                this.$store.commit('addElementSoftWareCluster', {\r\n                    name: this.$store.getters.getNameSoftWareCluster, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category: '', idVendor: '', version: '', sdgs: [], executable: [], machineD: [], toMachine: [], process: [], sswc: [],\r\n                })\r\n            } else if (this.activenode[0] == constant.SWPackage_str) {\r\n                this.$store.commit('addElementSoftWarePackage', {\r\n                    name: this.$store.getters.getNameSoftWarePackage, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    action: null, activation: null, compSWPsize: '', deltaPakage: null, maximunVer: '', minimunVer: '',\r\n                    id: '', postReboot: null, preReboot: null, swcluster: null, uncompSWCsize: ''\r\n                })\r\n            } else if (this.activenode[0] == constant.VehiclePackage_str) {\r\n                this.$store.commit('addElementVehiclePackage', {\r\n                    name: this.$store.getters.getNameVehiclePackage, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    reposi: '', sdgs: [], driver: [], rollout: [], ucms: [],\r\n                })\r\n            }\r\n\r\n            if(!this.openIds.some(item => item === this.activenode[0])){\r\n                this.openIds.push(this.activenode[0])\r\n            }\r\n        },\r\n        newGroupElement() {\r\n            if (this.activenode[0] == constant.AdaptiveApplication_str) {\r\n                if(!this.openIds.some(item => item === constant.AdaptiveApplication_str)){\r\n                    this.openIds.push(constant.AdaptiveApplication_str)\r\n                }\r\n                this.$store.commit('addElementProtoMachineMapping', { \r\n                    name: this.$store.getters.getNameProcesstoMachineMapping, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false, mapping: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ProcesstoMachineMapping_str)){\r\n                    this.openIds.push(constant.ProcesstoMachineMapping_str)\r\n                }\r\n                this.$store.commit('addElementSWComponents', {\r\n                    name: this.$store.getters.getNameSWComponents, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    pport: [], rport: [], prport: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.SWComponents_str)){\r\n                    this.openIds.push(constant.SWComponents_str)\r\n                }\r\n                this.$store.commit('addElementProcess', { \r\n                    name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Process_str)){\r\n                    this.openIds.push(constant.Process_str)\r\n                }\r\n                this.$store.commit('addElementProcessDesign', {\r\n                    name: this.$store.getters.getNameProcessDesign, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10,icon:\"mdi-clipboard-outline\", validation: false,\r\n                    executableref: null, determin: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ProcessDesign_str)){\r\n                    this.openIds.push(constant.ProcessDesign_str)\r\n                }\r\n                this.$store.commit('addElementExecutable', { \r\n                    name: this.$store.getters.getNameExecutable, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() *3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Executable_str)){\r\n                    this.openIds.push(constant.Executable_str)\r\n                }\r\n                this.$store.commit('addElementStartupConfig', {\r\n                    name: this.$store.getters.getNameStartupConfig, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    config: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.StartupConfig_str)){\r\n                    this.openIds.push(constant.StartupConfig_str)\r\n                }\r\n                this.$store.commit('addElementDeterministicClien', {\r\n                    name: this.$store.getters.getNameDeterministicClient, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    cycletiem: '', numofworkers: '',\r\n                })\r\n                if(!this.openIds.some(item => item === constant.DeterministicClient_str)){\r\n                    this.openIds.push(constant.DeterministicClient_str)\r\n                }\r\n            } else if (this.activenode[0] == constant.Machines_str) {\r\n                if(!this.openIds.some(item => item === constant.Machines_str)){\r\n                    this.openIds.push(constant.Machines_str)\r\n                }\r\n                this.$store.commit('addElementMachine', {\r\n                    name: this.$store.getters.getNameMachine, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, machinedesign:null, timeout:'', hwelement:[], executable:null, admin: '',\r\n                    functiongroup:[], processor: [], moduleinstant: [], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Machine_str)){\r\n                    this.openIds.push(constant.Machine_str)\r\n                }\r\n                this.$store.commit('addElementMachineDesign', {\r\n                    name: this.$store.getters.getNameMachineDesign, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, access: null, resettimer:'', connector:[], servicediscover:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.MachineDesigne_str)){\r\n                    this.openIds.push(constant.MachineDesigne_str)\r\n                }\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: this.$store.getters.getNameModeDeclarationGroup, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, modedeclaration:[], initmode:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ModeDeclarationGroup_str)){\r\n                    this.openIds.push(constant.ModeDeclarationGroup_str)\r\n                }\r\n                this.$store.commit('addElementHWElement', {\r\n                    name: this.$store.getters.getNameHWElement,  input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, category:null, attribute:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.HWElement_str)){\r\n                    this.openIds.push(constant.HWElement_str)\r\n                }\r\n                this.$store.commit('addElementHWCategory', {\r\n                    name: this.$store.getters.getNameHWCategory,  input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false, attribute: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.HWCategory_str)){\r\n                    this.openIds.push(constant.HWCategory_str)\r\n                }\r\n                this.$store.commit('addElementEthernetCluster', {\r\n                    name: this.$store.getters.getNameEthernetCluster, input: false, path: '',\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, conditional:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.EthernetCluster_str)){\r\n                    this.openIds.push(constant.EthernetCluster_str)\r\n                }\r\n            }\r\n        },\r\n        openElement() {\r\n            if(!this.openIds.some(item => item === this.activenode[0])){\r\n                this.openIds.push(this.activenode[0])\r\n            }\r\n        },\r\n        closeElement() {\r\n            this.openIds.forEach((ele,i) => {\r\n                if( ele == this.activenode[0]) {\r\n                    this.openIds.splice(i,1)\r\n                }\r\n            })\r\n        },\r\n        activeElement() {\r\n            var treeitem\r\n            var arrelement\r\n            //console.log('00 '+ this.$store.state.activeUUID)\r\n            if(this.activenode[0] != this.$store.state.activeUUID) {\r\n                if(this.$store.state.activeUUID != null) {\r\n                    treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                    arrelement = treeitem.find(data =>  data.uuid === this.$store.state.activeUUID)\r\n                    //console.log(arrelement)\r\n                    if (this.activenode[0] != undefined && this.activenode[0].indexOf('-') !== -1) {\r\n                        var actelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                        this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                        EventBus.$emit('setLineActive', this.$store.state.activeUUID, false)\r\n                        this.$store.commit('setzIndex', {parent:actelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                        EventBus.$emit('setLineActive', this.activenode[0], true)\r\n                        this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n\r\n                        if(actelement.validation) { \r\n                            //console.log('111111'+this.activenode[0])\r\n                            this.$store.commit('setValidation', {parent:actelement.parent, uuid:this.activenode[0]})\r\n                        }\r\n\r\n                    } else {\r\n                        EventBus.$emit('setLineActive', this.$store.state.activeUUID, false)\r\n                        this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                        this.$store.commit('setuuid', {uuid: null} )\r\n                    }\r\n                } else if (this.activenode[0] != undefined){\r\n                    //console.log('=====    '+ this.activenode[0])\r\n                    if (this.activenode[0].indexOf('-') !== -1) {\r\n                        treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                        arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                        //console.log(arrelement)\r\n                        this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                        this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n                        EventBus.$emit('setLineActive', this.activenode[0], true)\r\n\r\n                        if(arrelement.validation) { \r\n                            this.$store.commit('setValidation', {parent:arrelement.parent, uuid:this.activenode[0]})\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n        },\r\n        deleteElement () {\r\n            this.dialogDeleteProject = true\r\n            this.strDelete = \"Element를 삭제하시겠습니까?\"\r\n        },\r\n        renameElement() {\r\n            //console.log('renameElement')\r\n            if (this.rename.id == 0) {\r\n                this.rename.id = this.activenode[0]\r\n            }\r\n            this.showMenu = false\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.rename.id)\r\n            this.rename.name = arrelement.name\r\n            this.rename.parent = arrelement.parent\r\n        },\r\n        setRename() {\r\n            //console.log('setRename')\r\n            this.$store.commit('renameElement', {uuid: this.rename.id, parent: this.rename.parent, name: this.rename.name})\r\n            this.cancelRename()\r\n        },\r\n        cancelRename() {\r\n            this.rename = { id: 0, name: null, parent: null}\r\n        },\r\n        saveElement () {\r\n            EventBus.$emit('shortcut-keys', 'save')\r\n        },\r\n        openAll() {\r\n            this.$store.state.navigatorList[this.$store.state.openProjectIndex].children.forEach( fir => {\r\n                if(!this.openIds.some(item => item === fir.name)){\r\n                        this.openIds.push(fir.name)\r\n                }\r\n                fir.children.forEach(sec => {\r\n                    if(sec.children.length > 0) {\r\n                        if(!this.openIds.some(item => item === sec.name)){\r\n                            this.openIds.push(sec.name)\r\n                        }\r\n                    }\r\n                    if(fir.name == constant.Service_str) {\r\n                        sec.children.forEach(thr => {\r\n                            if(thr.children.length > 0) {\r\n                                if(!this.openIds.some(item => item === thr.name)){\r\n                                    this.openIds.push(thr.name)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    if(fir.name == constant.Platform_str) {\r\n                        sec.children.forEach(thr => {\r\n                            if(thr.children.length > 0) {\r\n                                if(!this.openIds.some(item => item === thr.name)){\r\n                                    this.openIds.push(thr.name)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        closeAll() {\r\n            this.openIds = []\r\n        },\r\n        deleteProject() {\r\n            this.dialogDeleteProject = true\r\n            this.strDelete = \"Project를 삭제하시겠습니까?\"\r\n        },\r\n        okDelete() {\r\n            if(this.ismenu == 0) { //project\r\n                this.$store.commit( 'deleteProject')\r\n            } else if (this.ismenu == 2) {\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                this.$store.commit('deleteRefElement', {uuid:this.activenode[0]} ) // 내가 화살표의 끝인가?\r\n                this.$store.commit('deleteElementLine', {uuid:this.activenode[0]} ) // 내가 화살표의 시작인가?\r\n                this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n            }\r\n            this.dialogDeleteProject = false\r\n        },\r\n        copyElement() {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.$store.state.activeUUID)\r\n            this.$store.commit('copyElement', {parent:arrelement.parent, uuid: this.$store.state.activeUUID} )\r\n        },\r\n    },\r\n})\r\n</script>\r\n"]}]}