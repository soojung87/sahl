{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\implementationData.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\service\\src\\components\\implementationData.vue","mtime":1630566699706},{"path":"D:\\source\\service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50b29sYmFyLWNoYW5nZXsNCiAgICBjb2xvciA6IA0KfQ0K"},{"version":3,"sources":["implementationData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAseA;AACA;AACA","file":"implementationData.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"implementation\">\r\n        <v-container>\r\n            <v-card outlined>\r\n                <v-toolbar style=\"element.active? color:#FF1493 : color:#6A5ACD\" dark hide-on-scroll dense>\r\n                    <v-hover v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showImplementationData\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-toolbar-title>Implementation Data Type</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"implementationName\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" \r\n                                @input='inputImplementationName' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"implementationCatrgory\" label=\"Category\" placeholder=\"String\" style=\"height: 45px;\" \r\n                                @input='inputlementationCategory' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"implementationNameSpace\" label=\"Name space\" placeholder=\"String/String/...\" style=\"height: 45px;\" \r\n                                @input='inputlementationNameSpace' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"implementationArraySize\" label=\"Array Size\" placeholder=\"Integer\" style=\"height: 45px;\" \r\n                                @input='inputlementationArraySize' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"implementationTypeEmitter\" label=\"Type Emitter\" placeholder=\"String\" style=\"height: 45px;\" \r\n                                @input='inputlementationTypeEmitter' outlined dense></v-text-field>\r\n                    <v-select v-model='implementationTypeRef' label='Type Reference' :items='selTemplateType' @click=\"setTemplateTypeList()\" @change=\"inputlementationTypeRef\" outlined dense style=\"height: 45px;\">\r\n                        <template v-slot:append-item>\r\n                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                <v-icon >mdi-plus</v-icon>New Item\r\n                            </v-btn>\r\n                        </template>\r\n                    </v-select>\r\n                    <v-select v-model='implementationTemplateType' label='Template Type' :items='selTemplateType' @click=\"setTemplateTypeList()\" @change=\"inputlementationTemplateType\" outlined dense style=\"height: 45px;\">\r\n                        <template v-slot:append-item>\r\n                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                <v-icon >mdi-plus</v-icon>New Item\r\n                            </v-btn>\r\n                        </template>\r\n                    </v-select>\r\n                    <v-text-field v-model=\"implementationDesc\" label=\"Desc\" placeholder=\"String\" style=\"height: 45px;\" \r\n                                @input='inputlementationDesc' outlined dense></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"DDPC\" style=\"height:1px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showDDRCItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isDDRCOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Data Def Props Conditional\r\n                            <v-btn @click=\"deleteDDRC\" text x-small color=\"indigo\" v-if=\"isDDRCOpenClose\">\r\n                                <v-icon>{{ isdeleteDDRCItem ? 'mdi-minus' : 'mdi-check' }}</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isDDRCOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectDDRCItem\" :headers=\"headerDDRC\" :items=\"DDRCItem\" \r\n                                    :show-select=\"isdeleteDDRCItem\" item-key=\"compumethod\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteDDRCItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openDDRC(idx)\" @cancel=\"editDDRC(idx)\" @save=\"cancelDDRC\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-select v-model='editDDRCItem.compumethod' label='Compu Method' :items='selCompuMethod' @click=\"setCompuMethodList()\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                        <v-select v-model='editDDRCItem.dataconstr' label='Data Constr' :items='selDataConstr' @click=\"setDataConstrList()\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addDDRC()\" @save=\"cancelDDRC\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-select v-model='editDDRCItem.compumethod' label='Compu Method' :items='selCompuMethod' @click=\"setCompuMethodList()\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                        <v-select v-model='editDDRCItem.dataconstr' label='Data Constr' :items='selDataConstr' @click=\"setDataConstrList()\">\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"IDTElement\" style=\"height:1px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showIDTElementItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isIDTElementOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Implementation Data Type Element\r\n                            <v-btn @click=\"deleteIDTElement\" text x-small color=\"indigo\" v-if=\"isIDTElementOpenClose\">\r\n                                <v-icon>{{ isdeleteIDTElementItem ? 'mdi-minus' : 'mdi-check' }}</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isIDTElementOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectIDTElementItem\" :headers=\"headerIDTElement\" :items=\"IDTElementItem\" \r\n                                    :show-select=\"isdeleteIDTElementItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteIDTElementItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openIDTElement(idx)\" @cancel=\"editIDTElement(idx)\" @save=\"cancelIDTElement\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                                        <v-select v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' @click=\"setTemplateTypeList()\" outlined dense style=\"height: 45px;\">\r\n                                                            <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" @change=\"inputlementationTemplateType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                        <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\"></v-checkbox>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addIDTElement()\" @save=\"cancelIDTElement\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                                        <v-select v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' @click=\"setTemplateTypeList()\" outlined dense style=\"height: 45px;\">\r\n                                                            <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" @change=\"inputlementationTemplateType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-select>\r\n                                                        <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\"></v-checkbox>\r\n                                                        <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <!-- <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"TemplateArg\" style=\"height:1px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showTemplateArgItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isTemplateArgOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Template Argument\r\n                            <v-btn @click=\"deleteTemplateArg\" text x-small color=\"indigo\" v-if=\"isTemplateArgOpenClose\">\r\n                                <v-icon>{{ isdeleteTemplateArgItem ? 'mdi-minus' : 'mdi-check' }}</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isTemplateArgOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectTemplateArgItem\" :headers=\"headerTemplateArg\" :items=\"TemplateArgItem\" \r\n                                    :show-select=\"isdeleteTemplateArgItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteTemplateArgItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openTemplateArg(idx)\" @cancel=\"editTemplateArg(idx)\" @save=\"cancelTemplateArg\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editTemplateArgItem.templatetype\" label=\"Template Type\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addTemplateArg()\" @save=\"cancelTemplateArg\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editTemplateArgItem.templatetype\" label=\"Template Type\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card> -->\r\n\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"implementationName\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" \r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    props: ['element'],\r\n    computed: {\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            uuid: this.element.uuid,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: true, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            implementationName: this.element.name,\r\n            implementationCatrgory: this.element.category,\r\n            implementationNameSpace: this.element.namespace,\r\n            implementationArraySize: this.element.arraysize,\r\n            implementationTypeEmitter: this.element.typeemitter,\r\n            implementationTypeRef: this.element.typeref,\r\n            implementationTemplateType: this.element.templatetype,\r\n            implementationDesc: this.element.desc,\r\n            isDDRCOpenClose: true,\r\n            isdeleteDDRCItem: false,\r\n            headerDDRC: [\r\n                { text: 'Compu Method', align: 'start', sortable: false, value: 'compumethod' },\r\n                { text: 'Data Constr', sortable: false, value: 'dataconstr' },\r\n            ],\r\n            DDRCItem: [],\r\n            selectDelectDDRCItem: [],\r\n            defaultDDRCItem: { compumethod: '', dataconstr: '' },\r\n            editDDRCItem: { compumethod: '', dataconstr: '' },\r\n            selCompuMethod: this.$store.getters.getCompuMethod,\r\n            selDataConstr: this.$store.getters.getDataConstr,\r\n            selTemplateType: this.$store.getters.getImplementationDataType,\r\n\r\n            isIDTElementOpenClose: true,\r\n            isdeleteIDTElementItem: false,\r\n            headerIDTElement: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type Reference​', sortable: false, value: 'typeref' },\r\n                { text: 'Inplace', sortable: false, value: 'inplace' },\r\n                { text: 'Desc', sortable: false, value: 'desc' }\r\n            ],\r\n            IDTElementItem: [],\r\n            selectDelectIDTElementItem: [],\r\n            defaultIDTElementItem: { name: '', typeref: '', inplace: false, typdesceref: '' },\r\n            editIDTElementItem: { name: '', typeref: '', inplace: false, desc: '' },\r\n\r\n            isTemplateArgOpenClose: true,\r\n            isdeleteTemplateArgItem: false,\r\n            headerTemplateArg: [\r\n                { text: 'Template Type', align: 'start', sortable: false, value: 'templatetype' },\r\n            ],\r\n            TemplateArgItem: [],\r\n            selectDelectTemplateArgItem: [],\r\n            defaultTemplateArgItem: { templatetype: '' },\r\n            editTemplateArgItem: { templatetype: '' },\r\n        }\r\n    },\r\n    mounted () {\r\n        this.$nextTick(() => {\r\n            this.DDRCItem = this.element.ddrc.slice()\r\n            this.IDTElementItem = this.element.idtelement.slice()\r\n            this.TemplateArgItem = this.element.templatearg.slice()\r\n        })\r\n    },\r\n    methods: {\r\n        showImplementationData () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        showDDRCItem () {\r\n            this.isDDRCOpenClose = this.isDDRCOpenClose ? false : true\r\n        },\r\n        showIDTElementItem () {\r\n            this.isIDTElementOpenClose = this.isIDTElementOpenClose ? false : true\r\n        },\r\n        showTemplateArgItem () {\r\n            this.isTemplateArgOpenClose = this.isTemplateArgOpenClose ? false : true\r\n        },\r\n        inputImplementationName () {\r\n            this.$store.commit('editImplementation', {compo:\"Name\", uuid:this.uuid, name:this.implementationName} )\r\n        },\r\n        inputImplementationCategory () {\r\n            this.$store.commit('editImplementation', {compo:\"Category\", uuid:this.uuid, category:this.implementationCatrgory} )\r\n        },\r\n        inputlementationNameSpace () {\r\n            this.$store.commit('editImplementation', {compo:\"Name Space\", uuid:this.uuid, namespace:this.implementationNameSpace} )\r\n        },\r\n        inputlementationArraySize () {\r\n            this.$store.commit('editImplementation', {compo:\"Array Size\", uuid:this.uuid, arraysize:this.implementationArraySize} )\r\n        },\r\n        inputlementationTypeEmitter () {\r\n            this.$store.commit('editImplementation', {compo:\"Type Emitter\", uuid:this.uuid, typeemitter:this.implementationTypeEmitter} )\r\n        },\r\n        inputlementationTypeRef () {\r\n            this.$store.commit('editImplementation', {compo:\"Type Ref\", uuid:this.uuid, typeref:this.implementationTypeRef} )\r\n        },\r\n        inputlementationTemplateType () {\r\n            this.$store.commit('editImplementation', {compo:\"Template Type\", uuid:this.uuid, templatetype:this.implementationTemplateType} )\r\n        },\r\n        inputlementationDesc () {\r\n            this.$store.commit('editImplementation', {compo:\"Desc\", uuid:this.uuid, desc:this.implementationDesc} )\r\n        },\r\n        inputDDRC () {\r\n            this.$store.commit('editImplementation', {compo:\"DDRC\", uuid:this.uuid, ddrc:this.DDRCItem} )\r\n        },\r\n        inputIDTElement () {\r\n            this.$store.commit('editImplementation', {compo:\"IDT Element\", uuid:this.uuid, idtelement:this.IDTElementItem} )\r\n        },\r\n        inputTemplateArg () {\r\n            this.$store.commit('editImplementation', {compo:\"Template Arg\", uuid:this.uuid, templatearg:this.TemplateArgItem} )\r\n        },\r\n        deleteDDRC () {\r\n            if (this.isdeleteDDRCItem == true) {\r\n                this.DDRCItem = this.DDRCItem.filter(item => {\r\n                         return this.selectDelectDDRCItem.indexOf(item) < 0 })\r\n                this.isdeleteDDRCItem = false\r\n                this.selectDelectDDRCItem = []\r\n                this.inputDDRC()\r\n            } else {\r\n                this.isdeleteDDRCItem = true\r\n            }\r\n        },\r\n        openDDRC (idx) {\r\n            this.editDDRCItem.compumethod = this.DDRCItem[idx].compumethod\r\n            this.editDDRCItem.dataconstr = this.DDRCItem[idx].dataconstr\r\n        },\r\n        addDDRC () {\r\n            const addObj = Object.assign({}, this.editDDRCItem);\r\n            this.DDRCItem.push(addObj);\r\n            this.cancelDDRC()\r\n            this.inputDDRC()\r\n        },\r\n        editDDRC (idx) {\r\n            this.DDRCItem[idx].compumethod = this.editDDRCItem.compumethod\r\n            this.DDRCItem[idx].dataconstr = this.editDDRCItem.dataconstr\r\n            this.cancelDDRC()\r\n        },\r\n        cancelDDRC () {\r\n            this.editDDRCItem = Object.assign({}, this.defaultDDRCItem)\r\n        },\r\n        setCompuMethodList() {\r\n            this.selCompuMethod = this.$store.getters.getCompuMethod\r\n        },\r\n        setDataConstrList() {\r\n            this.selDataConstr =  this.$store.getters.getDataConstr\r\n        },\r\n        newCompuMethod() {\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid: this.uuid, zindex: 1} )\r\n            this.$store.commit('addElementCompuMehtod', {\r\n                    name: constant.CompuMethod_str + '_' +this.$store.state.LSOPProject[this.$store.state.openProjectIndex].DataTypes.CompuMethod.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, category:null, scales:null\r\n                })\r\n            EventBus.$emit('add-element', constant.CompuMethod_str)\r\n        },\r\n        newDataConstr() {\r\n            this.$store.commit('addElementDataConstr', {\r\n                    name: constant.DataConstr_str + '_' +this.$store.state.LSOPProject[this.$store.state.openProjectIndex].DataTypes.DataConstr.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, lowerlimit:null, upperlimit:null //internalConstr: null\r\n                })\r\n            EventBus.$emit('add-element', constant.DataConstr_str)\r\n        },\r\n\r\n        deleteIDTElement () {\r\n            if (this.isdeleteIDTElementItem == true) {\r\n                this.IDTElementItem = this.IDTElementItem.filter(item => {\r\n                         return this.selectDelectIDTElementItem.indexOf(item) < 0 })\r\n                this.isdeleteIDTElementItem = false\r\n                this.selectDelectIDTElementItem = []\r\n                this.inputIDTElement()\r\n            } else {\r\n                this.isdeleteIDTElementItem = true\r\n            }\r\n        },\r\n        openIDTElement (idx) {\r\n            this.editIDTElementItem.name = this.IDTElementItem[idx].name\r\n            this.editIDTElementItem.typeref = this.IDTElementItem[idx].typeref\r\n            this.editIDTElementItem.inplace = this.IDTElementItem[idx].inplace\r\n            this.editIDTElementItem.desc = this.IDTElementItem[idx].desc\r\n        },\r\n        addIDTElement () {\r\n            const addObj = Object.assign({}, this.editIDTElementItem);\r\n            this.IDTElementItem.push(addObj);\r\n            this.cancelIDTElement()\r\n            this.inputIDTElement()\r\n        },\r\n        editIDTElement (idx) {\r\n            this.IDTElementItem[idx].name = this.editIDTElementItem.name\r\n            this.IDTElementItem[idx].typeref = this.editIDTElementItem.typeref\r\n            this.IDTElementItem[idx].inplace = this.editIDTElementItem.inplace\r\n            this.IDTElementItem[idx].desc = this.editIDTElementItem.desc\r\n            this.cancelIDTElement()\r\n        },\r\n        cancelIDTElement () {\r\n            this.editIDTElementItem = Object.assign({}, this.defaultIDTElementItem)\r\n        },\r\n\r\n        setTemplateTypeList() {\r\n            this.selTemplateType = this.$store.getters.getImplementationDataType\r\n        },\r\n        newTemplateType() {\r\n            this.$store.commit('addElementImplementation', {\r\n                    name: constant.Implementation_str + '_' +this.$store.state.LSOPProject[this.$store.state.openProjectIndex].DataTypes.ImplementationDataType.length, \r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, category:null, namespace:null, \r\n                    arraysize:null, typeemitter:null, typeref:null, desc:null, ddrc:null, idtelement:null, templatearg:null\r\n                })\r\n            EventBus.$emit('add-element', constant.Implementation_str)\r\n        },\r\n        deleteTemplateArg () {\r\n            if (this.isdeleteTemplateArgItem == true) {\r\n                this.TemplateArgItem = this.TemplateArgItem.filter(item => {\r\n                         return this.selectDelectTemplateArgItem.indexOf(item) < 0 })\r\n                this.isdeleteTemplateArgItem = false\r\n                this.selectDelectTemplateArgItem = []\r\n            } else {\r\n                this.isdeleteTemplateArgItem = true\r\n            }\r\n        },\r\n        openTemplateArg (idx) {\r\n            this.editTemplateArgItem.templatetype = this.TemplateArgItem[idx].templatetype\r\n        },\r\n        addTemplateArg () {\r\n            const addObj = Object.assign({}, this.editTemplateArgItem);\r\n            this.TemplateArgItem.push(addObj);\r\n            this.cancelTemplateArg()\r\n            this.inputTemplateArg()\r\n        },\r\n        editTemplateArg (idx) {\r\n            this.TemplateArgItem[idx].templatetype = this.editTemplateArgItem.templatetype\r\n            this.cancelTemplateArg()\r\n        },\r\n        cancelTemplateArg () {\r\n            this.editTemplateArgItem = Object.assign({}, this.defaultTemplateArgItem)\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.toolbar-change{\r\n    color : \r\n}\r\n</style>"]}]}