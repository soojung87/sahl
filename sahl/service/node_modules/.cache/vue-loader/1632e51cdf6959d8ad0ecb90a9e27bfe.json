{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\mainview.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\service\\src\\components\\mainview.vue","mtime":1628226233462},{"path":"D:\\source\\service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQojbWFpbi12aWV3IHsNCiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICAgIGhlaWdodDogODgxcHg7IC8qIOydtOqyjCDsu6Tsp4DrqbQg6rCA7J6lIOyYpOuluOyqvSBzY3JvbGzsnbQg7IOd6ri064ukLiAqLw0KICAgIG92ZXJmbG93OiBzY3JvbGw7DQp9DQoNCi5iYXNpYy1mb3JtIHsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcG9zaXRpb246IGFic29sdXRlOyAvKiDsnbTqsowg7JeG7Jy866m0IGNvbXBvbmVudOuTpOydtCAgeCDsooztkZzsl5Ag6rCZ7J20IOyeiOyniCDrqrvtlaggIGjrp4ztgbwg65ao7Ja07KC47IScIOuwsOy5mOuQqCovDQp9DQoudmlydHVhbC1kaWFncmFtew0KICAgIG9wYWNpdHk6IDAuNzsNCn0NCg0KI21haW4tdmlldzo6LXdlYmtpdC1zY3JvbGxiYXIgew0KICB3aWR0aDogNnB4Ow0KICBoZWlnaHQ6IDZweDsNCn0NCiNtYWluLXZpZXc6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7DQp9DQojbWFpbi12aWV3Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7DQogIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTsNCn0NCiNtYWluLXZpZXc6Oi13ZWJraXQtc2Nyb2xsYmFyLWJ1dHRvbiB7DQogIHdpZHRoOiAwOw0KICBoZWlnaHQ6IDA7DQp9DQoNCmRpdiAvKiDthY3siqTtirjrpbwg66eI7Jqw7Iqk66GcIOuTnOuemOq3uO2VmOuKlCDqsoPsnYQg67Cp7KeA7ZWY64qUIENTUyAqLw0Kew0KICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7ICAvKuydteyKpO2UjOuhnOufrCAqLw0KICAtbW96LXVzZXItc2VsZWN0OiBub25lOyAvKu2MjOydtOyWtO2PreyKpCAqLw0KICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7IC8qKi8NCiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyrtgazroawsIOyCrO2MjOumrCAqLw0KICB1c2VyLXNlbGVjdDogbm9uZTsNCn0NCg0K"},{"version":3,"sources":["mainview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mainview.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"main-view\">\r\n        <v-app > <!-- 여기 안에서만 움직여야 하기 때문에 v-app는 넣어줘야한다.-->\r\n            <vue-draggable-resizable\r\n                class-name-active=\"my-active-class\"\r\n                class-name=\"basic-form\"\r\n                x=700 y=50 w=500 h=500 z=1\r\n                :resizable=\"true\"\r\n                @activated=\"onActivated()\" @deactivated=\"onDeactivated()\"\r\n                @dragging=\"(left, top) => dragging(element.id, left, top)\"\r\n                @dragstop=\"(left, top) => dragstop(element.id, left, top)\" >\r\n                <ServiceInterface :initialFormat=\"false\"/>\r\n            </vue-draggable-resizable>\r\n\r\n            <vue-draggable-resizable v-if=\"newServiceInterface\"\r\n                class-name-active=\"my-active-class\"\r\n                class-name=\"basic-form\"\r\n                x=500 y=100 w=500 h=500 z=1\r\n                :resizable=\"true\"\r\n                @activated=\"onActivated()\" @deactivated=\"onDeactivated()\"\r\n                @dragging=\"(left, top) => dragging(element.id, left, top)\"\r\n                @dragstop=\"(left, top) => dragstop(element.id, left, top)\" >\r\n                <ServiceInterface :initialFormat=\"true\"/>\r\n            </vue-draggable-resizable>\r\n        </v-app>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ServiceInterface from './serviceInterface.vue';\r\nimport { EventBus } from '../main'\r\n//import LeaderLine from 'leader-line-vue'\r\n\r\n\r\nexport default{\r\n    components:{ServiceInterface },\r\n    data () {\r\n        return {\r\n            draggingId: null,\r\n            prevOffsetX: 0,\r\n            prevOffsetY: 0,\r\n            isMouseDown: false,\r\n            el: null,\r\n            cursorPos: [0, 0],\r\n            isMouseDiagram: false, // mouse가 diagram위에 있으면 화면이 움직이면 안되니 설정\r\n            newServiceInterface: false,\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('new-element', (element, addnew) => { // add new element\r\n            if (element == 'ServiceInterface') {\r\n                this.newServiceInterface = addnew\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        onMouseDown (ev) {\r\n            if (this.isMouseDiagram) {\r\n                return\r\n            }\r\n            \r\n            this.cursorPos = [ev.pageX, ev.pageY];\r\n            this.isMouseDown = true;\r\n        },\r\n        onMouseUp () {\r\n            this.isMouseDown = false;\r\n        },\r\n        onMouseMove (ev) {\r\n            if(!this.isMouseDown) return\r\n\r\n            ev.preventDefault();\r\n\r\n            requestAnimationFrame(() => {\r\n                const delta = [\r\n                ev.pageX - this.cursorPos[0],\r\n                ev.pageY - this.cursorPos[1],\r\n                ];\r\n\r\n            this.cursorPos = [ev.pageX, ev.pageY];\r\n            this.moveline()\r\n            if (!this.$refs.el) return;\r\n                this.$refs.el.scrollBy({\r\n                    left: -delta[0],\r\n                    top: -delta[1],\r\n                });\r\n            });\r\n       },\r\n        dragging(id, left, top) {\r\n            this.draggingId = id;\r\n            this.moveline()\r\n\r\n            if (! this.sync) return;\r\n\r\n            const offsetX = left - this.draggingElement.x;\r\n            const offsetY = top - this.draggingElement.y;\r\n\r\n            const deltaX = this.deltaX(offsetX);\r\n            const deltaY = this.deltaY(offsetY);\r\n            this.elements.map(el => { //배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환\r\n                if (el.id !== id) {\r\n                    el.x += deltaX;\r\n                    el.y += deltaY;\r\n                }\r\n                return el;\r\n            });\r\n            \r\n        },\r\n        dragstop(id, left, top) {\r\n            this.elements.map(el => {\r\n                if (el.id === id) {\r\n                    el.x = left;\r\n                    el.y = top;\r\n                }\r\n                return el;\r\n            });\r\n            \r\n            this.draggingId = null;\r\n            this.prevOffsetX = 0;\r\n            this.prevOffsetY = 0;\r\n        },\r\n        deltaX(offsetX) {\r\n            const ret = offsetX - this.prevOffsetX;\r\n\r\n            this.prevOffsetX = offsetX;\r\n\r\n            return ret;\r\n        },\r\n        deltaY(offsetY) {\r\n            const ret = offsetY - this.prevOffsetY;\r\n\r\n            this.prevOffsetY = offsetY;\r\n\r\n            return ret;\r\n        },\r\n        onActivated () {\r\n            //alert('onActivated' + id)\r\n            this.isMouseDiagram = true\r\n        },\r\n        onDeactivated () {\r\n            //alert('onDeactivated' + id)\r\n\r\n             this.isMouseDiagram = false\r\n        },\r\n    },\r\n    computed: {\r\n        draggingElement: function () {\r\n            if (! this.draggingId) return;\r\n\r\n            return this.elements.find(el => el.id === this.draggingId);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n#main-view {\r\n    white-space: nowrap;\r\n    height: 881px; /* 이게 커지면 가장 오른쪽 scroll이 생긴다. */\r\n    overflow: scroll;\r\n}\r\n\r\n.basic-form {\r\n    cursor: pointer;\r\n    position: absolute; /* 이게 없으면 component들이  x 좌표에 같이 있질 못함  h만큼 떨어져서 배치됨*/\r\n}\r\n.virtual-diagram{\r\n    opacity: 0.7;\r\n}\r\n\r\n#main-view::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\n#main-view::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n#main-view::-webkit-scrollbar-thumb {\r\n  border-radius: 3px;\r\n  background-color: gray;\r\n}\r\n#main-view::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\ndiv /* 텍스트를 마우스로 드래그하는 것을 방지하는 CSS */\r\n{\r\n  -ms-user-select: none;  /*익스플로러 */\r\n  -moz-user-select: none; /*파이어폭스 */\r\n  -khtml-user-select: none; /**/\r\n  -webkit-user-select: none; /*크롬, 사파리 */\r\n  user-select: none;\r\n}\r\n\r\n</style>"]}]}