{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\serviceInterface.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\serviceInterface.vue","mtime":1653614590331},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["serviceInterface.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+bfile":"serviceInterface.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                    <v-btn icon @click=\"showServiceInterface\">\r\n                        <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                    </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>Service Interface</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Service Interface</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-show=\"iselementOpenClose\"> <!-- edit -->\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputServiceInfName' outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"element.namespace\" label=\"Name Spaces\" placeholder=\"String/String/...\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-row>\r\n                        <v-col col=\"6\">\r\n                            <v-text-field v-model=\"element.majversion\" label=\"Major Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col col=\"6\">\r\n                            <v-text-field v-model=\"element.minversion\" label=\"Minor Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-checkbox v-model=\"element.isservice\" label=\"Is Service\" style=\"height: 33px;\"></v-checkbox>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/Eventtable'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showEventItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isEventsOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Event\r\n                            <v-btn @click=\"isEventCheckbox\" text x-small color=\"indigo\" v-if=\"isEventsOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn v-if=\"isEventsOpenClose && isdeleteEventItem\" @click=\"deleteEventItem\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-show=\"isEventsOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectEventItem\" :headers=\"headerEvents\" :items=\"element.events\" :items-per-page='20'\r\n                                    :show-select=\"isdeleteEventItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :ripple=\"false\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteEventItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openEventItem(idx)\" @cancel=\"editEventItem(idx)\" @save=\"cancelEventItem\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editEventsItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editEventsItem.type' label='Date Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingEventDataType\"  @click=\"setEventDataTypeSelect()\" @blur=\"isEditingEventDataType=true\"\r\n                                                                   @click:clear='clearEventDataType' clearable>\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addEventItem()\" @save=\"cancelEventItem\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editEventsItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editEventsItem.type' label='Date Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingEventDataType\"  @click=\"setEventDataTypeSelect()\" @blur=\"isEditingEventDataType=true\"\r\n                                                                   @click:clear='clearEventDataType' clearable>\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/Fieldtable'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showFieldItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isFieldOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Field\r\n                            <v-btn @click=\"isFieldCheckbox\" text x-small color=\"indigo\" v-if=\"isFieldOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn v-if=\"isFieldOpenClose && isdeleteFieldItem\" @click=\"deleteFieldItem\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-show=\"isFieldOpenClose\">                            \r\n                            <v-data-table v-model=\"selectDelectFieldItem\" :headers=\"headerField\" :items=\"element.fields\" :items-per-page='20'\r\n                                        :show-select=\"isdeleteFieldItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer>\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :ripple=\"false\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteFieldItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openFieldItem(idx)\" @cancel=\"editFieldItem(idx)\" @save=\"cancelFieldItem\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editFieldsItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editFieldsItem.type' label='Date Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingFieldDataType\"  @click=\"setFieldDataTypeSelect()\" @blur=\"isEditingFieldDataType=true\"\r\n                                                                   @click:clear='clearFieldDataType' clearable>\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-row>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.getter\" label=\"getter\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.setter\" label=\"setter\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.notifier\" label=\"notifier\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                        </v-row>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"5\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addFieldItem()\" @save=\"cancelFieldItem\"> <!--lager 빼면 cancel save없어진다 근데 없으면 select하고나서 엔터 안치면 값이 안바뀜 -->\r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editFieldsItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-autocomplete v-model='editFieldsItem.type' label='Date Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                   return-object :readonly=\"!isEditingFieldDataType\"  @click=\"setFieldDataTypeSelect()\" @blur=\"isEditingFieldDataType=true\"\r\n                                                                   @click:clear='clearFieldDataType' clearable>\r\n                                                             <template v-slot:append-item>\r\n                                                                <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\">\r\n                                                                    <v-icon >mdi-plus</v-icon>New Item\r\n                                                                </v-btn>\r\n                                                            </template>\r\n                                                        </v-autocomplete>\r\n                                                        <v-row>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.getter\" label=\"getter\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.setter\" label=\"setter\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                            <v-col cols=\"4\">\r\n                                                                <v-checkbox v-model=\"editFieldsItem.notifier\" label=\"notifier\" @click=\"setactiveUUID\"></v-checkbox>\r\n                                                            </v-col>\r\n                                                        </v-row>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                               \r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/methods'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showMethodItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isMethodsOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Method\r\n                            <v-btn v-if=\"isMethodsOpenClose\" @click=\"addMethod\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-tabs v-model='methodTab' v-show=\"isMethodsOpenClose\" show-arrows @change=\"changeMethodTab()\">\r\n                            <v-tab v-for=\"(tab, idx) in element.methods\" :key=\"idx\" @click=\"clickMethodtab()\"> \r\n                                {{tab.name}}\r\n                                <v-btn text x-small @click=\"deleteMethod(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                        </v-tabs>\r\n                        <v-tabs-items v-model=\"methodTab\" v-show=\"isMethodsOpenClose\">\r\n                            <v-tab-item v-for=\"(tab, idx) in element.methods\" :key=\"idx\">\r\n                                <v-card flat>\r\n                                    <v-card-text>\r\n                                        <v-text-field v-model=\"tab.name\" :rules=\"rules.name\" label=\"Name\" @input=\"inputMethodName(tab.name)\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        <v-checkbox v-model=\"tab.fireforget\" label='Fire & Forget'></v-checkbox>\r\n                                        <v-card outlined class=\"mx-auto\">\r\n                                            <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/argtable'+tab.name\">\r\n                                                <v-hover v-slot=\"{ hover }\">\r\n                                                    <v-btn text @click=\"showArgument\" x-small color=\"indigo\">\r\n                                                        <v-icon>{{ isArgumentOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                    </v-btn>\r\n                                                </v-hover>\r\n                                                Argument Data Prototype\r\n                                                <v-btn v-if=\"isArgumentOpenClose\" @click=\"isCheckArg\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-check</v-icon>\r\n                                                </v-btn>\r\n                                                <v-btn  v-if=\"isdeleteArg && isArgumentOpenClose\" @click=\"deleteArg\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-minus</v-icon>\r\n                                                </v-btn>\r\n                                            </div>\r\n                                            <v-card-text v-show=\"isArgumentOpenClose\">\r\n                                                <v-data-table v-model=\"selDeleteArgItem\" :headers=\"headerArg\" :items=\"tab.argument\" :items-per-page='20'\r\n                                                        :show-select=\"isdeleteArg\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                    </template>\r\n                                                    <template v-if=\"!isdeleteArg\" v-slot:body=\"{ items, headers }\">\r\n                                                        <tbody>\r\n                                                            <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                                                <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                    <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openArg(idx)\" @cancel=\"editArg(idx)\" @save=\"cancelArg\" large >\r\n                                                                        {{item[header.value]}}\r\n                                                                        <template v-slot:input>\r\n                                                                            <br> \r\n                                                                            <v-text-field v-model=\"editArgItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                            <v-autocomplete v-model='editArgItem.type' label='Data Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                return-object :readonly=\"!isEditingArgType\" clearable @click:clear='clearArgType()' \r\n                                                                                @click=\"setArgTypeSelect()\" @blur=\"isEditingArgType=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete>\r\n                                                                            <v-select v-model=\"editArgItem.dir\" clearable :items=\"argDirection\" label=\"Direction\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                            <v-text-field v-model=\"editArgItem.descrip\" label=\"Description\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th colspan=\"3\">\r\n                                                                    <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addArg()\" @save=\"cancelArg\"> \r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                        <template v-slot:input>\r\n                                                                            <br>\r\n                                                                            <v-text-field v-model=\"editArgItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                            <v-autocomplete v-model='editArgItem.type' label='Data Type' :items='seltype' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                return-object :readonly=\"!isEditingArgType\" clearable @click:clear='clearArgType(tab)' \r\n                                                                                @click=\"setArgTypeSelect(tab)\" @blur=\"isEditingArgType=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataType\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete>\r\n                                                                            <v-select v-model=\"editArgItem.dir\" clearable :items=\"argDirection\" label=\"Direction\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                            <v-text-field v-model=\"editArgItem.descrip\" label=\"Description\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </template>\r\n                                                </v-data-table>\r\n                                            </v-card-text>\r\n                                        </v-card>\r\n                                        <v-card outlined class=\"mx-auto\">\r\n                                            <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/methoderrors'+tab.name\">\r\n                                                <v-hover v-slot=\"{ hover }\">\r\n                                                    <v-btn text @click=\"showErrorSet\" x-small color=\"indigo\">\r\n                                                        <v-icon>{{ isErrorSetOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                    </v-btn>\r\n                                                </v-hover>\r\n                                                Possible Error Sets\r\n                                                <v-btn v-if=\"isErrorSetOpenClose\" @click=\"isCheckErrorSet\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-check</v-icon>\r\n                                                </v-btn>\r\n                                                <v-btn  v-if=\"isdeleteErrorSet && isErrorSetOpenClose\" @click=\"deleteErrorSet\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-minus</v-icon>\r\n                                                </v-btn>\r\n                                            </div>\r\n                                            <v-card-text v-show=\"isErrorSetOpenClose\">\r\n                                                <v-data-table v-model=\"selDeleteErrorSet\" :headers=\"headerErrorSet\" :items=\"tab.errorSet\" :items-per-page='20'\r\n                                                        :show-select=\"isdeleteErrorSet\" item-key=\"error\" height=\"100px\" dense hide-default-footer >\r\n                                                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                    </template>\r\n                                                    <template v-if=\"!isdeleteErrorSet\" v-slot:body=\"{ items, headers }\">\r\n                                                        <tbody>\r\n                                                            <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                                                <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                    <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openErrorSet(idx)\" @cancel=\"editErrorSet(idx)\" @save=\"cancelErrorSet\" large >\r\n                                                                        {{item[header.value]}}\r\n                                                                        <template v-slot:input>\r\n                                                                            <br> \r\n                                                                            <v-autocomplete v-model='editErrorSetItem.error' label='Error Reference' :items='selErrorSet' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                return-object :readonly=\"!isEditingErrorSet\" clearable @click:clear='clearErrorSet()' \r\n                                                                                @click=\"setErrorSetSelect()\" @blur=\"isEditingErrorSet=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newErrorSet\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th colspan=\"3\">\r\n                                                                    <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addErrorSet()\" @save=\"cancelErrorSet\"> \r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                        <template v-slot:input>\r\n                                                                            <br>\r\n                                                                            <v-autocomplete v-model='editErrorSetItem.error' label='Error Reference' :items='selErrorSet' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                return-object :readonly=\"!isEditingErrorSet\" clearable @click:clear='clearErrorSet()' \r\n                                                                                @click=\"setErrorSetSelect()\" @blur=\"isEditingErrorSet=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newErrorSet\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete> \r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </template>\r\n                                                </v-data-table>\r\n                                            </v-card-text>\r\n                                        </v-card>\r\n                                        <v-card outlined class=\"mx-auto\">\r\n                                            <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/methoderror'+tab.name\">\r\n                                                <v-hover v-slot=\"{ hover }\">\r\n                                                    <v-btn text @click=\"showError\" x-small color=\"indigo\">\r\n                                                        <v-icon>{{ isErrorOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                    </v-btn>\r\n                                                </v-hover>\r\n                                                Possible Errors\r\n                                                <v-btn v-if=\"isErrorOpenClose\" @click=\"isCheckError\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-check</v-icon>\r\n                                                </v-btn>\r\n                                                <v-btn  v-if=\"isdeleteError && isErrorOpenClose\" @click=\"deleteError\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-minus</v-icon>\r\n                                                </v-btn>\r\n                                            </div>\r\n                                            <v-card-text v-show=\"isErrorOpenClose\">\r\n                                                <v-data-table v-model=\"selDeleteError\" :headers=\"headerError\" :items=\"tab.error\" :items-per-page='20'\r\n                                                        :show-select=\"isdeleteError\" item-key=\"error\" height=\"100px\" dense hide-default-footer >\r\n                                                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                    </template>\r\n                                                    <template v-if=\"!isdeleteError\" v-slot:body=\"{ items, headers }\">\r\n                                                        <tbody>\r\n                                                            <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                                                <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                    <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openError(idx)\" @cancel=\"editError(idx)\" @save=\"cancelError\" large >\r\n                                                                        {{item[header.value]}}\r\n                                                                        <template v-slot:input>\r\n                                                                            <br>\r\n                                                                            <v-autocomplete v-model='editErrorItem.error' label='Error Reference' :items='selError' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                        return-object :readonly=\"!isEditingError\" clearable @click=\"setErrorSelect()\" \r\n                                                                                        @click:clear='clearErrorRef' @blur=\"isEditingError=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newError\">\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th colspan=\"3\">\r\n                                                                    <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addError()\" @save=\"cancelError\"> \r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                        <template v-slot:input>\r\n                                                                            <br>\r\n                                                                            <v-autocomplete v-model='editErrorItem.error' label='Error Reference' :items='selError' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                                        return-object :readonly=\"!isEditingError\" clearable @click=\"setErrorSelect()\" \r\n                                                                                        @click:clear='clearErrorRef' @blur=\"isEditingError=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                <template v-slot:append-item>\r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newError\">\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                </template>\r\n                                                                            </v-autocomplete>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </template>\r\n                                                </v-data-table>\r\n                                            </v-card-text>\r\n                                        </v-card>\r\n                                        <br>\r\n                                        <v-text-field v-model=\"tab.descrip\" label=\"Description\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                            </v-tab-item>\r\n                        </v-tabs-items>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-show=\"!iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                            outlined dense readonly></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        SAHLProject() {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex() {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isEventsOpenClose: true,\r\n            isFieldOpenClose: true,\r\n            isMethodsOpenClose: true,\r\n            isEditingEventDataType: true,\r\n            isEditingFieldDataType: true,\r\n            headerEvents: [\r\n                { text: '', sortable: false, value: 'sort' },\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Data Type', sortable: false, value: 'type' },\r\n            ],\r\n            defaultEventsItem: { name: '', type: null },\r\n            editEventsItem: {name: '', type: null },\r\n            isdeleteEventItem: false,\r\n            headerField: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type', sortable: false, value: 'type' },\r\n                { text: 'Getter', sortable: false, value: 'getter' },\r\n                { text: 'Setter', sortable: false, value: 'setter' },\r\n                { text: 'Notifier', sortable: false, value: 'notifier' },\r\n            ],\r\n            defaultFieldsItem: { name: '', type: null, getter: null, setter: null, notifier: null },\r\n            editFieldsItem: { name: '', type: null, getter: null, setter: null, notifier: null },\r\n            isdeleteFieldItem: false,\r\n            selectDelectEventItem: [],\r\n            selectDelectFieldItem: [],\r\n            enumTrueFalse: [ 'true', 'false'],\r\n            seltype: this.$store.getters.getImplementationDataType,\r\n            changeLineEvent : [],\r\n            changeLineField : [],\r\n\r\n            methodTab: 0,\r\n            isArgumentOpenClose: true,\r\n            isErrorSetOpenClose: true,\r\n            isErrorOpenClose: true,\r\n            isdeleteArg: false,\r\n            isdeleteErrorSet: false,\r\n            isdeleteError: false,\r\n            selDeleteArgItem: [],\r\n            selDeleteErrorSet:[],\r\n            selDeleteError: [],\r\n            headerArg: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Data Type', sortable: false, value: 'type' },\r\n                { text: 'Direction', sortable: false, value: 'dir' },\r\n                { text: 'Description', sortable: false, value: 'descrip' },\r\n            ],\r\n            headerErrorSet: [\r\n                { text: 'Possible AP Error Set Ref', align: 'start', sortable: false, value: 'error' },\r\n            ],\r\n            headerError: [\r\n                { text: 'Possible AP Error Ref', align: 'start', sortable: false, value: 'error' },\r\n            ],\r\n            argDirection: ['IN', 'OUT', 'INOUT'],\r\n            editArgItem: { name: '', type: null, dir: null, descrip: ''},\r\n            defaultArg: { name: '', type: null, dir: null, descrip: ''},\r\n            editErrorSetItem: { error: null},\r\n            editErrorItem: { error: null},\r\n            isEditingArgType: true,\r\n            isEditingErrorSet: true,\r\n            isEditingError: true,\r\n            selErrorSet : this.$store.getters.getErrorSet,\r\n            selError : this.$store.getters.getError,\r\n            changeLineArg: [],\r\n            changeLineES: [],\r\n            changeLineE: [],\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showServiceInterface() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                if(this.iselementOpenClose) {\r\n                    if(this.element.methods.length > 0 && this.location == 1) {\r\n                        if(this.isMethodsOpenClose) {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.methodTab, this.element.methods[this.methodTab].name)\r\n                        } else {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        showEventItem() {\r\n            this.isEventsOpenClose =  this.isEventsOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showFieldItem() {\r\n            this.isFieldOpenClose = this.isFieldOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showMethodItem() { \r\n            this.isMethodsOpenClose = this.isMethodsOpenClose ? false : true\r\n            if(this.element.methods.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isMethodsOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.methodTab, this.element.methods[this.methodTab].name)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }\r\n        },\r\n        addEventItem() {\r\n            var datacount = this.element.events.length\r\n            if( this.editEventsItem.type != null) {\r\n                this.newLine(this.element.uuid+'/Eventtable-'+datacount, this.element.uuid+'/Eventtable', this.editEventsItem.type.uuid)\r\n                this.editEventsItem.type = this.editEventsItem.type.name\r\n            }\r\n            const addObj = Object.assign({}, this.editEventsItem);\r\n            this.element.events.push(addObj);\r\n            this.cancelEventItem()\r\n        },\r\n        addFieldItem() {\r\n            var datacount = this.element.fields.length\r\n            if( this.editFieldsItem.type != null) {\r\n                this.newLine(this.element.uuid+'/Fieldtable-'+datacount, this.element.uuid+'/Fieldtable', this.editFieldsItem.type.uuid)\r\n                this.editFieldsItem.type = this.editFieldsItem.type.name\r\n            }\r\n            const addObj = Object.assign({}, this.editFieldsItem);\r\n            this.element.fields.push(addObj);\r\n            this.cancelFieldItem()\r\n        },\r\n        cancelEventItem() {\r\n            this.editEventsItem = Object.assign({}, this.defaultEventsItem)\r\n            this.setactiveUUID()\r\n        },\r\n        cancelFieldItem() {\r\n            this.editFieldsItem = Object.assign({}, this.defaultFieldsItem)\r\n            this.setactiveUUID()\r\n        },\r\n        isEventCheckbox() {\r\n            if (this.isdeleteEventItem == true) {\r\n                this.selectDelectEventItem = []\r\n                this.isdeleteEventItem = false\r\n            } else {\r\n                this.isdeleteEventItem = true\r\n            }\r\n        },\r\n        deleteEventItem() {\r\n            if (this.isdeleteEventItem == true) {\r\n                for(let i=0; i<this.element.events.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Eventtable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineEvent.push({name:this.element.events[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/Eventtable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'eventSI', deletItemList: this.selectDelectEventItem, path: this.element.path, name: this.element.name})\r\n                this.element.events = this.element.events.filter(item => {\r\n                         return this.selectDelectEventItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.events.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineEvent.length; idx++) {\r\n                        if (this.element.events[n].name == this.changeLineEvent[idx].name) {\r\n                            this.newLine(this.element.uuid+'/Eventtable-'+n, this.element.uuid+'/Eventtable', this.changeLineEvent[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteEventItem = false\r\n                this.selectDelectEventItem = []\r\n                this.changeLineEvent = []\r\n            } \r\n        },\r\n        isFieldCheckbox() {\r\n            if (this.isdeleteFieldItem == true) {\r\n                this.selectDelectFieldItem = []\r\n                this.isdeleteFieldItem = false\r\n            } else {\r\n                this.isdeleteFieldItem = true\r\n            }\r\n        },\r\n        deleteFieldItem() {\r\n            if (this.isdeleteFieldItem == true) {\r\n                for(let i=0; i<this.element.fields.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Fieldtable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineField.push({name:this.element.fields[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/Fieldtable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'fieldSI', deletItemList: this.selectDelectFieldItem, path: this.element.path, name: this.element.name})\r\n                this.element.fields = this.element.fields.filter(item => {\r\n                         return this.selectDelectFieldItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.fields.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineField.length; idx++) {\r\n                        if (this.element.fields[n].name == this.changeLineField[idx].name) {\r\n                            this.newLine(this.element.uuid+'/Fieldtable-'+n, this.element.uuid+'/Fieldtable', this.changeLineField[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n         \r\n                this.isdeleteFieldItem = false\r\n                this.selectDelectFieldItem = []\r\n                this.changeLineField = []\r\n            } \r\n        },\r\n        openEventItem(idx) {\r\n            this.seltype = this.$store.getters.getImplementationDataType,\r\n            this.editEventsItem.name = this.element.events[idx].name\r\n            if ( this.element.events[idx].type != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Eventtable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.events[idx].type)\r\n                }\r\n                this.editEventsItem.type = { name :this.element.events[idx].type, uuid: endLine }\r\n            }\r\n\r\n        },\r\n        openFieldItem(idx) {\r\n            this.seltype = this.$store.getters.getImplementationDataType,\r\n\r\n            this.editFieldsItem.name = this.element.fields[idx].name\r\n            if ( this.element.fields[idx].type != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Fieldtable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.fields[idx].type)\r\n                }\r\n                this.editFieldsItem.type = { name :this.element.fields[idx].type, uuid: endLine }\r\n            }\r\n            this.editFieldsItem.getter = this.element.fields[idx].getter\r\n            this.editFieldsItem.setter = this.element.fields[idx].setter\r\n            this.editFieldsItem.notifier = this.element.fields[idx].notifier\r\n        },\r\n        editEventItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Eventtable-'+idx)\r\n            if (endLine != undefined && this.editEventsItem.type == null) {\r\n                this.deleteLine(this.element.uuid+'/Eventtable-'+idx)\r\n                this.element.events[idx].type = null\r\n            } else if (endLine != undefined && endLine != this.editEventsItem.type.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/Eventtable-'+idx)\r\n                this.newLine(this.element.uuid+'/Eventtable-'+idx, this.element.uuid+'/Eventtable', this.editEventsItem.type.uuid)\r\n                this.element.events[idx].type = this.editEventsItem.type.name\r\n            } else if (endLine == undefined && this.editEventsItem.type != null) {\r\n                this.newLine(this.element.uuid+'/Eventtable-'+idx, this.element.uuid+'/Eventtable', this.editEventsItem.type.uuid)\r\n                this.element.events[idx].type = this.editEventsItem.type.name\r\n            }\r\n\r\n            if (this.element.events[idx].name != this.editEventsItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'serviceEventD', listname: this.editEventsItem.name} )\r\n            }\r\n            this.element.events[idx].name = this.editEventsItem.name\r\n            this.cancelEventItem()\r\n        },\r\n        editFieldItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/Fieldtable-'+idx)\r\n            if (endLine != undefined && this.editFieldsItem.type == null) {\r\n                this.deleteLine(this.element.uuid+'/Fieldtable-'+idx)\r\n                this.element.fields[idx].type = null\r\n            } else if (endLine != undefined && endLine != this.editFieldsItem.type.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/Fieldtable-'+idx)\r\n                this.newLine(this.element.uuid+'/Fieldtable-'+idx, this.element.uuid+'/Fieldtable', this.editFieldsItem.type.uuid)\r\n                this.element.fields[idx].type = this.editFieldsItem.type.name\r\n            }else if (endLine == undefined && this.editFieldsItem.type != null) {\r\n                this.newLine(this.element.uuid+'/Fieldtable-'+idx, this.element.uuid+'/Fieldtable', this.editFieldsItem.type.uuid)\r\n                this.element.fields[idx].type = this.editFieldsItem.type.name\r\n            }\r\n\r\n            if (this.element.fields[idx].name != this.editFieldsItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'field', listname: this.editFieldsItem.name} )\r\n            }\r\n\r\n            this.element.fields[idx].name = this.editFieldsItem.name\r\n            this.element.fields[idx].getter = this.editFieldsItem.getter\r\n            this.element.fields[idx].setter = this.editFieldsItem.setter\r\n            this.element.fields[idx].notifier = this.editFieldsItem.notifier\r\n            this.cancelFieldItem()\r\n        },\r\n\r\n        setDataTypeList() {\r\n            this.seltype = this.$store.getters.getImplementationDataType\r\n            this.setactiveUUID()\r\n        },\r\n        inputServiceInfName() {\r\n            this.$store.commit('editServiceInterface', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        newDataType() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * (1400 - 11)) + 10)\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n            this.$store.commit('addElementImplementation', {\r\n                    name: this.$store.getters.getNameImplementation, input: false, path: '',\r\n                    top: elementY, left: elementX,  zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', namespace:'', arraysize:'', typeemitter:'', \r\n                    typeref: null, templatetype:null, desc:'', ddpc:[], idtelement:[],\r\n            })\r\n            EventBus.$emit('add-element', constant.Implementation_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editServiceInterface', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setEventDataTypeSelect() {\r\n            //console.log('setEventDataTypeSelect   ' + this.isEditingEventDataType)\r\n            if (this.isEditingEventDataType == true) {\r\n                if (this.editEventsItem.type != null && this.editEventsItem.type.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editEventsItem.type.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setDataTypeList()\r\n                this.isEditingEventDataType = false\r\n            } else {\r\n                this.isEditingEventDataType = true\r\n            }\r\n        },\r\n        clearEventDataType() {\r\n            this.isEditingEventDataType = true\r\n            this.editEventsItem.type = null\r\n        },\r\n        clearFieldDataType() {\r\n            this.isEditingFieldDataType = true\r\n            this.editFieldsItem.type = null\r\n        },\r\n        setFieldDataTypeSelect() {\r\n            //console.log('setFieldDataTypeSelect   ' + this.isEditingFieldDataType)\r\n            if (this.isEditingFieldDataType == true) {\r\n                if (this.editFieldsItem.type != null && this.editFieldsItem.type.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editFieldsItem.type.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setDataTypeList()\r\n                this.isEditingFieldDataType = false\r\n            } else {\r\n                this.isEditingFieldDataType = true\r\n            }\r\n        },\r\n\r\n        showArgument() {\r\n            this.isArgumentOpenClose = this.isArgumentOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showErrorSet() {\r\n            this.isErrorSetOpenClose = this.isErrorSetOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showError() {\r\n            this.isErrorOpenClose = this.isErrorOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n\r\n        addMethod() {\r\n            const editItem = { name: '', fireforget: null, argument: [], errorSet: [], error: [], descrip: ''}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'Method_' + n++;\r\n                res = this.element.methods.some(ele => ele.name === addObj.name)\r\n            }\r\n            this.element.methods.push(addObj)\r\n            this.methodTab = this.element.methods.length-1\r\n            if (this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n            }\r\n        },\r\n        clickMethodtab() {\r\n            this.selDeleteArgItem = []\r\n            this.selDeleteErrorSet = []\r\n            this.selDeleteError = []\r\n            this.isdeleteArg = false\r\n            this.isdeleteErrorSet = false\r\n            this.isdeleteError = false\r\n        },\r\n        changeMethodTab() {\r\n            if(this.element.methods.length > 0 && this.location == 1) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.methodTab, this.element.methods[this.methodTab].name)}, 300);\r\n            }\r\n        },\r\n        deleteMethod(idx) {\r\n            var endLine\r\n            this.$store.commit('deleteRefTable', {deleteName:'methodSI', deleteTab:true, tabName: this.element.methods[idx].name, path: this.element.path, name: this.element.name})\r\n\r\n            for(let i=0; i<this.element.methods[idx].argument.length; i++){\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/argtable-'+i+'-'+idx)\r\n                if(endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/argtable-'+i+'-'+idx)\r\n                }\r\n            }\r\n            for(let i=0; i<this.element.methods[idx].errorSet.length; i++){\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderrors-'+i+'-'+idx)\r\n                if(endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/methoderrors-'+i+'-'+idx)\r\n                }\r\n            }\r\n            for(let i=0; i<this.element.methods[idx].error.length; i++){\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderror-'+i+'-'+idx)\r\n                if(endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/methoderror-'+i+'-'+idx)\r\n                }\r\n            }\r\n\r\n            for(let n=idx+1; n<this.element.methods.length; n++){\r\n                for(let i=0; i<this.element.methods[n].argument.length; i++){\r\n                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/argtable-'+i+'-'+n)\r\n                    if(endLine != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/argtable-'+i+'-'+n)\r\n                        this.newLine(this.element.uuid+'/argtable-'+i+'-'+(n-1), this.element.uuid+'/methods', endLine)\r\n                    }\r\n                }\r\n                for(let i=0; i<this.element.methods[n].errorSet.length; i++){\r\n                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderrors-'+i+'-'+n)\r\n                    if(endLine != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/methoderrors-'+i+'-'+n)\r\n                        this.newLine(this.element.uuid+'/methoderrors-'+i+'-'+(n-1), this.element.uuid+'/methods', endLine)\r\n                    }\r\n                }\r\n                for(let i=0; i<this.element.methods[n].error.length; i++){\r\n                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderror-'+i+'-'+n)\r\n                    if(endLine != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/methoderror-'+i+'-'+n)\r\n                        this.newLine(this.element.uuid+'/methoderror-'+i+'-'+(n-1), this.element.uuid+'/methods', endLine)\r\n                    }\r\n                }\r\n            }\r\n            this.element.methods.splice(idx, 1)\r\n            this.changeMethodTab()\r\n        },\r\n        inputMethodName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                        changeName: 'serviceMethodD', listname: name} )\r\n        },\r\n\r\n        isCheckArg() {\r\n            if (this.isdeleteArg == true) {\r\n                this.isdeleteArg = false\r\n                this.selDeleteArgItem = []\r\n            } else {\r\n                this.isdeleteArg = true\r\n            }\r\n        },\r\n        deleteArg() {\r\n            if (this.isdeleteArg == true) {\r\n                for(let i=0; i<this.element.methods[this.methodTab].argument.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/argtable-'+i+'-'+this.methodTab)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineArg.push({name:this.element.methods[this.methodTab].argument[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/argtable-'+i+'-'+this.methodTab)\r\n                    }\r\n                }\r\n\r\n                this.element.methods[this.methodTab].argument = this.element.methods[this.methodTab].argument.filter(item => {\r\n                         return this.selDeleteArgItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.methods[this.methodTab].argument.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineArg.length; idx++) {\r\n                        if (this.element.methods[this.methodTab].argument[n].name == this.changeLineArg[idx].name) {\r\n                            this.newLine(this.element.uuid+'/argtable-'+n+'-'+this.methodTab, this.element.uuid+'/argtable'+this.element.methods[this.methodTab].name, this.changeLineArg[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteArg = false\r\n                this.selDeleteArgItem = []\r\n                this.changeLineArg = []\r\n            }\r\n        },\r\n        openArg(idx) {\r\n            this.seltype = this.$store.getters.getImplementationDataType,\r\n            this.editArgItem.name = this.element.methods[this.methodTab].argument[idx].name\r\n            if ( this.element.methods[this.methodTab].argument[idx].type != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/argtable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.methods[this.methodTab].argument[idx].type)\r\n                }\r\n                this.editArgItem.type = { name: this.element.methods[this.methodTab].argument[idx].type, uuid: endLine }\r\n            }\r\n            this.editArgItem.dir = this.element.methods[this.methodTab].argument[idx].dir\r\n            this.editArgItem.descrip = this.element.methods[this.methodTab].argument[idx].descrip\r\n        },\r\n        editArg(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/argtable-'+idx+'-'+this.methodTab)\r\n            if (endLine != undefined && this.editArgItem.type == null) {\r\n                this.deleteLine(this.element.uuid+'/argtable-'+idx+'-'+this.methodTab)\r\n                this.element.methods[this.methodTab].argument[idx].type = null\r\n            } else if (endLine != undefined && endLine != this.editArgItem.type.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/argtable-'+idx+'-'+this.methodTab)\r\n                this.newLine(this.element.uuid+'/argtable-'+idx+'-'+this.methodTab, this.element.uuid+'/argtable'+this.element.methods[this.methodTab].name, this.editArgItem.type.uuid)\r\n                this.element.methods[this.methodTab].argument[idx].type = this.editArgItem.type.name\r\n            }else if (endLine == undefined && this.editArgItem.type != null) {\r\n                this.newLine(this.element.uuid+'/argtable-'+idx+'-'+this.methodTab, this.element.uuid+'/argtable'+this.element.methods[this.methodTab].name, this.editArgItem.type.uuid)\r\n                this.element.methods[this.methodTab].argument[idx].type = this.editArgItem.type.name\r\n            }\r\n\r\n            this.element.methods[this.methodTab].argument[idx].name = this.editArgItem.name\r\n            this.element.methods[this.methodTab].argument[idx].dir = this.editArgItem.dir\r\n            this.element.methods[this.methodTab].argument[idx].descrip = this.editArgItem.descrip\r\n            this.cancelArg()\r\n        },\r\n        cancelArg() {\r\n            this.editArgItem = Object.assign({}, this.defaultArg)\r\n            this.setactiveUUID()\r\n        },\r\n        addArg() {\r\n            console.log('1111111111')\r\n            if( this.editArgItem.type != null) {\r\n                var datacount = this.element.methods[this.methodTab].argument.length\r\n                this.newLine(this.element.uuid+'/argtable-'+datacount+'-'+this.methodTab, this.element.uuid+'/argtable'+this.element.methods[this.methodTab].name, this.editArgItem.type.uuid)\r\n                this.editArgItem.type = this.editArgItem.type.name\r\n            }\r\n            const addObj = Object.assign({}, this.editArgItem);\r\n            this.element.methods[this.methodTab].argument.push(addObj);\r\n            this.cancelArg()\r\n        },\r\n        clearArgType() {\r\n            this.isEditingArgType = true\r\n            this.editArgItem.type = null\r\n        },\r\n        setArgTypeSelect() {\r\n            if (this.isEditingArgType == true) { \r\n                if (this.editArgItem.type != null && this.editArgItem.type.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editArgItem.type.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setDataTypeList()\r\n                this.isEditingArgType = false\r\n            } else {\r\n                this.isEditingArgType = true\r\n            }\r\n        },\r\n\r\n        isCheckErrorSet() {\r\n            if (this.isdeleteErrorSet == true) {\r\n                this.isdeleteErrorSet = false\r\n                this.selDeleteErrorSet = []\r\n            } else {\r\n                this.isdeleteErrorSet = true\r\n            }\r\n        },\r\n        deleteErrorSet() {\r\n            if (this.isdeleteErrorSet == true) {\r\n                for(let i=0; i<this.element.methods[this.methodTab].errorSet.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderrors-'+i+'-'+this.methodTab)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineES.push({name:this.element.methods[this.methodTab].errorSet[i].error, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/methoderrors-'+i+'-'+this.methodTab)\r\n                    }\r\n                }\r\n\r\n                this.element.methods[this.methodTab].errorSet = this.element.methods[this.methodTab].errorSet.filter(item => {\r\n                        return this.selDeleteErrorSet.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.methods[this.methodTab].errorSet.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineES.length; idx++) {\r\n                        if (this.element.methods[this.methodTab].errorSet[n].error == this.changeLineES[idx].name) {\r\n                            this.newLine(this.element.uuid+'/methoderrors-'+n+'-'+this.methodTab, this.element.uuid+'/methoderrors'+this.element.methods[this.methodTab].name, this.changeLineES[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteErrorSet = false\r\n                this.selDeleteErrorSet = []\r\n                this.changeLineES = []\r\n            } \r\n        },\r\n        clearErrorSet() {\r\n            this.isEditingErrorSet = true\r\n            this.editErrorSetItem.error = null\r\n        },\r\n        setErrorSetSelect() {\r\n            if (this.isEditingErrorSet == true) {\r\n                if (this.editErrorSetItem.error != null && this.editErrorSetItem.error.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editErrorSetItem.error.uuid, element: constant.Errorset_str} )\r\n                }\r\n                this.setErrorSetList()\r\n                this.isEditingErrorSet = false\r\n            } else {\r\n                this.isEditingErrorSet = true\r\n            }\r\n        },\r\n        setErrorSetList() {\r\n            this.selErrorSet = this.$store.getters.getErrorSet\r\n            this.setactiveUUID()\r\n        },\r\n        openErrorSet(idx) {\r\n            this.selErrorSet = this.$store.getters.getErrorSet\r\n            if ( this.element.methods[this.methodTab].errorSet[idx].error != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderrors-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getErrorSetPath(this.element.methods[this.methodTab].errorSet[idx].error)\r\n                }\r\n                this.editErrorSetItem.error = { name: this.element.methods[this.methodTab].errorSet[idx].error, uuid: endLine }\r\n            }\r\n        },\r\n        editErrorSet(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderrors-'+idx+'-'+this.methodTab)\r\n            if (endLine != undefined && this.editErrorSetItem.error == null) {\r\n                this.deleteLine(this.element.uuid+'/methoderrors-'+idx+'-'+this.methodTab)\r\n                this.element.methods[this.methodTab].errorSet[idx].error = null\r\n            } else if (endLine != undefined && endLine != this.editErrorSetItem.error.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/methoderrors-'+idx+'-'+this.methodTab)\r\n                this.newLine(this.element.uuid+'/methoderrors-'+idx+'-'+this.methodTab, this.element.uuid+'/methoderrors'+this.element.methods[this.methodTab].name, this.editErrorSetItem.error.uuid)\r\n                this.element.methods[this.methodTab].errorSet[idx].error = this.editErrorSetItem.error.name\r\n            } else if (endLine == undefined && this.editErrorSetItem.error != null) {\r\n                this.newLine(this.element.uuid+'/methoderrors-'+idx+'-'+this.methodTab, this.element.uuid+'/methoderrors'+this.element.methods[this.methodTab].name, this.editErrorSetItem.error.uuid)\r\n                this.element.methods[this.methodTab].errorSet[idx].error = this.editErrorSetItem.error.name\r\n            }\r\n            \r\n            this.cancelErrorSet()\r\n        },\r\n        cancelErrorSet() {\r\n            this.editErrorSetItem.error = null\r\n            this.setactiveUUID()\r\n        },\r\n        addErrorSet() {\r\n            if( this.editErrorSetItem.error != null) {\r\n                var datacount = this.element.methods[this.methodTab].errorSet.length\r\n                this.newLine(this.element.uuid+'/methoderrors-'+datacount+'-'+this.methodTab, this.element.uuid+'/methoderrors'+this.element.methods[this.methodTab].name, this.editErrorSetItem.error.uuid)\r\n                this.editErrorSetItem.error = this.editErrorSetItem.error.name\r\n            }\r\n            const addObj = Object.assign({}, this.editErrorSetItem)\r\n            this.element.methods[this.methodTab].errorSet.push(addObj);\r\n\r\n            this.cancelErrorSet()\r\n        },\r\n        newErrorSet() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * (1400 - 11)) + 10)\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n            this.$store.commit('addElementErrorSet', {\r\n                name: this.$store.getters.getNameErrorSet, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                errorref: [],\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.Errors_str)\r\n            EventBus.$emit('add-element', constant.Errorset_str)\r\n            this.$store.commit('editServiceInterface', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckError() {\r\n            if (this.isdeleteError == true) {\r\n                this.isdeleteError = false\r\n                this.selDeleteError = []\r\n            } else {\r\n                this.isdeleteError = true\r\n            }\r\n        },\r\n        deleteError() {\r\n            if (this.isdeleteError == true) {\r\n                for(let i=0; i<this.element.methods[this.methodTab].error.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderror-'+i+'-'+this.methodTab)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineE.push({name:this.element.methods[this.methodTab].error[i].error, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/methoderror-'+i+'-'+this.methodTab)\r\n                    }\r\n                }\r\n\r\n                this.element.methods[this.methodTab].error = this.element.methods[this.methodTab].error.filter(item => {\r\n                        return this.selDeleteError.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.methods[this.methodTab].error.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineE.length; idx++) {\r\n                        if (this.element.methods[this.methodTab].error[n].error == this.changeLineE[idx].name) {\r\n                            this.newLine(this.element.uuid+'/methoderror-'+n+'-'+this.methodTab, this.element.uuid+'/methoderror'+this.element.methods[this.methodTab].name, this.changeLineE[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteError = false\r\n                this.selDeleteError = []\r\n                this.changeLineE = []\r\n            } \r\n        },\r\n        clearErrorRef() {\r\n            this.isEditingError = true\r\n            this.editErrorItem.error = null\r\n        },\r\n        setErrorSelect() {\r\n            if (this.isEditingError == true) {\r\n                if (this.editErrorItem.error != null && this.editErrorItem.error.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editErrorItem.error.uuid, element: constant.Error_str} )\r\n                }\r\n                this.setErrorList()\r\n                this.isEditingError = false\r\n            } else {\r\n                this.isEditingError = true\r\n            }\r\n        },\r\n        setErrorList() {\r\n            this.selError = this.$store.getters.getError\r\n            this.setactiveUUID()\r\n        },\r\n        openError(idx) {\r\n            this.selError = this.$store.getters.getError\r\n\r\n            if ( this.element.methods[this.methodTab].error[idx].error != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderror-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getErrorPath(this.element.methods[this.methodTab].error[idx].error)\r\n                }\r\n                this.editErrorItem.error = { name: this.element.methods[this.methodTab].error[idx].error, uuid: endLine }\r\n            }\r\n        },\r\n        editError(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/methoderror-'+idx+'-'+this.methodTab)\r\n            if (endLine != undefined && this.editErrorItem.error == null) {\r\n                this.deleteLine(this.element.uuid+'/methoderror-'+idx+'-'+this.methodTab)\r\n                this.element.methods[this.methodTab].error[idx].error = null\r\n            } else if (endLine != undefined && endLine != this.editErrorItem.error.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/methoderror-'+idx+'-'+this.methodTab)\r\n                this.newLine(this.element.uuid+'/methoderror-'+idx+'-'+this.methodTab, this.element.uuid+'/methoderror'+this.element.methods[this.methodTab].name, this.editErrorItem.error.uuid)\r\n                this.element.methods[this.methodTab].error[idx].error = this.editErrorItem.error.name\r\n            } else if (endLine == undefined && this.editErrorItem.error != null) {\r\n                this.newLine(this.element.uuid+'/methoderror-'+idx+'-'+this.methodTab, this.element.uuid+'/methoderror'+this.element.methods[this.methodTab].name, this.editErrorItem.error.uuid)\r\n                this.element.methods[this.methodTab].error[idx].error = this.editErrorItem.error.name\r\n            }\r\n            \r\n            this.cancelError()\r\n        },\r\n        cancelError() {\r\n            this.editErrorItem.error = null\r\n            this.setactiveUUID()\r\n        },\r\n        addError() {\r\n            if( this.editErrorItem.error != null) {\r\n                var datacount = this.element.methods[this.methodTab].error.length\r\n                this.newLine(this.element.uuid+'/methoderror-'+datacount+'-'+this.methodTab, this.element.uuid+'/methoderror'+this.element.methods[this.methodTab].name, this.editErrorItem.error.uuid)\r\n                this.editErrorItem.error = this.editErrorItem.error.name\r\n            }\r\n            const addObj = Object.assign({}, this.editErrorItem)\r\n            this.element.methods[this.methodTab].error.push(addObj);\r\n\r\n            this.cancelError()\r\n        },\r\n        newError() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * (1400 - 11)) + 10)\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n            this.$store.commit('addElementError', {\r\n                name: this.$store.getters.getNameError, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                desc: '', errorcode: '', errorDref: null\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.Errors_str)\r\n            EventBus.$emit('add-element', constant.Error_str)\r\n            this.$store.commit('editServiceInterface', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editServiceInterface', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n        searchChangeName(isInArg) {\r\n            console.log('=searchChangeName='+isInArg)\r\n            if (isInArg) { //inArg일 경우\r\n                for (let i = 0; i<this.inArgumentItem.length; i++) {\r\n                    if (this.afterEditInArgLine[i].enduuid != null) {\r\n                        var changeName = this.$store.getters.getImplementationName(this.afterEditInArgLine[i].enduuid)\r\n                        if (changeName != this.inArgumentItem[i].type) {\r\n                            this.inArgumentItem[i].type = changeName\r\n                        }\r\n                    }\r\n                }\r\n            } else { //outArg일 경우\r\n                for (let i = 0; i<this.outArgumentItem.length; i++) {\r\n                    if (this.afterEditOutArgLine[i].enduuid != null) {\r\n                        var changeNameOut = this.$store.getters.getImplementationName(this.afterEditOutArgLine[i].enduuid)\r\n                        if (this.afterEditOutArgLine[i].enduuid != null && changeNameOut != this.outArgumentItem[i].type) {\r\n                            this.outArgumentItem[i].type = changeNameOut\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>"]}]}