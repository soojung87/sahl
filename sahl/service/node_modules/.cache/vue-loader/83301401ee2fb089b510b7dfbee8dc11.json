{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\detailViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\detailViewer.vue","mtime":1643172600082},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovL2ltcG9ydCBjb25zdGFudCBmcm9tICIuLi9zdG9yZS9jb25zdGFudHMuanMiDQppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJy4uL21haW4nDQppbXBvcnQgQ29tcHVNZXRob2QgZnJvbSAnLi9jb21wdW1ldGhvZC52dWUnDQppbXBvcnQgRGF0YUNvbnN0ciBmcm9tICcuL2RhdGFjb25zdHIudnVlJw0KaW1wb3J0IEFwcGxpY2F0aW9uQXJyYXlEYXRlIGZyb20gJy4vYXBwbGljYXRpb25BcnJheURhdGEudnVlJw0KaW1wb3J0IEltcGxlbWVudGF0aW9uRGF0YVR5cGUgZnJvbSAnLi9pbXBsZW1lbnRhdGlvbkRhdGEudnVlJw0KaW1wb3J0IFNXQ29tcG9uZW50cyBmcm9tICcuLi9jb21wb25lbnRzL1NXQ29tcG9uZW50cy52dWUnDQppbXBvcnQgUHJvY2Vzc0Rlc2lnbiBmcm9tICcuLi9jb21wb25lbnRzL1Byb2Nlc3NEZXNpZ24udnVlJw0KaW1wb3J0IEV4ZWN1dGFibGUgZnJvbSAnLi4vY29tcG9uZW50cy9FeGVjdXRhYmxlLnZ1ZScNCmltcG9ydCBTdGFydHVwQ29uZmlnIGZyb20gJy4uL2NvbXBvbmVudHMvU3RhcnR1cENvbmZpZy52dWUnDQppbXBvcnQgRGV0ZXJtaW5pc3RpY0NsaWVudCBmcm9tICcuLi9jb21wb25lbnRzL0RldGVybWluaXN0aWNDbGllbnQudnVlJw0KaW1wb3J0IEhXQ2F0ZWdvcnkgZnJvbSAnLi4vY29tcG9uZW50cy9IV0NhdGVnb3J5LnZ1ZScNCmltcG9ydCBNYWNoaW5lIGZyb20gJy4uL2NvbXBvbmVudHMvTWFjaGluZS52dWUnDQppbXBvcnQgTWFjaGluZURlc2lnbiBmcm9tICcuLi9jb21wb25lbnRzL01hY2hpbmVEZXNpZ24udnVlJw0KaW1wb3J0IEV0aGVybmV0Q2x1c3RlciBmcm9tICcuLi9jb21wb25lbnRzL0V0aGVybmV0Q2x1c3Rlci52dWUnDQppbXBvcnQgTW9kZURlY2xhcmF0aW9uR3JvdXAgZnJvbSAnLi4vY29tcG9uZW50cy9Nb2RlRGVjbGFyYXRpb25Hcm91cC52dWUnDQppbXBvcnQgQVBFcnJvckRvbWFpbiBmcm9tICcuLi9jb21wb25lbnRzL0FQRXJyb3JEb21haW4udnVlJw0KaW1wb3J0IEFQRXJyb3IgZnJvbSAnLi4vY29tcG9uZW50cy9BUEVycm9yLnZ1ZScNCmltcG9ydCBBUEVycm9yU2V0IGZyb20gJy4uL2NvbXBvbmVudHMvQVBFcnJvclNldC52dWUnDQppbXBvcnQgU2VydmljZUludGVyZmFjZSBmcm9tICcuL3NlcnZpY2VJbnRlcmZhY2UudnVlJw0KaW1wb3J0IFNvbWVJUFNlcnZpY2UgZnJvbSAnLi4vY29tcG9uZW50cy9Tb21lSVBTZXJ2aWNlLnZ1ZScNCmltcG9ydCBDbGllbnQgZnJvbSAnLi4vY29tcG9uZW50cy9DbGllbnRFdmVudEcudnVlJw0KaW1wb3J0IFNlcnZlciBmcm9tICcuLi9jb21wb25lbnRzL1NlcnZlci52dWUnDQppbXBvcnQgU29tZUlQQ2xpZW50IGZyb20gJy4uL2NvbXBvbmVudHMvU29tZUlQQ2xpZW50LnZ1ZScNCmltcG9ydCBTb21lSVBTZXJ2ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Tb21lSVBTZXJ2ZXIudnVlJw0KaW1wb3J0IFJlcXVpcmVkIGZyb20gJy4uL2NvbXBvbmVudHMvUmVxdWlyZWRTb21lSVAudnVlJw0KaW1wb3J0IFByb3ZpZGVkIGZyb20gJy4uL2NvbXBvbmVudHMvUHJvdmlkZWRTb21lSVAudnVlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgY29tcG9uZW50czp7Q29tcHVNZXRob2QsIERhdGFDb25zdHIsIEFwcGxpY2F0aW9uQXJyYXlEYXRlLCBJbXBsZW1lbnRhdGlvbkRhdGFUeXBlLA0KICAgICAgICAgICAgICAgIFNvbWVJUFNlcnZpY2UsIFNlcnZpY2VJbnRlcmZhY2UsIENsaWVudCwgU2VydmVyLA0KICAgICAgICAgICAgICAgIFNvbWVJUENsaWVudCwgU29tZUlQU2VydmVyLCBSZXF1aXJlZCwgUHJvdmlkZWQsDQogICAgICAgICAgICAgICAgQVBFcnJvciwgQVBFcnJvckRvbWFpbiwgQVBFcnJvclNldCwNCiAgICAgICAgICAgICAgICBTV0NvbXBvbmVudHMsIFByb2Nlc3NEZXNpZ24sIEV4ZWN1dGFibGUsIFN0YXJ0dXBDb25maWcsIERldGVybWluaXN0aWNDbGllbnQsDQogICAgICAgICAgICAgICAgTWFjaGluZSwgTWFjaGluZURlc2lnbiwgRXRoZXJuZXRDbHVzdGVyLCBNb2RlRGVjbGFyYXRpb25Hcm91cCwgSFdDYXRlZ29yeSB9LA0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIGRldGFpbFZpZXdlcigpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5kZXRhaWxWaWV3ZXINCiAgICAgICAgfSwNCiAgICAgICAgaWRleERldGFpbFZpZXcoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuaWRleERldGFpbFZpZXcNCiAgICAgICAgfSwNCiAgICAgICAgc2V0dGluZygpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5nDQogICAgICAgIH0NCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIGlkZXhEZXRhaWxWaWV3KHZhbCkgew0KICAgICAgICAgICAgaWYgKHZhbCA8PSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldERldGFpbFZpZXdsZW5ndGggJiYgdmFsID49IDApIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzYmFja3Bvc3NpYmxlID0gdHJ1ZQ0KICAgICAgICAgICAgICAgIHRoaXMuaXNmcm9udHBvc3NpYmxlID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKHZhbCA9PSAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2JhY2twb3NzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAodmFsID09ICh0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldERldGFpbFZpZXdsZW5ndGggKSkgew0KICAgICAgICAgICAgICAgIHRoaXMuaXNmcm9udHBvc3NpYmxlID0gZmFsc2UNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgc2V0dGluZyh2YWx1ZSkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJy8vLycrdmFsdWUuem9vbURldGFpbCkNCiAgICAgICAgICAgIHRoaXMuem9vbS52YWx1ZSA9IHZhbHVlLnpvb21EZXRhaWwNCiAgICAgICAgfQ0KICAgIH0sDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGlzYmFja3Bvc3NpYmxlOiBmYWxzZSwNCiAgICAgICAgICAgIGlzZnJvbnRwb3NzaWJsZTogZmFsc2UsDQogICAgICAgICAgICB6b29tOiB7DQogICAgICAgICAgICAgICAgbWluOiAwLjIsDQogICAgICAgICAgICAgICAgbWF4OiAyLA0KICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5nLnpvb21EZXRhaWwsDQogICAgICAgICAgICAgICAgc3RlcDogMC4xLA0KICAgICAgICAgICAgICAgIG9yaWdpblg6IDAsDQogICAgICAgICAgICAgICAgb3JpZ2luWTogMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGV0aGVybmV0Q2x1c3RlckluZm86IHsgIGlzQ2hhbm5lbDogZmFsc2UsIGlzRW5kcG9pbnQ6IGZhbHNlLCANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkeENvbmRpdGlvbmFsOiBudWxsLCBpZHhDaGFubmVsOiBudWxsLCAgaWR4RW5kcG9pbnQ6IG51bGwsfSAsDQogICAgICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkICgpIHsNCiAgICAgICAgRXZlbnRCdXMuJG9uKCdkZXRhaWxWaWV3SW5mbycsKGluZm8pID0+IHsNCiAgICAgICAgICAgIHRoaXMuZXRoZXJuZXRDbHVzdGVySW5mby5pc0NoYW5uZWwgPSBpbmZvLmlzQ2hhbm5lbA0KICAgICAgICAgICAgdGhpcy5ldGhlcm5ldENsdXN0ZXJJbmZvLmlzRW5kcG9pbnQgPSBpbmZvLmlzRW5kcG9pbnQNCiAgICAgICAgICAgIHRoaXMuZXRoZXJuZXRDbHVzdGVySW5mby5pZHhDb25kaXRpb25hbCA9IGluZm8uaWR4Q29uZGl0aW9uYWwNCiAgICAgICAgICAgIHRoaXMuZXRoZXJuZXRDbHVzdGVySW5mby5pZHhDaGFubmVsID0gaW5mby5pZHhDaGFubmVsDQogICAgICAgICAgICB0aGlzLmV0aGVybmV0Q2x1c3RlckluZm8uaWR4RW5kcG9pbnQgPSBpbmZvLmlkeEVuZHBvaW50DQogICAgICAgIH0pDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGhpZGVEZXRhaWxWaWV3ZXIoKSB7DQogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdoaWRlRGV0YWlsVmlld2VyJykNCiAgICAgICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RldGFpbHZpZXdlcicpLnN0eWxlLndpZHRoPSAnNXB4Jw0KICAgICAgICAgICAgLy/tgazquLAg7KGw7KCV7J2AIOuQmOuKlOuNsCBtYWludmlld+ydmCDsiqTtgazroaTsnbQg65Sw65287Jik7KeIIOyViuuKlOuLpA0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRPcGVuQ2xvc2VEZXRhaWxWaWV3Jywge2lzb3BlbjogZmFsc2V9ICkNCiAgICAgICAgfSwNCiAgICAgICAgYmFja1ZpZXdlcigpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5pZGV4RGV0YWlsVmlldyA9PSAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2JhY2twb3NzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldEJhY2tEZXRhaWxWaWV3JykNCiAgICAgICAgfSwNCiAgICAgICAgZnJvbnRWaWV3ZXIoKSB7DQogICAgICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuaWRleERldGFpbFZpZXcgPT0gKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RGV0YWlsVmlld2xlbmd0aCkpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzZnJvbnRwb3NzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldGZyb250RGV0YWlsVmlldycpDQogICAgICAgIH0sDQogICAgfSwNCn0NCg=="},{"version":3,"sources":["detailViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"detailViewer.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div v-bind:style=\"{ transform: 'scale(' + zoom.value + ')'}\" class=\"zoom-width\" > \r\n        <v-card flat >\r\n            <v-toolbar dense flat>\r\n                <v-btn icon @click=\"hideDetailViewer\">\r\n                    <v-icon>mdi-chevron-double-right</v-icon>\r\n                </v-btn>\r\n                <v-toolbar-title>Detail Viewer</v-toolbar-title>\r\n                <v-btn icon @click=\"backViewer\" :disabled=\"!isbackpossible\">\r\n                    <v-icon>mdi-arrow-left</v-icon>\r\n                </v-btn>\r\n                <v-btn icon @click=\"frontViewer\" :disabled=\"!isfrontpossible\">\r\n                    <v-icon>mdi-arrow-right</v-icon>\r\n                </v-btn>\r\n            </v-toolbar>\r\n            <div v-if=\"detailViewer.element == 'Compu Method'\">\r\n                <CompuMethod :element= this.$store.getters.getDataCompuMethod(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Data Constr'\">\r\n                <DataConstr :element= this.$store.getters.getDataDataConstr(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Application Array'\">\r\n                <ApplicationArrayDate :element='element' :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Implementation'\">\r\n                <ImplementationDataType :element= this.$store.getters.getDataImplementation(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n\r\n            <div v-else-if=\"detailViewer.element == 'SW Components'\">\r\n                <SWComponents :element= this.$store.getters.getDataSWComponent(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Process Design'\">\r\n                <ProcessDesign :element= this.$store.getters.getDataProcessDesign(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Executable'\">\r\n                <Executable :element= this.$store.getters.getDataExecutable(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Startup Config'\">\r\n                <StartupConfig :element= this.$store.getters.getDataStartupConfig(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Deterministic Client'\">\r\n                <DeterministicClient :element= this.$store.getters.getDataDeterministicClient(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n\r\n            <div v-else-if=\"detailViewer.element == 'Machine'\">\r\n                <Machine :element= this.$store.getters.getDataMachine(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Machine Designs'\">\r\n                <MachineDesign :element= this.$store.getters.getDataMachineDesign(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Ethernet Cluster'\">\r\n                <EthernetCluster :element= this.$store.getters.getDataEthernetCluster(detailViewer.uuid) :isDatailView=\"true\" :viewInfo=\"ethernetClusterInfo\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Mode Declaration Group'\">\r\n                <ModeDeclarationGroup :element= this.$store.getters.getDataModeDeclaration(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'HW Category'\">\r\n                <HWCategory :element= this.$store.getters.getDataHWCategory(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n\r\n            <div v-else-if=\"detailViewer.element == 'Error'\">\r\n                <APError :element= this.$store.getters.getDataError(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Error Domain'\">\r\n                <APErrorDomain :element= this.$store.getters.getDataErrorDomain(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Error Set'\">\r\n                <APErrorSet :element= this.$store.getters.getDataErrorDomain(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'SomeIP Service Interface Deployment'\">\r\n                <SomeIPService :element= this.$store.getters.getDataSomeIPService(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Service Interface'\">\r\n                <ServiceInterface :element= this.$store.getters.getDataServiceInterface(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Client'\">\r\n                <Client :element= this.$store.getters.getDataClient(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Server'\">\r\n                <Server :element= this.$store.getters.getDataServer(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'SomeIP Client'\">\r\n                <SomeIPClient :element= this.$store.getters.getDataSomeIPClient(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'SomeIP Server'\">\r\n                <SomeIPServer :element= this.$store.getters.getDataSomeIPServer(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Required SomeIP'\">\r\n                <Required :element= this.$store.getters.getDataRequiredSomeIP(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n            <div v-else-if=\"detailViewer.element == 'Provided SomeIP'\">\r\n                <Provided :element= this.$store.getters.getDataProvidedSomeIP(detailViewer.uuid) :isDatailView=\"true\"/> \r\n            </div>\r\n\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import constant from \"../store/constants.js\"\r\nimport { EventBus } from '../main'\r\nimport CompuMethod from './compumethod.vue'\r\nimport DataConstr from './dataconstr.vue'\r\nimport ApplicationArrayDate from './applicationArrayData.vue'\r\nimport ImplementationDataType from './implementationData.vue'\r\nimport SWComponents from '../components/SWComponents.vue'\r\nimport ProcessDesign from '../components/ProcessDesign.vue'\r\nimport Executable from '../components/Executable.vue'\r\nimport StartupConfig from '../components/StartupConfig.vue'\r\nimport DeterministicClient from '../components/DeterministicClient.vue'\r\nimport HWCategory from '../components/HWCategory.vue'\r\nimport Machine from '../components/Machine.vue'\r\nimport MachineDesign from '../components/MachineDesign.vue'\r\nimport EthernetCluster from '../components/EthernetCluster.vue'\r\nimport ModeDeclarationGroup from '../components/ModeDeclarationGroup.vue'\r\nimport APErrorDomain from '../components/APErrorDomain.vue'\r\nimport APError from '../components/APError.vue'\r\nimport APErrorSet from '../components/APErrorSet.vue'\r\nimport ServiceInterface from './serviceInterface.vue'\r\nimport SomeIPService from '../components/SomeIPService.vue'\r\nimport Client from '../components/ClientEventG.vue'\r\nimport Server from '../components/Server.vue'\r\nimport SomeIPClient from '../components/SomeIPClient.vue'\r\nimport SomeIPServer from '../components/SomeIPServer.vue'\r\nimport Required from '../components/RequiredSomeIP.vue'\r\nimport Provided from '../components/ProvidedSomeIP.vue'\r\n\r\nexport default {\r\n    components:{CompuMethod, DataConstr, ApplicationArrayDate, ImplementationDataType,\r\n                SomeIPService, ServiceInterface, Client, Server,\r\n                SomeIPClient, SomeIPServer, Required, Provided,\r\n                APError, APErrorDomain, APErrorSet,\r\n                SWComponents, ProcessDesign, Executable, StartupConfig, DeterministicClient,\r\n                Machine, MachineDesign, EthernetCluster, ModeDeclarationGroup, HWCategory },\r\n    computed: {\r\n        detailViewer() {\r\n            return this.$store.state.detailViewer\r\n        },\r\n        idexDetailView() {\r\n            return this.$store.state.idexDetailView\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        }\r\n    },\r\n    watch: {\r\n        idexDetailView(val) {\r\n            if (val <= this.$store.getters.getDetailViewlength && val >= 0) {\r\n                this.isbackpossible = true\r\n                this.isfrontpossible = true\r\n            }\r\n            if (val == 0) {\r\n                this.isbackpossible = false\r\n            }\r\n            if (val == (this.$store.getters.getDetailViewlength )) {\r\n                this.isfrontpossible = false\r\n            }\r\n        },\r\n        setting(value) {\r\n            console.log('///'+value.zoomDetail)\r\n            this.zoom.value = value.zoomDetail\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isbackpossible: false,\r\n            isfrontpossible: false,\r\n            zoom: {\r\n                min: 0.2,\r\n                max: 2,\r\n                value: this.$store.state.setting.zoomDetail,\r\n                step: 0.1,\r\n                originX: 0,\r\n                originY: 0\r\n            },\r\n            ethernetClusterInfo: {  isChannel: false, isEndpoint: false, \r\n                                    idxConditional: null, idxChannel: null,  idxEndpoint: null,} ,\r\n            }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('detailViewInfo',(info) => {\r\n            this.ethernetClusterInfo.isChannel = info.isChannel\r\n            this.ethernetClusterInfo.isEndpoint = info.isEndpoint\r\n            this.ethernetClusterInfo.idxConditional = info.idxConditional\r\n            this.ethernetClusterInfo.idxChannel = info.idxChannel\r\n            this.ethernetClusterInfo.idxEndpoint = info.idxEndpoint\r\n        })\r\n    },\r\n    methods: {\r\n        hideDetailViewer() {\r\n            //console.log('hideDetailViewer')\r\n            //document.getElementById('detailviewer').style.width= '5px'\r\n            //크기 조정은 되는데 mainview의 스크롤이 따라오질 않는다\r\n            this.$store.commit('setOpenCloseDetailView', {isopen: false} )\r\n        },\r\n        backViewer() {\r\n            if (this.$store.state.idexDetailView == 0) {\r\n                this.isbackpossible = false\r\n                return\r\n            }\r\n            this.$store.commit('setBackDetailView')\r\n        },\r\n        frontViewer() {\r\n            if (this.$store.state.idexDetailView == (this.$store.getters.getDetailViewlength)) {\r\n                this.isfrontpossible = false\r\n                return\r\n            }\r\n            this.$store.commit('setfrontDetailView')\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style>\r\n.zoom-width{\r\n    -webkit-transform-origin: 0 0; /* 이거 넣으니 확대했을때 title안나오던거 보임 */\r\n    margin: 0 10px 0 0;\r\n}\r\n</style>"]}]}