{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\Process.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\Process.vue","mtime":1651541736750},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Process.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Process.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showProcess\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>Process</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Process</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-show=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputProcessName' outlined dense  @click=\"setactiveUUID\"></v-text-field>\r\n                    <v-row style=\"height: 45px\">\r\n                        <v-col cols=\"10\">\r\n                            <v-text-field v-model=\"element.prodesign\" readonly @click=\"setProcessDesignSelect()\" clearable @click:clear='clearProcessDesign()' label=\"Design Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col cols=\"2\">\r\n                            <v-menu>\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processprodesign'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessDesignList()\">\r\n                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <v-list>\r\n                                    <v-list-item v-for=\"(item, i) in selProcessDesign\" :key=\"i\" link @click=\"setProcessDesign(item)\">\r\n                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                    </v-list-item>\r\n                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcessDesign\" >\r\n                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                    </v-btn>\r\n                                </v-list>\r\n                            </v-menu>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-row style=\"height: 45px\">\r\n                        <v-col cols=\"10\">\r\n                            <v-text-field v-model=\"element.determin\" readonly @click=\"setDeterminSelect()\" clearable @click:clear='clearDetermin()' label=\"Deterministic Client Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col cols=\"2\">\r\n                            <v-menu>\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processdetermin'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setDeterminList()\">\r\n                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <v-list>\r\n                                    <v-list-item v-for=\"(item, i) in selDeterministic\" :key=\"i\" link @click=\"setDeterministicClient(item)\">\r\n                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                    </v-list-item>\r\n                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newDeterministicClient\" >\r\n                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                    </v-btn>\r\n                                </v-list>\r\n                            </v-menu>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-row style=\"height: 70px\">\r\n                        <v-col cols=\"10\">\r\n                            <v-text-field v-model=\"element.execut\" readonly @click=\"setExecutableSelect()\" clearable @click:clear='clearExecutable()' label=\"Executable Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col cols=\"2\">\r\n                            <v-menu>\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processexecut'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setExecutableList()\">\r\n                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <v-list>\r\n                                    <v-list-item v-for=\"(item, i) in selExecutable\" :key=\"i\" link @click=\"setExecutable(item)\">\r\n                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                    </v-list-item>\r\n                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\" >\r\n                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                    </v-btn>\r\n                                </v-list>\r\n                            </v-menu>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/processmodedeclar'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showStateMachine\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isStateMachineOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Process State Machine\r\n                        </div>\r\n                        <v-card-text v-show=\"isStateMachineOpenClose\">\r\n                            <v-text-field v-model=\"element.machinname\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-row style=\"height: 70px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.machinetype\" readonly @click=\"setModeDeclarationSelect()\" clearable @click:clear='clearModeDeclaration()' label=\"Type TReference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setModeDeclarationList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selModeDeclaration\" :key=\"i\" link @click=\"setModeDeclaration(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newModeDeclarationGroup\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/processStarupC'\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showDependentStartup\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isDependentStartupOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            State Dependent Startup Config\r\n                            <v-btn v-if=\"isDependentStartupOpenClose\" @click=\"addDependentStartup\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-tabs v-model='dependentStartupTab' v-show=\"isDependentStartupOpenClose\" show-arrows @change=\"changeDependentStartupTab()\">\r\n                            <v-tab v-for=\"(tab, idx) in element.dependent\" :key=\"idx\" @click=\"clickDependentStartuptab()\"> \r\n                                {{idx}}\r\n                                <v-btn text x-small @click=\"deleteDependentStartup(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                        </v-tabs>\r\n                        <v-tabs-items v-model=\"dependentStartupTab\" v-show=\"isDependentStartupOpenClose\">\r\n                            <v-tab-item v-for=\"(tab, idx) in element.dependent\" :key=\"idx\">\r\n                                <v-card flat>\r\n                                    <v-card-text>\r\n                                        <v-card outlined class=\"mx-auto\">\r\n                                            <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/fgtable'+idx\">\r\n                                                <v-hover v-slot=\"{ hover }\">\r\n                                                    <v-btn text @click=\"showFunctionG\" x-small color=\"indigo\">\r\n                                                        <v-icon>{{ isFunctionGOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                    </v-btn>\r\n                                                </v-hover>\r\n                                                Function Group State\r\n                                                <v-btn  v-if=\"isFunctionGOpenClose\" @click=\"isCheckFunctionG\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-check</v-icon>\r\n                                                </v-btn>\r\n                                                <v-btn  v-if=\"isdeleteFunctionG && isFunctionGOpenClose\" @click=\"deleteFunctionG\" text x-small color=\"indigo\">\r\n                                                    <v-icon>mdi-minus</v-icon>\r\n                                                </v-btn>\r\n                                            </div>\r\n                                            <v-card-text v-show=\"isFunctionGOpenClose\">\r\n                                                <v-data-table v-model=\"selectDelectFunctionGItem\" :headers=\"headerFunctionG\" :items=\"tab.functionItem\"\r\n                                                        :show-select=\"isdeleteFunctionG\" item-key=\"contextMode\" height=\"100px\" dense hide-default-footer >\r\n                                                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                    </template>\r\n                                                    <template v-if=\"!isdeleteFunctionG\" v-slot:body=\"{ items, headers }\">\r\n                                                        <tbody>\r\n                                                            <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                                                <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                    <!-- <v-icon v-if=\"header.value == 'sort'\" small class=\"sortHandle\" >mdi-arrow-all</v-icon> -->\r\n                                                                    <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openFunctionG(idx)\" @cancel=\"editFunctionG(idx)\" @save=\"cancelFunctionG\" large >\r\n                                                                        {{item[header.value]}}\r\n                                                                        <template v-slot:input>\r\n                                                                            <br> <!--v-autocomplete 여기에서 item의 uuid가 같을경우 item-text='name' item-value=\"uuid\"로 해주면 uuid값이 같기 때문에 item의 list가 다 나오지 않는다 name으로 바꿔야지만 list가 잘나옴 -->\r\n                                                                            <v-autocomplete v-model='editFunctionGItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                    return-object :readonly=\"!isEditingContextMode\" @click=\"setContextModeSelect()\" @blur=\"isEditingContextMode=true\" \r\n                                                                                    clearable @click:clear='clearContextModeRef'>\r\n                                                                            </v-autocomplete>\r\n                                                                            <v-autocomplete v-model='editFunctionGItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                    return-object :readonly=\"!isEditingTargetMode\"  @click=\"setTargetModeSelect()\" @blur=\"isEditingTargetMode=true\" \r\n                                                                                    clearable @click:clear='clearTargetModeRef'>\r\n                                                                            </v-autocomplete>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th colspan=\"3\">\r\n                                                                    <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addFunctionG()\" @save=\"cancelFunctionG\"> \r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                        <template v-slot:input>\r\n                                                                            <br>\r\n                                                                            <v-autocomplete v-model='editFunctionGItem.contextMode' label='Context Mode Declaration Group Prototype Ref' :items='selContextMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                    return-object :readonly=\"!isEditingContextMode\" @click=\"setContextModeSelect()\" @blur=\"isEditingContextMode=true\" \r\n                                                                                    clearable @click:clear='clearContextModeRef'>\r\n                                                                            </v-autocomplete>\r\n                                                                            <v-autocomplete v-model='editFunctionGItem.targetMode' label='Target Mode Declaration Ref' :items='selTargetMode' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                    return-object :readonly=\"!isEditingTargetMode\"  @click=\"setTargetModeSelect()\" @blur=\"isEditingTargetMode=true\" \r\n                                                                                    clearable @click:clear='clearTargetModeRef'>\r\n                                                                            </v-autocomplete>\r\n                                                                        </template>\r\n                                                                    </v-edit-dialog>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </template>\r\n                                                </v-data-table>\r\n                                            </v-card-text>\r\n                                        </v-card>\r\n                                        <v-row style=\"height: 45px\">\r\n                                            <v-col cols=\"10\">\r\n                                                <v-text-field v-model=\"tab.resourceRef\" readonly @click=\"setResourceGSelect(tab)\" clearable @click:clear='clearResourceG(tab)' label=\"Resource Group Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                            </v-col>\r\n                                            <v-col cols=\"2\">\r\n                                                <v-menu>\r\n                                                    <template v-slot:activator=\"{ on, attrs }\">\r\n                                                        <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processresorce'+idx\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setResourceGList()\">\r\n                                                            <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                        </v-btn>\r\n                                                    </template>\r\n                                                    <v-list >\r\n                                                        <v-list-item v-for=\"(item, i) in selResourceG\" :key=\"i\" link @click=\"setResourceG(item, tab)\">\r\n                                                            <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                        <v-list-item v-if=\"selResourceG.length == 0\">\r\n                                                            <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                    </v-list>\r\n                                                </v-menu>\r\n                                            </v-col>\r\n                                        </v-row>\r\n                                        <v-row style=\"height: 70px\">\r\n                                            <v-col cols=\"10\">\r\n                                                <v-text-field v-model=\"tab.startupConfigRef\" readonly @click=\"setStartupCSelect(tab)\" clearable @click:clear='clearStartupC(tab)' label=\"Startup Config Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                            </v-col>\r\n                                            <v-col cols=\"2\">\r\n                                                <v-menu>\r\n                                                    <template v-slot:activator=\"{ on, attrs }\">\r\n                                                        <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processstartup'+idx\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setStartupCList()\">\r\n                                                            <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                        </v-btn>\r\n                                                    </template>\r\n                                                    <v-list>\r\n                                                        <v-list-item v-for=\"(item, i) in selStartupC\" :key=\"i\" link @click=\"setStartupC(item, tab)\">\r\n                                                            <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newStartupC\" >\r\n                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                        </v-btn>\r\n                                                    </v-list>\r\n                                                </v-menu>\r\n                                            </v-col>\r\n                                        </v-row>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                            </v-tab-item>\r\n                        </v-tabs-items>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-show=\"!iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isStateMachineOpenClose: true,\r\n            isDependentStartupOpenClose: true,\r\n            isFunctionGOpenClose : true,\r\n            selProcessDesign: this.$store.getters.getProcessDesign,\r\n            selDeterministic: this.$store.getters.getDeterministicClient,\r\n            selExecutable: this.$store.getters.getExecutable,\r\n            selModeDeclaration: this.$store.getters.getModeDeclarationG,\r\n            selResourceG: this.$store.getters.getResourceGroup,\r\n            selStartupC: this.$store.getters.getStartupConfig,\r\n            dependentStartupTab: 0,\r\n            \r\n            isdeleteFunctionG: false,\r\n            selectDelectFunctionGItem: [],\r\n            headerFunctionG: [\r\n                { text: 'Context Mode Ref', align: 'start', sortable: false, value: 'contextMode' },\r\n                { text: 'Target Mode Ref', sortable: false, value: 'targetMode' },\r\n            ],\r\n            isEditingContextMode: true,\r\n            isEditingTargetMode: true,\r\n            defaultFunctionGItem: { contextMode: null, targetMode: null },\r\n            editFunctionGItem: { contextMode: null, targetMode: null },\r\n            selContextMode: this.$store.getters.getModeDeclarationGP,\r\n            selTargetMode: this.$store.getters.getModeDeclaration,\r\n            changeLineFunc: [],\r\n\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showProcess() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                if(this.iselementOpenClose) {\r\n                    if(this.element.dependent.length > 0) {\r\n                        if (this.isDependentStartupOpenClose) {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.dependentStartupTab)\r\n                        } else {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        showStateMachine() {\r\n            this.isStateMachineOpenClose = this.isStateMachineOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showDependentStartup() {\r\n            this.isDependentStartupOpenClose = this.isDependentStartupOpenClose ? false : true\r\n            if(this.element.dependent.length > 0) {\r\n                this.$nextTick(() => {\r\n                    if(this.isDependentStartupOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.dependentStartupTab)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }\r\n        },\r\n        showFunctionG() {\r\n            this.isFunctionGOpenClose = this.isFunctionGOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        inputProcessName() {\r\n            this.$store.commit('editProcess', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        clearProcessDesign() {\r\n            this.element.prodesign = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processprodesign')\r\n            }\r\n        },\r\n        setProcessDesignSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getProcessDesignPath(this.element.prodesign)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.ProcessDesign_str} )\r\n            }\r\n        },\r\n        setProcessDesignList() {\r\n            this.selProcessDesign = this.$store.getters.getProcessDesign\r\n            this.setactiveUUID()\r\n        },\r\n        setProcessDesign(item) {\r\n            if(this.element.prodesign != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processprodesign')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processprodesign')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processprodesign', this.element.uuid+'/processprodesign', item.uuid)\r\n                this.element.prodesign = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcessDesign() {\r\n            this.$store.commit('addElementProcessDesign', { //executableref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameProcessDesign, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                executableref: null, determin: [],\r\n            })\r\n            EventBus.$emit('add-element', constant.ProcessDesign_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearDetermin() {\r\n            this.element.determin = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processdetermin')\r\n            }\r\n        },\r\n        setDeterminSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getDeterministicClientPath(this.element.determin)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.DeterministicClient_str} )\r\n            }\r\n        },\r\n        setDeterminList() {\r\n            this.selDeterministic = this.$store.getters.getDeterministicClient\r\n            this.setactiveUUID()\r\n        },\r\n        setDeterministicClient(item) {\r\n            if(this.element.determin != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processdetermin')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processdetermin')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processdetermin', this.element.uuid+'/processdetermin', item.uuid)\r\n                this.element.determin = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newDeterministicClient() {\r\n            this.$store.commit('addElementDeterministicClien', {\r\n                name: this.$store.getters.getNameDeterministicClient, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                cycletiem: '', numofworkers: '',\r\n            })\r\n            EventBus.$emit('add-element', constant.DeterministicClient_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearExecutable() {\r\n            this.element.execut = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processexecut')\r\n            }\r\n        },\r\n        setExecutableSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getExecutablePath(this.element.execut)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Executable_str} )\r\n            }\r\n        },\r\n        setExecutableList() {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            this.setactiveUUID()\r\n        },\r\n        setExecutable(item) {\r\n            if(this.element.execut != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processexecut')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processexecut')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processexecut', this.element.uuid+'/processexecut', item.uuid)\r\n                this.element.execut = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newExecutable() {\r\n            this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameExecutable, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n            })\r\n            EventBus.$emit('add-element', constant.Executable_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearModeDeclaration() {\r\n            this.element.machinetype = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processmodedeclar')\r\n            }\r\n        },\r\n        setModeDeclarationSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getModeDeclarationPath(this.element.machinetype, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.ModeDeclarationGroup_str} )\r\n            }\r\n        },\r\n        setModeDeclarationList() {\r\n            this.selModeDeclaration = this.$store.getters.getModeDeclarationG\r\n            this.setactiveUUID()\r\n        },\r\n        setModeDeclaration(item) {\r\n            if(this.element.machinetype != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processmodedeclar')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processmodedeclar')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processmodedeclar', this.element.uuid+'/processmodedeclar', item.uuid)\r\n                this.element.machinetype = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newModeDeclarationGroup() {\r\n            this.$store.commit('addElementModeDeclarationGroup', {\r\n                name: this.$store.getters.getNameModeDeclarationGroup, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, \r\n                modedeclaration:[], initmode:null, icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.ModeDeclarationGroup_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        addDependentStartup() {\r\n            const editItem = { functionItem: [], resourceRef: null, startupConfigRef: null}\r\n            const addObj = new Object(editItem)\r\n            this.element.dependent.push(addObj)\r\n            this.dependentStartupTab = this.element.dependent.length-1\r\n            EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n        },\r\n        clickDependentStartuptab() {\r\n            //console.log('clickDependentStartuptab')\r\n            this.isdeleteFunctionG = false\r\n            this.selectDelectFunctionGItem = []\r\n        },\r\n        changeDependentStartupTab() {\r\n            //console.log('changeDependentStartupTab' +this.dependentStartupTab)\r\n            if(this.element.dependent.length > 0) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.dependentStartupTab, this.dependentStartupTab)}, 300);\r\n            }\r\n        },\r\n        deleteDependentStartup(idx) {\r\n            console.log('deleteDependentStartup' + idx)\r\n            for(let i=0; i<this.element.dependent[idx].functionItem.length; i++){\r\n                var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+i+'-'+idx)\r\n                if(endLineCon != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/fgcontext-'+i+'-'+idx)\r\n                }\r\n                var endLinetarg = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+i+'-'+idx)\r\n                if(endLinetarg != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/fgtarget-'+i+'-'+idx)\r\n                }\r\n            }\r\n            var endLine, endR, endS\r\n            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+idx)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processresorce-'+idx)\r\n            }\r\n            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+idx)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processstartup-'+idx)\r\n            }\r\n            for(let i=idx+1; i<this.element.dependent.length; i++){\r\n                endR = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+i)\r\n                endS = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+i)\r\n                for(let n=0; n<this.element.dependent[i].functionItem.length; n++){\r\n                    var endC = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+n+'-'+i)\r\n                    if(endC != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/fgcontext-'+n+'-'+i)\r\n                        this.newLine(this.element.uuid+'/fgcontext-'+n+'-'+(i-1), this.element.uuid+'/processStarupC', endC)\r\n                    }\r\n                    var endT = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+n+'-'+i)\r\n                    if(endT != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/fgtarget-'+n+'-'+i)\r\n                        this.newLine(this.element.uuid+'/fgtarget-'+n+'-'+(i-1), this.element.uuid+'/processStarupC', endT)\r\n                    }\r\n                }\r\n                if (endR != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processresorce-'+i)\r\n                    this.newLine(this.element.uuid+'/processresorce-'+(i-1), this.element.uuid+'/processStarupC', endR)\r\n                }\r\n                if (endS != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/processstartup-'+i)\r\n                    this.newLine(this.element.uuid+'/processstartup-'+(i-1), this.element.uuid+'/processStarupC', endS)\r\n                }\r\n            }\r\n\r\n            this.element.dependent.splice(idx, 1)\r\n            this.changeDependentStartupTab()\r\n        },\r\n        isCheckFunctionG() {\r\n            if (this.isdeleteFunctionG == true) {\r\n                this.isdeleteFunctionG = false\r\n                this.selectDelectFunctionGItem = []\r\n            } else {\r\n                this.isdeleteFunctionG = true\r\n            }\r\n        },\r\n        deleteFunctionG() {\r\n            if (this.isdeleteFunctionG == true) {\r\n                for(let i=0; i<this.element.dependent[this.dependentStartupTab].functionItem.length; i++){\r\n                    var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+i+'-'+this.dependentStartupTab)\r\n                    if(endLineCon != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/fgcontext-'+i+'-'+this.dependentStartupTab)\r\n                    }\r\n                    var endLinetarg = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+i+'-'+this.dependentStartupTab)\r\n                    if(endLinetarg != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/fgtarget-'+i+'-'+this.dependentStartupTab)\r\n                    }\r\n                    if(endLineCon != undefined || endLinetarg != undefined) {\r\n                        this.changeLineFunc.push({contextMode:this.element.dependent[this.dependentStartupTab].functionItem[i].contextMode, targetMode:this.element.dependent[this.dependentStartupTab].functionItem[i].targetMode, endLineCon:endLineCon, endLineTarg:endLinetarg})\r\n                    }\r\n                }\r\n\r\n                this.element.dependent[this.dependentStartupTab].functionItem = this.element.dependent[this.dependentStartupTab].functionItem.filter(item => {\r\n                         return this.selectDelectFunctionGItem.indexOf(item) < 0 })\r\n\r\n                let idx = 0 \r\n                for(let n=0; n<this.element.dependent[this.dependentStartupTab].functionItem.length; n++) {\r\n                    let rigth= true\r\n                    while (rigth) {\r\n                        if (this.element.dependent[this.dependentStartupTab].functionItem[n].contextMode == this.changeLineFunc[idx].contextMode &&\r\n                            this.element.dependent[this.dependentStartupTab].functionItem[n].targetMode == this.changeLineFunc[idx].targetMode) {\r\n                                rigth = false\r\n                                idx--\r\n                        }\r\n                        idx++\r\n                    }\r\n                    console.log('escape')\r\n                    if (this.element.dependent[this.dependentStartupTab].functionItem[n].contextMode != null) {\r\n                        this.newLine(this.element.uuid+'/fgcontext-'+n+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.changeLineFunc[idx].endLineCon)\r\n                    }\r\n                    if (this.element.dependent[this.dependentStartupTab].functionItem[n].targetMode != null) {\r\n                        this.newLine(this.element.uuid+'/fgtarget-'+n+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.changeLineFunc[idx].endLineTarg)\r\n                    }\r\n                }\r\n\r\n                this.isdeleteFunctionG = false\r\n                this.selectDelectFunctionGItem = []\r\n                this.changeLineFunc = []\r\n            }\r\n        },\r\n        openFunctionG(idx) {\r\n            this.selContextMode = this.$store.getters.getModeDeclarationGP\r\n            this.selTargetMode = this.$store.getters.getModeDeclaration\r\n\r\n            if (this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode != null ) {\r\n                var endLineC = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+this.dependentStartupTab+'/'+idx)\r\n                if (endLineC == undefined) {\r\n                    endLineC = this.$store.getters.getMachinePath(this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode, 2)\r\n                }\r\n                this.editFunctionGItem.contextMode = { name :this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode, uuid: endLineC }\r\n            }\r\n            if (this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode != null) {\r\n                var endLineT = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+this.dependentStartupTab+'/'+idx)\r\n                if (endLineT == undefined) {\r\n                    endLineT = this.$store.getters.getModeDeclarationPath(this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode, 1)\r\n                }\r\n                this.editFunctionGItem.targetMode = { name :this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode, uuid: endLineT }\r\n            }\r\n        },\r\n        editFunctionG(idx) {\r\n            var endcontextMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgcontext-'+idx+'-'+this.dependentStartupTab)\r\n            if (endcontextMLine != undefined && this.editFunctionGItem.contextMode == null) {\r\n                this.deleteLine(this.element.uuid+'/fgcontext-'+idx+'-'+this.dependentStartupTab)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = null\r\n            } else if (endcontextMLine != undefined && endcontextMLine != this.editFunctionGItem.contextMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/fgcontext-'+idx+'-'+this.dependentStartupTab)\r\n                this.newLine(this.element.uuid+'/fgcontext-'+idx+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.contextMode.uuid)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = this.editFunctionGItem.contextMode.name\r\n            } else if(endcontextMLine == undefined && this.editFunctionGItem.contextMode != null) {\r\n                this.newLine(this.element.uuid+'/fgcontext-'+idx+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.contextMode.uuid)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].contextMode = this.editFunctionGItem.contextMode.name\r\n            }\r\n\r\n            var endtargetMLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/fgtarget-'+idx+'-'+this.dependentStartupTab)\r\n            if (endtargetMLine != undefined && this.editFunctionGItem.targetMode == null) {\r\n                this.deleteLine(this.element.uuid+'/fgtarget-'+idx+'-'+this.dependentStartupTab)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = null\r\n            } else if (endtargetMLine != undefined && endtargetMLine != this.editFunctionGItem.targetMode.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/fgtarget-'+idx+'-'+this.dependentStartupTab)\r\n                this.newLine(this.element.uuid+'/fgtarget-'+idx+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.targetMode.uuid)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = this.editFunctionGItem.targetMode.name\r\n            } else if (endtargetMLine == undefined && this.editFunctionGItem.targetMode != undefined) {\r\n                this.newLine(this.element.uuid+'/fgtarget-'+idx+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.targetMode.uuid)\r\n                this.element.dependent[this.dependentStartupTab].functionItem[idx].targetMode = this.editFunctionGItem.targetMode.name\r\n            }\r\n            \r\n            this.cancelFunctionG()\r\n        },\r\n        cancelFunctionG() {\r\n            this.editFunctionGItem = Object.assign({}, this.defaultFunctionGItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addFunctionG() {\r\n            var datacount\r\n            if(this.element.dependent[this.dependentStartupTab].functionItem == undefined) {\r\n                datacount = 0\r\n            }else {\r\n                datacount = this.element.dependent[this.dependentStartupTab].functionItem.length\r\n            }\r\n\r\n            if( this.editFunctionGItem.contextMode != null) {\r\n                this.newLine(this.element.uuid+'/fgcontext-'+datacount+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.contextMode.uuid)\r\n                this.editFunctionGItem.contextMode = this.editFunctionGItem.contextMode.name\r\n            }\r\n            if( this.editFunctionGItem.targetMode != null) {\r\n                this.newLine(this.element.uuid+'/fgtarget-'+datacount+'-'+this.dependentStartupTab, this.element.uuid+'/fgtable'+this.dependentStartupTab, this.editFunctionGItem.targetMode.uuid)\r\n                this.editFunctionGItem.targetMode = this.editFunctionGItem.targetMode.name\r\n            }\r\n            const addObj = Object.assign({}, this.editFunctionGItem)\r\n            this.element.dependent[this.dependentStartupTab].functionItem.push(addObj)\r\n            this.cancelFunctionG()\r\n        },\r\n        setContextModeSelect() {\r\n            if (this.isEditingContextMode == true) { \r\n                if (this.editFunctionGItem.contextMode != null && this.editFunctionGItem.contextMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editFunctionGItem.contextMode.uuid, element: constant.Machine_str} )\r\n                }\r\n                this.setContextMList()\r\n                this.isEditingContextMode = false\r\n            } else {\r\n                this.isEditingContextMode = true\r\n            }\r\n        },\r\n        setContextMList() {\r\n            this.selContextMode =  this.$store.getters.getModeDeclarationGP\r\n            console.log('setTargetMList'+this.selContextMode.length)\r\n            this.setactiveUUID()\r\n        },\r\n        clearContextModeRef() {\r\n            this.isEditingContextMode = true\r\n            this.editFunctionGItem.contextMode = null\r\n        },\r\n        setTargetModeSelect() {\r\n            if (this.isEditingTargetMode == true) { \r\n                if (this.editFunctionGItem.targetMode != null && this.editFunctionGItem.targetMode.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editFunctionGItem.targetMode.uuid, element: constant.ModeDeclarationGroup_str} )\r\n                }\r\n                this.setTargetMList()\r\n                this.isEditingTargetMode = false\r\n            } else {\r\n                this.isEditingTargetMode = true\r\n            }\r\n        },\r\n        setTargetMList() {\r\n            this.selTargetMode =  this.$store.getters.getModeDeclaration\r\n            console.log('setTargetMList'+this.selTargetMode.length)\r\n            this.setactiveUUID()\r\n        },\r\n        clearTargetModeRef() {\r\n            this.isEditingTargetMode = true\r\n            this.editFunctionGItem.targetMode = null\r\n        },\r\n\r\n\r\n        clearResourceG(item) {\r\n            item.resourceRef = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab)\r\n            }\r\n        },\r\n        setResourceGSelect(item) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getMachinePath(item.resourceRef, 1)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n            }\r\n        },\r\n        setResourceGList() {\r\n            this.selResourceG = this.$store.getters.getResourceGroup\r\n            this.setactiveUUID()\r\n        },\r\n        setResourceG(item, tab) {\r\n            if(tab.resourceRef != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/processresorce-'+this.dependentStartupTab, this.element.uuid+'/processresorce'+this.dependentStartupTab, item.uuid)\r\n                }\r\n                tab.resourceRef = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        clearStartupC(item) {\r\n            item.startupConfigRef = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab)\r\n            }\r\n        },\r\n        setStartupCSelect(item) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getStartupConfigPath(item.startupConfigRef)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.StartupConfig_str} )\r\n            }\r\n        },\r\n        setStartupCList() {\r\n            this.selStartupC = this.$store.getters.getStartupConfig\r\n            this.setactiveUUID()\r\n        },\r\n        setStartupC(item, tab) {\r\n            if(tab.startupConfigRef != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab)\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processstartup-'+this.dependentStartupTab, this.element.uuid+'/processstartup'+this.dependentStartupTab, item.uuid)\r\n                tab.startupConfigRef = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newStartupC() {\r\n            this.$store.commit('addElementStartupConfig', {\r\n                name: this.$store.getters.getNameStartupConfig, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                configname: '', policy:null, priority:'', entertimeout:'', exittimeout:''\r\n            })\r\n            EventBus.$emit('add-element', constant.StartupConfig_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editProcess', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}