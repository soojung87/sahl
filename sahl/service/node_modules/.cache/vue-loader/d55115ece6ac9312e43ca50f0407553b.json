{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\navigatorbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\navigatorbar.vue","mtime":1630039389862},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovL2ltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnLi4vbWFpbicNCmltcG9ydCBjb25zdGFudCBmcm9tICIuLi9zdG9yZS9jb25zdGFudHMuanMiDQoNCg0KZXhwb3J0IGRlZmF1bHQoew0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIExTT1BQcm9qZWN0ICgpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5MU09QUHJvamVjdA0KICAgICAgICB9LA0KICAgICAgICBvcGVuUHJvamVjdEluZGV4ICgpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5vcGVuUHJvamVjdEluZGV4DQogICAgICAgIH0sDQogICAgICAgIG5hdmlnYXRvckxpc3QgKCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm5hdmlnYXRvckxpc3QNCiAgICAgICAgfSwNCiAgICAgICAgX3RyZWV2aWV3aXRlbXMgKCkgew0KICAgICAgICAgICAgY29uc3QgcmVwbGFjZUNoaWxkcmVuID0gKG9iaixwYXJlbnQpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjbG9uZSA9IE9iamVjdC5hc3NpZ24oe30sb2JqKQ0KICAgICAgICAgICAgICAgIGRlbGV0ZSBjbG9uZS5jaGlsZHJlbg0KICAgICAgICAgICAgICAgIGlmIChwYXJlbnQpIGNsb25lLnBhcmVudCA9IHBhcmVudA0KICAgICAgICAgICAgICAgIHJldHVybiBjbG9uZQ0KICAgICAgICAgICAgfQ0KICAgICAgIA0KICAgICAgICAgICAgY29uc3QgYWRkSXRlbXMgPSAoYXJyLHBhcmVudCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gYXJyLnJlZHVjZSgoYWNjLHgpPT57DQogICAgICAgICAgICAgICAgICAgIGFjYy5wdXNoKHJlcGxhY2VDaGlsZHJlbih4LHBhcmVudCkpDQogICAgICAgICAgICAgICAgICAgIGlmICh4LmNoaWxkcmVuKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhY2MucHVzaChhZGRJdGVtcyh4LmNoaWxkcmVuLCB4LnV1aWQpKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2MNCiAgICAgICAgICAgICAgICB9LFtdKQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW1zLmZsYXQoKQ0KICAgICAgICAgICAgfQ0KICAgICAgIA0KICAgICAgICAgICAgcmV0dXJuIGFkZEl0ZW1zKHRoaXMuJHN0b3JlLnN0YXRlLm5hdmlnYXRvckxpc3RbMF0uY2hpbGRyZW4pLnJlZHVjZSgoYWNjLHgpPT57DQogICAgICAgICAgICAgICAgYWNjW3gudXVpZF09eA0KICAgICAgICAgICAgICAgIHJldHVybiBhY2MNCiAgICAgICAgICAgIH0se30pDQogICAgICAgIH0sDQoNCiAgICB9LA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBzaG93TWVudTogZmFsc2UsDQogICAgICAgICAgICB4OiAwLA0KICAgICAgICAgICAgeTogMCwNCiAgICAgICAgICAgIGlzUHJvamVjdG1lbnU6IGZhbHNlLA0KICAgICAgICAgICAgYWN0aXZlbm9kZTogW10sDQogICAgICAgICAgICBtZW51aXRlbXM6IFsNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnTmV3JywgICAgbWVudUFjdGlvbjogYWN0aW9uID0+IHsgdGhpcy5uZXdFbGVtZW50KGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdPcGVuJywgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wZW4oYWN0aW9uKSB9IH0sDQogICAgICAgICAgICAgICAgeyB0aXRsZTogJ1JlbmFtZScsIG1lbnVBY3Rpb246IGFjdGlvbiA9PiB7IHRoaXMubmV3T3B0aW9uKGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdEZWxldGUnLCBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLmRlbGV0ZUVsZW1lbnQoYWN0aW9uKSB9IH0sDQogICAgICAgICAgICAgICAgeyB0aXRsZTogJ0ltcG9ydCcsIG1lbnVBY3Rpb246IGFjdGlvbiA9PiB7IHRoaXMubmV3T3B0aW9uKGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdDdXQnLCAgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wdGlvbihhY3Rpb24pIH0gfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnQ29weScsICAgbWVudUFjdGlvbjogYWN0aW9uID0+IHsgdGhpcy5uZXdPcHRpb24oYWN0aW9uKSB9IH0sDQogICAgICAgICAgICAgICAgeyB0aXRsZTogJ1Bhc3RlJywgIG1lbnVBY3Rpb246IGFjdGlvbiA9PiB7IHRoaXMubmV3T3B0aW9uKGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdTYXZlJywgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLnNhdmVFbGVtZW50KGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIG1lbnVQcm9qZWN0aXRlbXM6IFsNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnTmV3IFByb2plY3QnLCAgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wdGlvbihhY3Rpb24pIH0gfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnT3BlbiBQcm9qZWN0JywgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wdGlvbihhY3Rpb24pIH0gfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnUmVuYW1lIFByb2plY3QnLCBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wdGlvbihhY3Rpb24pIH0gfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnRGVsZXRlIFByb2plY3QnLCAgbWVudUFjdGlvbjogYWN0aW9uID0+IHsgdGhpcy5uZXdPcHRpb24oYWN0aW9uKSB9IH0sDQogICAgICAgICAgICAgICAgeyB0aXRsZTogJ0ltcG9ydCBQcm9qZWN0JywgIG1lbnVBY3Rpb246IGFjdGlvbiA9PiB7IHRoaXMubmV3T3B0aW9uKGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgICAgIHsgdGl0bGU6ICdDdXQnLCAgICAgICAgICAgICBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLm5ld09wdGlvbihhY3Rpb24pIH0gfSwNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiAnQ29weScsICAgICAgICAgICAgbWVudUFjdGlvbjogYWN0aW9uID0+IHsgdGhpcy5uZXdPcHRpb24oYWN0aW9uKSB9IH0sDQogICAgICAgICAgICAgICAgeyB0aXRsZTogJ1Bhc3RlJywgICAgICAgICAgIG1lbnVBY3Rpb246IGFjdGlvbiA9PiB7IHRoaXMubmV3T3B0aW9uKGFjdGlvbikgfSB9LA0KICAgICAgICAgICAgXSwNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBzaG93IChlLCBpc3Byb2plY3RtZW51KSB7DQogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCkNCg0KICAgICAgICAgICAgdGhpcy5pc1Byb2plY3RtZW51ID0gaXNwcm9qZWN0bWVudQ0KICAgICAgICAgICAgdGhpcy5zaG93TWVudSA9IGZhbHNlDQogICAgICAgICAgICB0aGlzLnggPSBlLmNsaWVudFgNCiAgICAgICAgICAgIHRoaXMueSA9IGUuY2xpZW50WQ0KICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd01lbnUgPSB0cnVlDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBuZXdPcHRpb24gKCkgew0KICAgICAgICAgICAgLy9hbGVydCgndGhpcy5zZWxlY3RJdGVtWzBdJykNCiAgICAgICAgfSwNCiAgICAgICAgbmV3RWxlbWVudCAoKSB7DQogICAgICAgICAgICBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlNlcnZpY2VJbnRlcmZhY2Vfc3RyKSB7DQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdBZGRFbGVtZW50U2VydmljZScsIHsNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogY29uc3RhbnQuU2VydmljZUludGVyZmFjZV9zdHIgKyAnXycgK3RoaXMuJHN0b3JlLnN0YXRlLkxTT1BQcm9qZWN0W3RoaXMuJHN0b3JlLnN0YXRlLm9wZW5Qcm9qZWN0SW5kZXhdLlNlcnZpY2UuU2VydmljZUludGVyZmFjZS5sZW5ndGgsIA0KICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOm51bGwsIG5hbWVzcGFjZTpudWxsLCBldmVudHM6bnVsbCwgZmllbGRzOm51bGwsIG1ldGhvZHM6bnVsbCANCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkZWxldGVFbGVtZW50ICgpIHsNCiAgICAgICAgICAgIHZhciB0cmVlaXRlbSA9IE9iamVjdC52YWx1ZXModGhpcy5fdHJlZXZpZXdpdGVtcykNCiAgICAgICAgICAgIHZhciBhcnJlbGVtZW50ID0gdHJlZWl0ZW0uZmluZChkYXRhID0+ICBkYXRhLnV1aWQgPT09IHRoaXMuYWN0aXZlbm9kZVswXSkNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlRWxlbWVudCcsIHtwYXJlbnQ6YXJyZWxlbWVudC5wYXJlbnQsIHV1aWQ6dGhpcy5hY3RpdmVub2RlWzBdfSApDQogICAgICAgIH0sDQogICAgICAgIHNhdmVFbGVtZW50ICgpIHsNCiAgICAgICAgICAgIHZhciB0cmVlaXRlbSA9IE9iamVjdC52YWx1ZXModGhpcy5fdHJlZXZpZXdpdGVtcykNCiAgICAgICAgICAgIHZhciBhcnJlbGVtZW50ID0gdHJlZWl0ZW0uZmluZChkYXRhID0+ICBkYXRhLnV1aWQgPT09IHRoaXMuYWN0aXZlbm9kZVswXSkNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlRWxlbWVudCcsIHtwYXJlbnQ6YXJyZWxlbWVudC5wYXJlbnQsIHV1aWQ6dGhpcy5hY3RpdmVub2RlWzBdfSApDQogICAgICAgIH0sDQogICAgICAgIGFjdGl2ZU5vZGUoKSB7DQogICAgICAgICAgICAvL2FsZXJ0KG5vZGUpDQogICAgICAgIH0sDQogICAgfSwNCn0pDQo="},{"version":3,"sources":["navigatorbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navigatorbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-icon class=\"subtitle-1 green\" style=\"margin:0 5px 0 15px;\" dark >mdi-view-dashboard</v-icon>\r\n                    SAHL\r\n        <v-divider></v-divider>\r\n        <v-list dense>\r\n            <v-list-group v-for=\"(item,idx) in navigatorList\" :key=\"idx\" v-model=\"item.active\"\r\n                        prepend-icon=\"mdi-alpha-p-circle-outline\" no-action sub-group> <!--  sub-group 빼면 리스트가 하나씩만 보인다-->\r\n                <template v-slot:activator>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.name\" style=\"fontsize:20px\" @contextmenu=\"show($event, true)\"></v-list-item-title>\r\n                    </v-list-item-content>\r\n                </template> \r\n                <v-card flat @contextmenu=\"show($event,false)\">\r\n                    <v-treeview :items=\"item.children\" activatable item-key=\"uuid\" :active.sync=\"activenode\" dense @update:open=\"openNode\" @update:active=\"activeNode\" class=\"caption\">\r\n                        <template v-slot:prepend=\"{ item, open }\">\r\n                            <v-icon v-if=\"item.name=='Data Types' || item.name=='Service' || item.name=='Service Interfaces' || item.name=='SomeIP Events'\r\n                                        || item.name=='Service Instances' || item.name=='Errors' || item.name=='Adaptive Application' \r\n                                        || item.name=='Machines' || item.name=='Platform'\" >\r\n                                        {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                            </v-icon>\r\n                            <v-icon v-else-if=\"item.children\">\r\n                                {{ open ? 'mdi-alpha-e-circle' : 'mdi-alpha-e-circle-outline' }}\r\n                            </v-icon>\r\n                            <v-icon v-else>mdi-clipboard-outline</v-icon>\r\n                        </template>\r\n                    </v-treeview>\r\n                </v-card>\r\n            </v-list-group>\r\n        </v-list>\r\n        <v-menu v-model=\"showMenu\" :position-x=\"x\" :position-y=\"y\" absolute offset-y>\r\n            <v-list v-if=\"isProjectmenu\" dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuProjectitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import { EventBus } from '../main'\r\nimport constant from \"../store/constants.js\"\r\n\r\n\r\nexport default({\r\n    computed: {\r\n        LSOPProject () {\r\n            return this.$store.state.LSOPProject\r\n        },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n        _treeviewitems () {\r\n            const replaceChildren = (obj,parent) => {\r\n                const clone = Object.assign({},obj)\r\n                delete clone.children\r\n                if (parent) clone.parent = parent\r\n                return clone\r\n            }\r\n       \r\n            const addItems = (arr,parent) => {\r\n                const items = arr.reduce((acc,x)=>{\r\n                    acc.push(replaceChildren(x,parent))\r\n                    if (x.children) {\r\n                        acc.push(addItems(x.children, x.uuid))\r\n                    }\r\n                    return acc\r\n                },[])\r\n\r\n                return items.flat()\r\n            }\r\n       \r\n            return addItems(this.$store.state.navigatorList[0].children).reduce((acc,x)=>{\r\n                acc[x.uuid]=x\r\n                return acc\r\n            },{})\r\n        },\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            showMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n            isProjectmenu: false,\r\n            activenode: [],\r\n            menuitems: [\r\n                { title: 'New',    menuAction: action => { this.newElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.newOpen(action) } },\r\n                { title: 'Rename', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete', menuAction: action => { this.deleteElement(action) } },\r\n                { title: 'Import', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Cut',    menuAction: action => { this.newOption(action) } },\r\n                { title: 'Copy',   menuAction: action => { this.newOption(action) } },\r\n                { title: 'Paste',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Save',   menuAction: action => { this.saveElement(action) } },\r\n            ],\r\n            menuProjectitems: [\r\n                { title: 'New Project',    menuAction: action => { this.newOption(action) } },\r\n                { title: 'Open Project',   menuAction: action => { this.newOption(action) } },\r\n                { title: 'Rename Project', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Import Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Cut',             menuAction: action => { this.newOption(action) } },\r\n                { title: 'Copy',            menuAction: action => { this.newOption(action) } },\r\n                { title: 'Paste',           menuAction: action => { this.newOption(action) } },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        show (e, isprojectmenu) {\r\n            e.preventDefault()\r\n\r\n            this.isProjectmenu = isprojectmenu\r\n            this.showMenu = false\r\n            this.x = e.clientX\r\n            this.y = e.clientY\r\n            this.$nextTick(() => {\r\n                this.showMenu = true\r\n            })\r\n        },\r\n        newOption () {\r\n            //alert('this.selectItem[0]')\r\n        },\r\n        newElement () {\r\n            if (this.activenode[0] == constant.ServiceInterface_str) {\r\n                this.$store.commit('AddElementService', {\r\n                    name: constant.ServiceInterface_str + '_' +this.$store.state.LSOPProject[this.$store.state.openProjectIndex].Service.ServiceInterface.length, \r\n                    version:null, namespace:null, events:null, fields:null, methods:null \r\n                })\r\n            }\r\n        },\r\n        deleteElement () {\r\n            var treeitem = Object.values(this._treeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n        saveElement () {\r\n            var treeitem = Object.values(this._treeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n        activeNode() {\r\n            //alert(node)\r\n        },\r\n    },\r\n})\r\n</script>\r\n"]}]}