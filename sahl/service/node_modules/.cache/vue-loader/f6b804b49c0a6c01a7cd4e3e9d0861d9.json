{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\SomeIPService.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\SomeIPService.vue","mtime":1659665914898},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SomeIPService.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0ZA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"SomeIPService.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showSomeIPService\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>SomeIP Service Interface Deployment</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>SomeIP Service Interface Deployment</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-show=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputSomeIPServiceName' @click=\"clickSomeIPServiceName()\" outlined dense></v-text-field>\r\n                            <v-row>\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.service\" readonly @click=\"setServiceSelect()\" clearable @click:clear='clearService()' label=\"Service Interface Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/service'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setServiceList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selService\" :key=\"i\" link @click=\"setService(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newService\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-text-field v-model=\"element.id\" label=\"Service Interface ID\" placeholder=\"Int\" style=\"height: 45px;margin:10px 0 0 0;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-row>\r\n                                <v-col col=\"6\">\r\n                                <v-text-field v-model=\"element.majversion\" label=\"Major Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col col=\"6\">\r\n                                <v-text-field v-model=\"element.minversion\" label=\"Minor Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/event'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showEventG\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isEventGOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Event Groups\r\n                                    <v-btn v-if=\"isEventGOpenClose\" @click=\"addEventG()\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-plus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isEventGOpenClose\">\r\n                                    <v-tabs v-model='eventGTab' height=\"30px\" show-arrows @change=\"changeEventGTab()\">\r\n                                        <v-tab v-for=\"(tab, idx) in element.eventG\" :key=\"idx\" @click=\"clickEventGtab()\"> \r\n                                            {{tab.name}}\r\n                                            <v-btn text x-small @click=\"deleteEventG(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                                    </v-tabs>\r\n                                    <v-tabs-items v-model=\"eventGTab\">\r\n                                        <v-tab-item v-for=\"(tab, idx) in element.eventG\" :key=\"idx\">\r\n                                            <v-card flat>\r\n                                                <v-card-text>\r\n                                                    <v-text-field v-model=\"tab.name\" :rules=\"rules.name\" label=\"Name\" @input=\"inputEventGName(tab.name)\" @click=\"clickEventGName(tab.name)\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    <v-text-field v-model=\"tab.idG\" label=\"Group Id\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/eventtab'+tab.id\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showEvent\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isEventOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Event Reference\r\n                                                            <v-btn @click=\"isCheckEvent\" text x-small color=\"indigo\" v-if=\"isEventOpenClose\">\r\n                                                                <v-icon>mdi-check</v-icon>\r\n                                                            </v-btn>\r\n                                                            <v-btn v-if=\"isEventOpenClose && isdeleteEvent\" @click=\"deleteEvent\" text x-small color=\"indigo\">\r\n                                                                <v-icon>mdi-minus</v-icon>\r\n                                                            </v-btn>\r\n                                                        </div>\r\n                                                        <v-card-text v-show=\"isEventOpenClose\">\r\n                                                            <v-data-table v-model=\"selectDelectEvent\" :headers=\"headerEvent\" :items=\"tab.event\" :items-per-page='20'\r\n                                                                    :show-select=\"isdeleteEvent\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                                </template>\r\n                                                                <template v-if=\"!isdeleteEvent\" v-slot:body=\"{ items, headers }\">\r\n                                                                    <tbody>\r\n                                                                        <tr v-for=\"(item,num) in items\" :key=\"num\">\r\n                                                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openEvent(num)\" @cancel=\"editEventItem(num)\" @save=\"cancelEvent\" large >\r\n                                                                                    {{item[header.value]}}\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-model='editEvent.event' label='Event Reference' :items='selEvent' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingEvent\" clearable @click=\"setEventSelect()\" \r\n                                                                                            @click:clear='clearEvent' @blur=\"isEditingEvent=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <th colspan=\"3\">\r\n                                                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addEvent()\" @save=\"cancelEvent\"> \r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-model='editEvent.event' label='Event Reference' :items='selEvent' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingEvent\" clearable @click=\"setEventSelect()\" \r\n                                                                                            @click:clear='clearEvent' @blur=\"isEditingEvent=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </th>\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                </template>\r\n                                                            </v-data-table>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                </v-card-text>\r\n                                            </v-card>\r\n                                        </v-tab-item>\r\n                                    </v-tabs-items>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/serviceEventD'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showEventD\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isEventDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Event Deployments\r\n                                    <v-btn @click=\"isCheckEventD\" text x-small color=\"indigo\" v-if=\"isEventDOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isEventDOpenClose && isdeleteEventD\" @click=\"deleteEventD\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isEventDOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectEventD\" :headers=\"headerEventD\" :items=\"element.eventD\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteEventD\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteEventD\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openEventD(idx)\" @cancel=\"editEventDItem(idx)\" @save=\"cancelEventD\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editEventD.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editEventD.event' label='Event Reference' :items='selVariableData' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingVariableData\" clearable @click=\"setVariableDataSelect()\" \r\n                                                                            @click:clear='clearVariableData' @blur=\"isEditingVariableData=true\" outlined dense style=\"height: 45px;\">\r\n                                                                </v-autocomplete>\r\n                                                                <v-text-field v-model=\"editEventD.idE\" label=\"Event ID\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editEventD.maxlength\" label=\"Maximum Segment Length\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editEventD.time\" label=\"Separation Time\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-select v-model=\"editEventD.serializer\" clearable :items=\"selectSerializer\" label=\"Serializer\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-select v-model=\"editEventD.protocal\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addEventD()\" @save=\"cancelEventD\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editEventD.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editEventD.event' label='Event Reference' :items='selVariableData' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingVariableData\" clearable @click=\"setVariableDataSelect()\" \r\n                                                                            @click:clear='clearVariableData' @blur=\"isEditingVariableData=true\" outlined dense style=\"height: 45px;\">\r\n                                                                </v-autocomplete>\r\n                                                                <v-text-field v-model=\"editEventD.idE\" label=\"Event ID\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editEventD.maxlength\" label=\"Maximum Segment Length\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editEventD.time\" label=\"Separation Time\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-select v-model=\"editEventD.serializer\" clearable :items=\"selectSerializer\" label=\"Serializer\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-select v-model=\"editEventD.protocal\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/serviceMethodD'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showMethodD\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isMethodDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Method Deployments\r\n                                    <v-btn @click=\"isCheckMethodD\" text x-small color=\"indigo\" v-if=\"isMethodDOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isMethodDOpenClose && isdeleteMethodD\" @click=\"deleteMethodD\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isMethodDOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectMethodD\" :headers=\"headerMethodD\" :items=\"element.methodD\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteMethodD\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteMethodD\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openMethodD(idx)\" @cancel=\"editMethodDItem(idx)\" @save=\"cancelMethodD\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editMethodD.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editMethodD.method' label='Method Reference' :items='selClientServer' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingClientServer\" clearable @click=\"setClientServerSelect()\" \r\n                                                                            @click:clear='clearClientServer' @blur=\"isEditingClientServer=true\" outlined dense style=\"height: 45px;\">\r\n                                                                </v-autocomplete>\r\n                                                                <v-text-field v-model=\"editMethodD.idM\" label=\"Method ID\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.maxrequest\" label=\"Maximum Segment Length Request\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.maxresponse\" label=\"Maximum Segment Length Response\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.timerequest\" label=\"Separation Time Request\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.timeresponse\" label=\"Separation Time Response\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-select v-model=\"editMethodD.protocal\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addMethodD()\" @save=\"cancelMethodD\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editMethodD.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editMethodD.method' label='Method Reference' :items='selClientServer' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingClientServer\" clearable @click=\"setClientServerSelect()\" \r\n                                                                            @click:clear='clearClientServer' @blur=\"isEditingClientServer=true\" outlined dense style=\"height: 45px;\">\r\n                                                                </v-autocomplete>\r\n                                                                <v-text-field v-model=\"editMethodD.idM\" label=\"Method ID\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.maxrequest\" label=\"Maximum Segment Length Request\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.maxresponse\" label=\"Maximum Segment Length Response\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.timerequest\" label=\"Separation Time Request\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editMethodD.timeresponse\" label=\"Separation Time Response\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-select v-model=\"editMethodD.protocal\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/field'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showFieldD\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isFieldDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Field Deployments \r\n                                    <v-btn v-if=\"isFieldDOpenClose\" @click=\"addField\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-plus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isFieldDOpenClose\">\r\n                                    <v-tabs v-model='fieldTab' height=\"30px\" show-arrows @change=\"changeFieldTab()\">\r\n                                        <v-tab v-for=\"(tab, idx) in element.fieldD\" :key=\"idx\" @click=\"clickFieldtab()\" > \r\n                                            {{tab.name}}\r\n                                            <v-btn text x-small @click=\"deleteField(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                                    </v-tabs>\r\n                                    <v-tabs-items v-model=\"fieldTab\">\r\n                                        <v-tab-item v-for=\"(tab, idx) in element.fieldD\" :key=\"idx\">\r\n                                            <v-card flat>\r\n                                                <v-card-text>\r\n                                                    <v-text-field v-model=\"tab.name\" @input=\"inputFieldName(tab.name)\" @click=\"clickFieldName(tab.name)\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    <v-row style=\"height: 70px\">\r\n                                                        <v-col cols=\"10\">\r\n                                                            <v-text-field v-model=\"tab.field\" readonly @click=\"setFieldSelect()\" clearable @click:clear='clearField()' label=\"Field Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        </v-col>\r\n                                                        <v-col cols=\"2\">\r\n                                                            <v-menu>\r\n                                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/fieldtab'+tab.id\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setFieldList()\">\r\n                                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                    </v-btn>\r\n                                                                </template>\r\n                                                                <v-list >\r\n                                                                    <v-list-item v-for=\"(item, i) in selField\" :key=\"i\" link @click=\"setServiceRef(item)\">\r\n                                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                    <v-list-item v-if=\"selField.length == 0\">\r\n                                                                        <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                </v-list>\r\n                                                            </v-menu>\r\n                                                        </v-col>\r\n                                                    </v-row>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showGet\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isGetOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Get\r\n                                                        </div>\r\n                                                        <v-card-text v-if=\"isGetOpenClose\">\r\n                                                            <v-text-field v-model=\"tab.getname\" @input=\"inputFieldGetName(tab.getname)\" @click=\"clickFieldGetName(tab.getname)\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\"  style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.getid\" label=\"Method ID\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.getmaxreq\" label=\"Maximum Segment Length Request\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.getmaxres\" label=\"Maximum Segment Length Response\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.gettimereq\" label=\"Separation Time Request\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.gettimeres\" label=\"Separation Time Response\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-select v-model=\"tab.getproto\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showSet\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isSetOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Set\r\n                                                        </div>\r\n                                                        <v-card-text v-if=\"isSetOpenClose\">\r\n                                                            <v-text-field v-model=\"tab.setname\" @input=\"inputFieldSetName(tab.setname)\" @click=\"clickFieldSetName(tab.setname)\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.setid\" label=\"Method ID\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.setmaxreq\" label=\"Maximum Segment Length Request\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.setmaxres\" label=\"Maximum Segment Length Response\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.settimereq\" label=\"Separation Time Request\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.settimeres\" label=\"Separation Time Response\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-select v-model=\"tab.setproto\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showNotifier\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isNotifierOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Notifier\r\n                                                        </div>\r\n                                                        <v-card-text v-if=\"isNotifierOpenClose\">\r\n                                                            <v-text-field v-model=\"tab.notname\" @input=\"inputFieldNotName(tab.notname)\" @click=\"clickFieldNotName(tab.notname)\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.notid\" label=\"Event ID\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.notmax\" label=\"Maximum Segment Length\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-text-field v-model=\"tab.nottime\" label=\"Separation Time\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            <v-select v-model=\"tab.notserial\" clearable :items=\"selectSerializer\" label=\"Serializer\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            <v-select v-model=\"tab.notproto\" clearable :items=\"selectProtocal\" label=\"Transport Protocal\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                </v-card-text>\r\n                                            </v-card>\r\n                                        </v-tab-item>\r\n                                    </v-tabs-items>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-show=\"(!iselementOpenClose && zoomvalue > $setZoominElement) || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                        if(this.iselementOpenClose && this.location == 1) {\r\n                            if(this.element.fieldD.length > 0) {\r\n                                if (this.isFieldDOpenClose) {\r\n                                    EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, this.fieldTab, this.element.fieldD[this.fieldTab].id)\r\n                                } else {\r\n                                    EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, null)\r\n                                }\r\n                            }\r\n                            if(this.element.eventG.length > 0) {\r\n                                if (this.isEventGOpenClose) {\r\n                                    EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, this.eventGTab, this.element.eventG[this.eventGTab].id)\r\n                                } else {\r\n                                    EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, null)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            selService: this.$store.getters.getServiceInterface,\r\n            isEventGOpenClose: true,\r\n            isEventDOpenClose: true,\r\n            isMethodDOpenClose: true,\r\n            isFieldDOpenClose: true,\r\n\r\n            eventGTab: null,\r\n            isEventOpenClose: true,\r\n            isdeleteEvent: false,\r\n            selectDelectEvent: [],\r\n            deleteEventLine: [],\r\n            headerEvent: [\r\n                { text: 'Event Ref', sortable: false, value: 'event' },\r\n            ],\r\n            editEvent: { event: null, id: ''},\r\n            isEditingEvent: true,\r\n            selEvent: this.$store.getters.getSomeIPEventDeployment,\r\n\r\n            isdeleteEventD: false,\r\n            selVariableData: this.$store.getters.getVariableDataPrototype,\r\n            selectDelectEventD: [],\r\n            headerEventD: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Event Ref', sortable: false, value: 'event' },\r\n                { text: 'Event ID', sortable: false, value: 'idE' },\r\n                { text: 'Maximum Segment Length', sortable: false, width: '180px', value: 'maxlength' },\r\n                { text: 'Separation Time', sortable: false, width: '130px', value: 'time' },\r\n                { text: 'Serializer', sortable: false, value: 'serializer' },\r\n                { text: 'Transport Protocal', sortable: false, width: '140px', value: 'protocal' },\r\n            ],\r\n            editEventD: { name:'', event: null, idE:'', maxlength:'', time:'', serializer:null, protocal:null, id: ''},\r\n            defaultEventD: { name:'', event: null, idE:'', maxlength:'', time:'', serializer:null, protocal:null, id: '' },\r\n            deleteEventDLine : [],\r\n            isEditingVariableData: true,\r\n            selectSerializer: ['SOMEIP', 'SIGNAL-BASED'],\r\n            selectProtocal: ['UDP', 'TCP',],\r\n\r\n            isdeleteMethodD: false,\r\n            selClientServer: this.$store.getters.getClientServer,\r\n            selectDelectMethodD: [],\r\n            headerMethodD: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Method Ref', sortable: false, value: 'method' },\r\n                { text: 'Method ID', sortable: false, value: 'idM' },\r\n                { text: 'Maximum Segment Length Request', sortable: false, width: '230px', value: 'maxrequest' },\r\n                { text: 'Maximum Segment Length Response', sortable: false, width: '240px', value: 'maxresponse' },\r\n                { text: 'Separation Time Request', sortable: false, width: '180px', value: 'timerequest' },\r\n                { text: 'Separation Time Response', sortable: false, width: '180px', value: 'timeresponse' },\r\n                { text: 'Transport Protocal', sortable: false, width: '140px', value: 'protocal' },\r\n            ],\r\n            editMethodD: { name:'', method: null, idM:'', maxrequest:'', maxresponse:'', timerequest:'', timeresponse:'', protocal:null, id: '' },\r\n            defaultMethodD: {name:'', method: null, idM:'', maxrequest:'', maxresponse:'', timerequest:'', timeresponse:'', protocal:null, id: '' },\r\n            deleteMethodDLine: [],\r\n            isEditingClientServer: true,\r\n\r\n            fieldTab: null,\r\n            selField: this.$store.getters.getField,\r\n            isGetOpenClose: true,\r\n            isSetOpenClose: true,\r\n            isNotifierOpenClose: true,\r\n\r\n            beforeField: '',\r\n            beforeGet: '',\r\n            beforeSet: '',\r\n            beforeNoti: '',\r\n            beforeEventG: '',\r\n            beforeName: '',\r\n            beforePath: ''\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.beforePath = this.element.path\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,  \r\n                                                        changeName: 'Path', beforename: this.beforePath} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showSomeIPService () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                if(this.iselementOpenClose && this.location == 1) {\r\n                    if(this.element.fieldD.length > 0) {\r\n                        if (this.isFieldDOpenClose) {\r\n                            EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, this.fieldTab, this.element.fieldD[this.fieldTab].id)\r\n                        } else {\r\n                            EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, null)\r\n                        }\r\n                    }\r\n                    if(this.element.eventG.length > 0) {\r\n                        if (this.isEventGOpenClose) {\r\n                            EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, this.eventGTab, this.element.eventG[this.eventGTab].id)\r\n                        } else {\r\n                            EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, null)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        showEventG() {\r\n            this.isEventGOpenClose = this.isEventGOpenClose ? false : true\r\n            if(this.element.eventG.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isEventGOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, this.eventGTab, this.element.eventG[this.eventGTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }\r\n        },\r\n        showEvent() {\r\n            this.isEventOpenClose = this.isEventOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showEventD() {\r\n            this.isEventDOpenClose = this.isEventDOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showMethodD() {\r\n            this.isMethodDOpenClose = this.isMethodDOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showFieldD() {\r\n            this.isFieldDOpenClose = this.isFieldDOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            if(this.element.fieldD.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isFieldDOpenClose ) {\r\n                        EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, this.fieldTab, this.element.fieldD[this.fieldTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }\r\n        },\r\n        showGet() {\r\n            this.isGetOpenClose = this.isGetOpenClose ? false : true\r\n        },\r\n        showSet() {\r\n            this.isSetOpenClose = this.isSetOpenClose ? false : true\r\n        },\r\n        showNotifier() {\r\n            this.isNotifierOpenClose = this.isNotifierOpenClose ? false : true\r\n        },\r\n\r\n        clickSomeIPServiceName() {\r\n            this.beforeName = this.element.name\r\n        },\r\n        inputSomeIPServiceName() {\r\n            this.$store.commit('editSomeIPService', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name, \r\n                                                        changeName: 'Name', pathLength:this.element.path.split('/').length, beforename: this.beforeName} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n            this.beforeName = this.element.name\r\n        },\r\n        clickEventGName(name) {\r\n            this.beforeEventG = name\r\n        },\r\n        inputEventGName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'EventG', listname: name, beforename: this.beforeEventG} )\r\n            this.beforeEventG = name\r\n        },\r\n\r\n        addEventG() {\r\n            const editItem = {name: '', idG: '', event: [], id: ''}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'Event Group_' + n++;\r\n                res = this.element.eventG.some(ele => ele.name === addObj.name)\r\n            }\r\n            addObj.id = n\r\n            this.element.eventG.push(addObj)\r\n            this.eventGTab = this.element.eventG.length-1\r\n            if(this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, null)\r\n            }\r\n        },\r\n        clickEventGtab() {\r\n            this.isdeleteEvent = false\r\n            this.selectDelectEvent = []\r\n        },\r\n        changeEventGTab() {\r\n            if(this.element.eventG.length > 0 && this.location == 1) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', 'event', this.element.uuid, this.eventGTab, this.element.eventG[this.eventGTab].id)}, 300);\r\n            }\r\n        },\r\n        deleteEventG(idx) {\r\n            this.$store.commit('deleteRefTable', {deleteName:'eventG', deleteTab: true, tabName: this.element.eventG[idx].name, path: this.element.path, name: this.element.name})\r\n            for(let i=0; i<this.element.eventG[idx].event.length; i++){\r\n                var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/event-'+i+'-'+idx)\r\n                if(endLineCon != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/event-'+i+'-'+idx)\r\n                }\r\n            }\r\n            for(let i=idx+1; i<this.element.eventG.length; i++){\r\n                for(let n=0; n<this.element.eventG[i].event.length; n++){\r\n                    var endC = this.$store.getters.getChangeEndLine(this.element.uuid+'/event-'+n+'-'+i)\r\n                    if(endC != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/event-'+n+'-'+i)\r\n                        this.newLine(this.element.uuid+'/event-'+n+'-'+(i-1), this.element.uuid+'/event', endC)\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.element.eventG.splice(idx, 1)\r\n            this.changeEventGTab()\r\n        },\r\n        isCheckEvent() {\r\n            if (this.isdeleteEvent == true) {\r\n                this.isdeleteEvent = false\r\n                this.selectDelectEvent = []\r\n            } else {\r\n                this.isdeleteEvent = true\r\n            }\r\n        },\r\n        deleteEvent() {\r\n            console.log(this.selectDelectEvent)\r\n            if (this.isdeleteEvent == true) {\r\n                for(let i=0; i<this.element.eventG[this.eventGTab].event.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/event-'+i+'-'+this.eventGTab)\r\n                    if(endLine != undefined) {\r\n                        this.deleteEventLine.push({id: this.element.eventG[this.eventGTab].event[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/event-'+i+'-'+this.eventGTab)\r\n                    }\r\n                }\r\n\r\n                this.element.eventG[this.eventGTab].event = this.element.eventG[this.eventGTab].event.filter(item => {\r\n                        return this.selectDelectEvent.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.eventG[this.eventGTab].event.length; n++) {\r\n                    for(let idx=0; idx<this.deleteEventLine.length; idx++) {\r\n                        if (this.element.eventG[this.eventGTab].event[n].id == this.deleteEventLine[idx].id) {\r\n                            this.newLine(this.element.uuid+'/event-'+n+'-'+this.eventGTab, this.element.uuid+'/eventtab'+this.element.eventG[this.eventGTab].id, this.deleteEventLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteEvent = false\r\n                this.selectDelectEvent = []\r\n                this.deleteEventLine = []\r\n            } \r\n        },\r\n        openEvent(idx) { \r\n            this.selEvent = this.$store.getters.getSomeIPEventDeployment\r\n\r\n            if ( this.element.eventG[this.eventGTab].event[idx].event != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getSomeIPEventDeploymentPath(this.element.eventG[this.eventGTab].event[idx].event)\r\n                }\r\n                this.editEvent.event = { name: this.element.eventG[this.eventGTab].event[idx].event, uuid: endLine}\r\n            }\r\n        },\r\n        editEventItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab)\r\n            if (endLine != undefined && this.editEvent.event == null) {\r\n                this.deleteLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab)\r\n                this.element.eventG[this.eventGTab].event[idx].event = null\r\n            } else if (endLine != undefined && endLine != this.editEvent.event.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab)\r\n                this.newLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab, this.element.uuid+'/eventtab'+this.element.eventG[this.eventGTab].id, this.editEvent.event.uuid)\r\n                this.element.eventG[this.eventGTab].event[idx].event = this.editEvent.event.name\r\n            } else if (endLine == undefined && this.editEvent.event != null) {\r\n                this.newLine(this.element.uuid+'/event-'+idx+'-'+this.eventGTab, this.element.uuid+'/eventtab'+this.element.eventG[this.eventGTab].id, this.editEvent.event.uuid)\r\n                this.element.eventG[this.eventGTab].event[idx].event = this.editEvent.event.name\r\n            } else if (this.editEvent.event != null && endLine == this.editEvent.event.uuid && this.element.eventG[this.eventGTab].event[idx].event != this.editEvent.event.name) {\r\n                this.element.eventG[this.eventGTab].event[idx].event = this.editEvent.event.name\r\n            }\r\n\r\n            this.cancelEvent()\r\n        },\r\n        cancelEvent() {\r\n            this.editEvent = {event: null}\r\n            this.setactiveUUID()\r\n        },\r\n        addEvent() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.eventG[this.eventGTab].event.some(item => item.id === n)\r\n            }\r\n            this.editEvent.id = n\r\n\r\n            if( this.editEvent.event != null) {\r\n                var datacount =  this.element.eventG[this.eventGTab].event.length\r\n                this.newLine(this.element.uuid+'/event-'+datacount+'-'+this.eventGTab, this.element.uuid+'/eventtab'+this.element.eventG[this.eventGTab].id, this.editEvent.event.uuid)\r\n                this.editEvent.event = this.editEvent.event.name\r\n            }\r\n\r\n            const addObj = Object.assign({}, this.editEvent)\r\n            this.element.eventG[this.eventGTab].event.push(addObj);\r\n            this.cancelEvent()\r\n        },\r\n        setEventSelect() {\r\n            if (this.isEditingEvent == true) {\r\n                if (this.editEvent.event != null && this.editEvent.event.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editEvent.event.uuid, element: constant.SomeIPServiceInterfaceDeployment_str} )\r\n                    document.getElementById(this.editEvent.event.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editEvent.event.uuid)\r\n                }\r\n                this.setEventList()\r\n                this.isEditingEvent = false\r\n            } else {\r\n                this.isEditingEvent = true\r\n            }\r\n        },\r\n        setEventList() {\r\n            this.selEvent = this.$store.getters.getSomeIPEventDeployment\r\n            this.setactiveUUID()\r\n        },\r\n        clearEvent() {\r\n            this.isEditingEvent = true\r\n            this.editEvent.event = null\r\n        },\r\n\r\n\r\n        clearService() {\r\n            this.element.service = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/service')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/service')\r\n            }\r\n        },\r\n        setServiceSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/service')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getServiceInterfacePath(this.element.service, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.ServiceInterface_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setServiceList() {\r\n            this.selService = this.$store.getters.getServiceInterface\r\n            this.setactiveUUID()\r\n        },\r\n        setService(item) {\r\n            if( this.element.service != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/service')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/service')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/service', this.element.uuid+'/service', item.uuid)\r\n                this.element.service = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newService() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementService', {\r\n                name: this.$store.getters.getNameServiceInterface, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                versionMaj:'', versionMin:'', namespace:'', events:[], fields:[], methods:[], isservice: null,\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n            EventBus.$emit('add-element', constant.ServiceInterface_str)\r\n            this.$store.commit('editSomeIPService', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckEventD() {\r\n            if (this.isdeleteEventD == true) {\r\n                this.isdeleteEventD = false\r\n                this.selectDelectEventD = []\r\n            } else {\r\n                this.isdeleteEventD = true\r\n            }\r\n        },\r\n        deleteEventD() {\r\n            if (this.isdeleteEventD == true) {\r\n                for(let i=0; i<this.element.eventD.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceEventD-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteEventDLine.push({id:this.element.eventD[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/serviceEventD-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'eventD', deletItemList: this.selectDelectEventD, path: this.element.path, name: this.element.name})\r\n                this.element.eventD = this.element.eventD.filter(item => {\r\n                        return this.selectDelectEventD.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.eventD.length; n++) {\r\n                    for(let idx=0; idx<this.deleteEventDLine.length; idx++) {\r\n                        if (this.element.eventD[n].id == this.deleteEventDLine[idx].id) {\r\n                            this.newLine(this.element.uuid+'/serviceEventD-'+n, this.element.uuid+'/serviceEventD', this.deleteEventDLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteEventD = false\r\n                this.selectDelectEventD = []\r\n                this.deleteEventDLine = []\r\n            } \r\n        },\r\n        openEventD(idx) {\r\n            this.selVariableData = this.$store.getters.getVariableDataPrototype\r\n            this.editEventD.name = this.element.eventD[idx].name\r\n            if ( this.element.eventD[idx].event != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceEventD-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getServiceInterfacePath(this.element.eventD[idx].event, 1)\r\n                }\r\n                this.editEventD.event = { name: this.element.eventD[idx].event, uuid: endLine }\r\n            }\r\n            this.editEventD.idE = this.element.eventD[idx].idE\r\n            this.editEventD.maxlength = this.element.eventD[idx].maxlength\r\n            this.editEventD.time = this.element.eventD[idx].time\r\n            this.editEventD.serializer = this.element.eventD[idx].serializer\r\n            this.editEventD.protocal = this.element.eventD[idx].protocal\r\n        },\r\n        editEventDItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceEventD-'+idx)\r\n            if (endLine != undefined && this.editEventD.event == null) {\r\n                this.deleteLine(this.element.uuid+'/serviceEventD-'+idx)\r\n                this.element.eventD[idx].event = null\r\n            } else if (endLine != undefined && endLine != this.editEventD.event.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/serviceEventD-'+idx)\r\n                this.newLine(this.element.uuid+'/serviceEventD-'+idx, this.element.uuid+'/serviceEventD', this.editEventD.event.uuid)\r\n                this.element.eventD[idx].event = this.editEventD.event.name\r\n            } else if (endLine == undefined && this.editEventD.event != null) {\r\n                this.newLine(this.element.uuid+'/serviceEventD-'+idx, this.element.uuid+'/serviceEventD', this.editEventD.event.uuid)\r\n                this.element.eventD[idx].event = this.editEventD.event.name\r\n            } else if (this.editEventD.event != null && endLine == this.editEventD.event.uuid && this.element.eventD[idx].event != this.editEventD.event.name) {\r\n                this.element.eventD[idx].event = this.editEventD.event.name\r\n            }\r\n\r\n            if (this.element.eventD[idx].name != this.editEventD.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'EventD', listname: this.editEventD.name, beforename:this.element.eventD[idx].name} )\r\n            }\r\n\r\n            this.element.eventD[idx].name = this.editEventD.name\r\n            this.element.eventD[idx].idE = this.editEventD.idE\r\n            this.element.eventD[idx].maxlength = this.editEventD.maxlength\r\n            this.element.eventD[idx].time = this.editEventD.time\r\n            this.element.eventD[idx].serializer = this.editEventD.serializer\r\n            this.element.eventD[idx].protocal = this.editEventD.protocal\r\n            \r\n            this.cancelEventD()\r\n        },\r\n        cancelEventD() {\r\n            this.editEventD = Object.assign({}, this.defaultEventD)\r\n            this.setactiveUUID()\r\n        },\r\n        addEventD() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.eventD.some(item => item.id === n)\r\n            }\r\n            this.editEventD.id = n\r\n\r\n            if( this.editEventD.event != null) {\r\n                var datacount = this.element.eventD.length\r\n                this.newLine(this.element.uuid+'/serviceEventD-'+datacount, this.element.uuid+'/serviceEventD', this.editEventD.event.uuid)\r\n                this.editEventD.event = this.editEventD.event.name\r\n            }\r\n\r\n            const addObj = Object.assign({}, this.editEventD)\r\n            this.element.eventD.push(addObj);\r\n            this.cancelEventD()\r\n        },\r\n        setVariableDataSelect() {\r\n            if (this.isEditingVariableData == true) {\r\n                if (this.editEventD.event != null && this.editEventD.event.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editEventD.event.uuid, element: constant.ServiceInterface_str} )\r\n                    document.getElementById(this.editEventD.event.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editEventD.event.uuid)\r\n                }\r\n                this.setVariableDataList()\r\n                this.isEditingVariableData = false\r\n            } else {\r\n                this.isEditingVariableData = true\r\n            }\r\n        },\r\n        setVariableDataList() {\r\n            this.selVariableData = this.$store.getters.getVariableDataPrototype\r\n            this.setactiveUUID()\r\n        },\r\n        clearVariableData() {\r\n            this.isEditingVariableData = true\r\n            this.editEventD.event = null\r\n        },\r\n\r\n        isCheckMethodD() {\r\n            if (this.isdeleteMethodD == true) {\r\n                this.isdeleteMethodD = false\r\n                this.selectDelectMethodD = []\r\n            } else {\r\n                this.isdeleteMethodD = true\r\n            }\r\n        },\r\n        deleteMethodD() {\r\n            if (this.isdeleteMethodD == true) {\r\n                for(let i=0; i<this.element.methodD.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceMethodD-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteMethodDLine.push({id:this.element.methodD[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/serviceMethodD-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'methodD', deletItemList: this.selectDelectMethodD, path: this.element.path, name: this.element.name})\r\n                this.element.methodD = this.element.methodD.filter(item => {\r\n                        return this.selectDelectMethodD.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.methodD.length; n++) {\r\n                    for(let idx=0; idx<this.deleteMethodDLine.length; idx++) {\r\n                        if (this.element.methodD[n].id == this.deleteMethodDLine[idx].id) {\r\n                            this.newLine(this.element.uuid+'/serviceMethodD-'+n, this.element.uuid+'/serviceMethodD', this.deleteMethodDLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteMethodD = false\r\n                this.selectDelectMethodD = []\r\n                this.deleteMethodDLine = []\r\n            } \r\n        },\r\n        openMethodD(idx) {\r\n            this.selClientServer = this.$store.getters.getClientServer,\r\n\r\n            this.editMethodD.name = this.element.methodD[idx].name\r\n            if ( this.element.methodD[idx].method != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceMethodD-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getServiceInterfacePath(this.element.methodD[idx].method, 3)\r\n                }\r\n                this.editMethodD.method = { name: this.element.methodD[idx].method, uuid: endLine}\r\n            }\r\n            this.editMethodD.idM = this.element.methodD[idx].idM\r\n            this.editMethodD.maxrequest = this.element.methodD[idx].maxrequest\r\n            this.editMethodD.maxresponse = this.element.methodD[idx].maxresponse\r\n            this.editMethodD.timerequest = this.element.methodD[idx].timerequest\r\n            this.editMethodD.timeresponse = this.element.methodD[idx].timeresponse\r\n            this.editMethodD.protocal = this.element.methodD[idx].protocal\r\n        },\r\n        editMethodDItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/serviceMethodD-'+idx)\r\n            if (endLine != undefined && this.editMethodD.method == null) {\r\n                this.deleteLine(this.element.uuid+'/serviceMethodD-'+idx)\r\n                this.element.methodD[idx].method = null\r\n            } else if (endLine != undefined && endLine != this.editMethodD.method.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/serviceMethodD-'+idx)\r\n                this.newLine(this.element.uuid+'/serviceMethodD-'+idx, this.element.uuid+'/serviceMethodD', this.editMethodD.method.uuid)\r\n                this.element.methodD[idx].method = this.editMethodD.method.name\r\n            } else if (endLine == undefined && this.editMethodD.method != null) {\r\n                this.newLine(this.element.uuid+'/serviceMethodD-'+idx, this.element.uuid+'/serviceMethodD', this.editMethodD.method.uuid)\r\n                this.element.methodD[idx].method = this.editMethodD.method.name\r\n            } else if (this.editMethodD.method != null && endLine == this.editMethodD.method.uuid && this.element.methodD[idx].method != this.editMethodD.method.name) {\r\n                this.element.methodD[idx].method = this.editMethodD.method.name\r\n            }\r\n\r\n            if (this.element.methodD[idx].name != this.editMethodD.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'MethodD', listname: this.editMethodD.name, beforename: this.element.methodD[idx].name} )\r\n            }\r\n\r\n            this.element.methodD[idx].name = this.editMethodD.name\r\n            this.element.methodD[idx].idM = this.editMethodD.idM\r\n            this.element.methodD[idx].maxrequest = this.editMethodD.maxrequest\r\n            this.element.methodD[idx].maxresponse = this.editMethodD.maxresponse\r\n            this.element.methodD[idx].timerequest = this.editMethodD.timerequest\r\n            this.element.methodD[idx].timeresponse = this.editMethodD.timeresponse\r\n            this.element.methodD[idx].protocal = this.editMethodD.protocal\r\n            \r\n            this.cancelMethodD()\r\n        },\r\n        cancelMethodD() {\r\n            this.editMethodD = Object.assign({}, this.defaultMethodD)\r\n            this.setactiveUUID()\r\n        },\r\n        addMethodD() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.methodD.some(item => item.id === n)\r\n            }\r\n            this.editMethodD.id = n\r\n\r\n            if( this.editMethodD.method != null) {\r\n                var datacount = this.element.methodD.length\r\n                this.newLine(this.element.uuid+'/serviceMethodD-'+datacount, this.element.uuid+'/serviceMethodD', this.editMethodD.method.uuid)\r\n                this.editMethodD.method = this.editMethodD.method.name\r\n            }\r\n\r\n            const addObj = Object.assign({}, this.editMethodD)\r\n            this.element.methodD.push(addObj);\r\n            this.cancelMethodD()\r\n        },\r\n        setClientServerSelect() {\r\n            if (this.isEditingClientServer == true) {\r\n                if (this.editMethodD.method != null && this.editMethodD.method.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editMethodD.method.uuid, element: constant.ServiceInterface_str} )\r\n                    document.getElementById(this.editMethodD.method.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editMethodD.method.uuid)\r\n                }\r\n                this.setClientServerList()\r\n                this.isEditingClientServer = false\r\n            } else {\r\n                this.isEditingClientServer = true\r\n            }\r\n        },\r\n        setClientServerList() {\r\n            this.selClientServer = this.$store.getters.getClientServer\r\n            this.setactiveUUID()\r\n        },\r\n        clearClientServer() {\r\n            this.isEditingClientServer = true\r\n            this.editMethodD.method = null\r\n        },\r\n\r\n        clickFieldName(name) {\r\n            this.beforeField = name\r\n        },\r\n        clickFieldGetName(name) {\r\n            this.beforeGet = name\r\n        },\r\n        clickFieldSetName(name) {\r\n            this.beforeSet = name\r\n        },\r\n        clickFieldNotName(name) {\r\n            this.beforeNoti = name\r\n        },\r\n        inputFieldName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'fileName', listname: name, beforename: this.beforeField} )\r\n            this.beforeField = name\r\n        },\r\n        inputFieldGetName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'getName', listname: name, beforename: this.beforeGet} )\r\n            this.beforeGet = name\r\n        },\r\n        inputFieldSetName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'setName', listname: name, beforename: this.beforeSet} )\r\n            this.beforeSet = name\r\n        },\r\n        inputFieldNotName(name) {\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'notName', listname: name, beforename: this.beforeNoti} )\r\n            this.beforeNoti = name\r\n        },\r\n        addField() {\r\n            const editItem = {name: '', field:null,\r\n                              getname: '',getid: '',getmaxreq: '',getmaxres: '',gettimereq: '',gettimeres: '',getproto: null,\r\n                              setname: '',setid: '',setmaxreq: '',setmaxres: '',settimereq: '',settimeres: '',setproto: null,\r\n                              notname: '',notid: '',notmax: '',nottime: '',notserial: null,notproto: null, id: ''}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'Field_Deployment_' + n++;\r\n                res = this.element.fieldD.some(ele => ele.name === addObj.name)\r\n            }\r\n            addObj.id = n\r\n            this.element.fieldD.push(addObj)\r\n            this.fieldTab = this.element.fieldD.length-1\r\n            if(this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, null)\r\n            }\r\n        },\r\n        clickFieldtab() {\r\n            //console.log(idx)\r\n            this.isGetOpenClose = true\r\n            this.isSetOpenClose = true\r\n            this.isNotifierOpenClose = true\r\n        },\r\n        changeFieldTab() {\r\n            //console.log('change'+' / ')\r\n            //이렇게 해줘야지 tab에 있는것을 다 그린다음에 선을 다시 그려줄수있다.\r\n            if(this.element.fieldD.length > 0 && this.location == 1){\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', 'field', this.element.uuid, this.fieldTab, this.element.fieldD[this.fieldTab].id)}, 300);\r\n            }\r\n        },\r\n        deleteField(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/field-'+idx)\r\n            if(endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/field-'+idx)\r\n            }\r\n            for(let i=idx+1; i<this.element.fieldD.length; i++){\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/field-'+i)\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/field-'+i)\r\n                    this.newLine(this.element.uuid+'/field-'+(i-1), this.element.uuid+'/field', endLine)\r\n                }\r\n            }\r\n            this.$store.commit('deleteRefTable', {deleteName:'FieldD', deleteTab: true, tabName: this.element.fieldD[idx].name, path: this.element.path, name: this.element.name,\r\n                                                    getname: this.element.fieldD[idx].getname, setname: this.element.fieldD[idx].setname, notname: this.element.fieldD[idx].notname})\r\n\r\n            this.element.fieldD.splice(idx, 1)\r\n            this.changeFieldTab()\r\n        },\r\n        setFieldSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/field-'+this.fieldTab)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getServiceInterfacePath(this.element.fieldD[this.fieldTab].field, 2)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.ServiceInterface_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setServiceRef(item) {\r\n            //console.log(item)\r\n            if( this.element.fieldD[this.fieldTab].field != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/field-'+this.fieldTab)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/field-'+this.fieldTab)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/field-'+this.fieldTab, this.element.uuid+'/fieldtab'+this.element.fieldD[this.fieldTab].id, item.uuid)\r\n                }\r\n                this.element.fieldD[this.fieldTab].field = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        setFieldList() {\r\n            this.selField = this.$store.getters.getField\r\n            this.setactiveUUID()\r\n        },\r\n        clearField() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/field-'+this.fieldTab)\r\n            if (endLine != undefined) {\r\n                this.element.fieldD[this.fieldTab].field = null\r\n                this.deleteLine(this.element.uuid+'/field-'+this.fieldTab)\r\n            }\r\n        },\r\n\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editSomeIPService', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}