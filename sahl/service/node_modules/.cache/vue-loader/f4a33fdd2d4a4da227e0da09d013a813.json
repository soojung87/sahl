{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\SomeIPClient.vue?vue&type=template&id=5921b1f6&","dependencies":[{"path":"D:\\source\\service\\src\\components\\SomeIPClient.vue","mtime":1644985967079},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}