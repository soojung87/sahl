{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\MachineDesign.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\MachineDesign.vue","mtime":1652938577854},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MachineDesign.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"MachineDesign.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined  :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=\"colorToolbar\" dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showMachineDesign\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>Machine Design</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Machine Design</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text  v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputMachineDesignName' outlined dense></v-text-field>\r\n                    <v-select :items=\"accessControl\" label=\"Access Control\"  v-model=\"element.access\" @click=\"setactiveUUID\" clearable outlined dense return-object style=\"height: 45px;\" class=\"lable-placeholer-color\"></v-select>\r\n                    <v-text-field v-model=\"element.resettimer\" label=\"PN reset Timer\" placeholder=\"TIME\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/cctable'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showCCItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isCCOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Communication-Connectors\r\n                            <v-btn @click=\"isCheckCC\" text x-small color=\"indigo\" v-if=\"isCCOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn  v-if=\"isCCOpenClose && isdeleteCCItem\" @click=\"deleteCCItem\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isCCOpenClose\">  \r\n                            <v-data-table v-model=\"selectdeleteCCItem\" :headers=\"headersCC\" :items=\"element.connector\" class=\"page__table\"\r\n                                    :show-select=\"isdeleteCCItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :ripple=\"false\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteCCItem\" v-slot:body=\"props\">\r\n                                    <!-- <tbody> -->\r\n                                    <draggable :list=\"props.items\" tag=\"tbody\">\r\n                                        <tr v-for=\"(item,idx) in props.items\" :key=\"idx\" >\r\n                                            <td v-for=\"(header,key) in props.headers\" :key=\"key\">\r\n                                                <v-icon v-if=\"header.value == 'sort'\" x-small class=\"page_grab-icon\">mdi-arrow-all</v-icon>\r\n                                                <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openCC(idx)\" @cancel=\"editCC(idx)\" @save=\"cancelCC\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editedItemCC.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>                                                       \r\n                                                        <v-text-field v-model=\"editedItemCC.mtu\" label=\"MTU\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-text-field v-model=\"editedItemCC.timeout\" label=\"MTU Timeout\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-text-field v-model=\"editedItemCC.mask\" label=\"Filter Data Mask\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-checkbox v-model=\"editedItemCC.mtuenable\" label=\"MTU Enable\" @click=\"setactiveUUID()\"></v-checkbox>\r\n                                                        <v-autocomplete v-model='editedItemCC.endpoint' label='Unicast Network End Point' :items='selNetworkEndpoint' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                            return-object :readonly=\"!isEditingMDEndpoint\" clearable @click:clear='clearMDEndpoint' @click=\"setMDEndpointSelect()\" @blur=\"isEditingMDEndpoint=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"addOpenCC()\" @cancel=\"addCC()\" @save=\"cancelCC\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-text-field v-model=\"editedItemCC.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-text-field v-model=\"editedItemCC.mtu\" label=\"MTU\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-text-field v-model=\"editedItemCC.timeout\" label=\"MTU Timeout\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-text-field v-model=\"editedItemCC.mask\" label=\"Filter Data Mask\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        <v-checkbox v-model=\"editedItemCC.mtuenable\" label=\"MTU Enable\" @click=\"setactiveUUID()\"></v-checkbox>\r\n                                                        <v-autocomplete v-model='editedItemCC.endpoint' label='Unicast Network End Point' :items='selNetworkEndpoint' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                            return-object :readonly=\"!isEditingMDEndpoint\" clearable @click:clear='clearMDEndpoint' @click=\"setMDEndpointSelect()\" @blur=\"isEditingMDEndpoint=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </draggable>\r\n                                    <!-- </tbody> -->\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/sdctable'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showSDCItem\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isSDCOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Service discover configs\r\n                            <v-btn @click=\"isCheckSDC\" text x-small color=\"indigo\" v-if=\"isSDCOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn  v-if=\"isSDCOpenClose && isdeleteSDCItem\" @click=\"deleteSDC\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isSDCOpenClose\"> \r\n                            <v-data-table v-model=\"selectdeleteSDCItem\" :headers=\"headersSDC\" :items=\"element.servicediscover\"\r\n                                    :show-select=\"isdeleteSDCItem\" item-key=\"ssdp\" style=\"width:100%\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :ripple=\"false\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteSDCItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openSDC(idx)\" @cancel=\"editSDC(idx)\" @save=\"cancelSDC\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editedItemSDC.msia' label='Multicast SD IP Address' :items='selNetworkEndpoint' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                            return-object :readonly=\"!isEditingMDMulticast\" clearable @click:clear='clearMDMulticast' @click=\"setMDMulticastSelect()\" @blur=\"isEditingMDMulticast=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                        <v-text-field v-model=\"editedItemSDC.ssdp\" label=\"Some IP SD Port\" placeholder=\"Integer\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"addOpenSDC()\" @cancel=\"addSDC()\" @save=\"cancelSDC\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editedItemSDC.msia' label='Multicast SD IP Address' :items='selNetworkEndpoint' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                            return-object :readonly=\"!isEditingMDMulticast\" clearable @click:clear='clearMDMulticast' @click=\"setMDMulticastSelect()\" @blur=\"isEditingMDMulticast=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                        <v-text-field v-model=\"editedItemSDC.ssdp\" label=\"Some IP SD Port\" placeholder=\"Integer\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table> \r\n                        </v-card-text>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport draggable from \"vuedraggable\";\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n//    components: {draggable},\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting, draggable},\r\n    computed: { \r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        SAHLProject() {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex() {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: { name:  [val => (val || '').length > 0 ], },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar,\r\n            isCCOpenClose: true,\r\n            isSDCOpenClose: true,\r\n            accessControl: ['MODELED', 'CUSTOM'],\r\n\r\n            isdeleteCCItem: false,\r\n            isEditingEndPoint: true,\r\n            selNetworkEndpoint: this.$store.getters.getNetworkEndPoint,\r\n            menulistEndpoint: [],\r\n            selectdeleteCCItem: [],\r\n            headersCC: [\r\n                { text: '', sortable: false, value: 'sort', width: '10px' },\r\n                { text: 'name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'MTU',  sortable: false, value: 'mtu' },\r\n                { text: 'MTU Enable', sortable: false, value: 'mtuenable' },\r\n                { text: 'MTU Timeout', width:'110px', sortable: false, value: 'timeout' },\r\n                { text: 'Unicast Network End Point', width:'180px', value: 'endpoint', sortable: false },\r\n                { text: 'Filter Data Mask', width:'120px', sortable: false, value: 'mask' },\r\n            ],\r\n            editedItemCC: { name: '', mtu: '', mtuenable: null, timeout: '', endpoint: null, mask: ''},\r\n            defaultItemCC: { name: '', mtu: '', mtuenable: null, timeout: '', endpoint: null, mask: ''},\r\n            selectEndpointItem: [],\r\n            headersEndpoint: [\r\n                { text: 'name', align: 'start', sortable: false, value: 'fullname' },\r\n                { text: 'Domain name',  sortable: false, value: 'domainname' },\r\n            ],\r\n            selectIPAdderssItem: [],\r\n            deleteChangeLineCC: [],\r\n            deleteChangeLineSDC: [],\r\n\r\n            isdeleteSDCItem: false,\r\n            selectdeleteSDCItem: [],\r\n            headersSDC: [\r\n                { text: 'Multicast-SD-Ip-Address', width:'170px', align: 'start', sortable: false, value: 'msia' },\r\n                { text: 'SomeIP-Service-discovery-port',width:'210px', sortable: false, value: 'ssdp' },\r\n            ],\r\n            editedItemSDC: { msia: null, ssdp: ''},\r\n            defaultItemSDC: {  msia: null, ssdp: ''},\r\n\r\n            isEditingMDEndpoint: true,\r\n            isEditingMDMulticast: true,\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showMachineDesign () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showCCItem() {\r\n            this.isCCOpenClose = this.isCCOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showSDCItem() {\r\n            this.isSDCOpenClose = this.isSDCOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        inputMachineDesignName() {\r\n            this.$store.commit('editMachineDesign', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isCheckCC() {\r\n            if (this.isdeleteCCItem == true) {\r\n                this.isdeleteCCItem = false\r\n                this.selectdeleteCCItem = []\r\n            } else {\r\n                this.isdeleteCCItem = true\r\n            }\r\n        },\r\n        deleteCCItem() {\r\n            if (this.isdeleteCCItem == true) {\r\n                for(let i=0; i<this.element.connector.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/cctable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineCC.push({endpoint:this.element.connector[i].endpoint, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/cctable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'CommunicationC', deletItemList: this.selectdeleteCCItem, path: this.element.path, name: this.element.name})\r\n                this.element.connector = this.element.connector.filter(item => {\r\n                         return this.selectdeleteCCItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.connector.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineCC.length; idx++) {\r\n                        if (this.element.connector[n].endpoint == this.deleteChangeLineCC[idx].endpoint) {\r\n                            this.newLine(this.element.uuid+'/cctable-'+n, this.element.uuid+'/cctable', this.deleteChangeLineCC[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteCCItem = false\r\n                this.selectdeleteCCItem = []\r\n            } \r\n        },\r\n        openCC(idx) {\r\n            this.selNetworkEndpoint = this.$store.getters.getNetworkEndPoint\r\n            this.editedItemCC.name = this.element.connector[idx].name\r\n            this.editedItemCC.mtu = this.element.connector[idx].mtu\r\n            this.editedItemCC.mtuenable = this.element.connector[idx].mtuenable\r\n            this.editedItemCC.timeout = this.element.connector[idx].timeout\r\n            this.editedItemCC.mask = this.element.connector[idx].mask\r\n            if ( this.element.connector[idx].endpoint != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/cctable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getEthernetClusterPath(this.element.connector[idx].endpoint)\r\n                }\r\n                this.editedItemCC.endpoint = { name: this.element.connector[idx].endpoint, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/cctable-'+idx) }\r\n            }\r\n            this.setlistEthernetCluster()\r\n        },\r\n        addOpenCC() {\r\n            this.selNetworkEndpoint = this.$store.getters.getNetworkEndPoint\r\n            this.setlistEthernetCluster()\r\n        },\r\n        addCC() {\r\n            if(this.editedItemCC.endpoint != null) {\r\n                var datacount = this.element.connector.length\r\n                this.newLine(this.element.uuid+'/cctable-'+datacount, this.element.uuid+'/cctable', this.editedItemCC.endpoint.uuid)\r\n                this.editedItemCC.endpoint = this.editedItemCC.endpoint.name\r\n            }\r\n            const addObj = Object.assign({}, this.editedItemCC);\r\n            this.element.connector.push(addObj);\r\n            this.cancelCC()\r\n        },\r\n        editCC(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/cctable-'+idx)\r\n            if (endLine != undefined && this.editedItemCC.endpoint == null) {\r\n                this.deleteLine(this.element.uuid+'/cctable-'+idx)\r\n                this.element.connector[idx].endpoint = null\r\n            } else if (endLine != undefined && endLine != this.editedItemCC.endpoint.uuid) {\r\n                this.deleteLine(this.element.uuid+'/cctable-'+idx)\r\n                this.newLine(this.element.uuid+'/cctable-'+idx, this.element.uuid+'/cctable', this.editedItemCC.endpoint.uuid)\r\n            } else if (endLine == undefined && this.editedItemCC.endpoint != null) {\r\n                this.newLine(this.element.uuid+'/cctable-'+idx, this.element.uuid+'/cctable', this.editedItemCC.endpoint.uuid)\r\n                this.element.connector[idx].endpoint = this.editedItemCC.endpoint.name\r\n            }\r\n\r\n            if (this.element.connector[idx].name != this.editedItemCC.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'CommunicationC', listname: this.editedItemCC.name} )\r\n            }\r\n\r\n\r\n            this.element.connector[idx].name = this.editedItemCC.name\r\n            this.element.connector[idx].mtu = this.editedItemCC.mtu\r\n            this.element.connector[idx].mtuenable = this.editedItemCC.mtuenable\r\n            this.element.connector[idx].timeout = this.editedItemCC.timeout\r\n            this.element.connector[idx].mask = this.editedItemCC.mask\r\n            this.cancelCC()\r\n        },\r\n        cancelCC() {\r\n            this.editedItemCC = Object.assign({}, this.defaultItemCC)\r\n            this.selectEndpointItem = []\r\n            this.menulistEndpoint = []\r\n            this.setactiveUUID()\r\n        },\r\n        clearMDEndpoint() {\r\n            this.isEditingMDEndpoint = true\r\n            this.editedItemCC.endpoint = null\r\n        },\r\n        setMDEndpointSelect() {\r\n            if (this.isEditingMDEndpoint == true) {\r\n                if (this.editedItemCC.endpoint != null && this.editedItemCC.endpoint.uuid != null) {\r\n                    this.infoEthernetCluster()\r\n                    this.$store.commit('setDetailView', {uuid: this.editedItemCC.endpoint.uuid, element: constant.EthernetCluster_str} )\r\n                }\r\n                this.setMDEndpointList()\r\n                this.isEditingMDEndpoint = false\r\n            } else {\r\n                this.isEditingMDEndpoint = true\r\n            }\r\n        },\r\n        setMDEndpointList() {\r\n            this.selNetworkEndpoint = this.$store.getters.getNetworkEndPoint\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        isCheckSDC() {\r\n            if (this.isdeleteSDCItem == true) {\r\n                this.isdeleteSDCItem = false\r\n                this.selectdeleteSDCItem = []\r\n            } else {\r\n                this.isdeleteSDCItem = true\r\n            }\r\n        },\r\n        deleteSDC() {\r\n            if (this.isdeleteSDCItem == true) {\r\n                for(let i=0; i<this.element.servicediscover.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/sdctable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineSDC.push({msia:this.element.servicediscover[i].msia, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/sdctable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.servicediscover = this.element.servicediscover.filter(item => {\r\n                         return this.selectdeleteSDCItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.servicediscover.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineSDC.length; idx++) {\r\n                        if (this.element.servicediscover[n].msia == this.deleteChangeLineSDC[idx].msia) {\r\n                            this.newLine(this.element.uuid+'/sdctable-'+n, this.element.uuid+'/sdctable', this.deleteChangeLineSDC[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteSDCItem = false\r\n                this.selectdeleteSDCItem = []\r\n                this.deleteChangeLineSDC = []\r\n            } \r\n        },\r\n        openSDC(idx) {\r\n            this.selNetworkEndpoint = this.$store.getters.getNetworkEndPoint\r\n            this.editedItemSDC.ssdp = this.element.servicediscover[idx].ssdp\r\n            if ( this.element.servicediscover[idx].msia != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/sdctable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getEthernetClusterPath(this.element.servicediscover[idx].msia)\r\n                }\r\n                this.editedItemSDC.msia = { name: this.element.servicediscover[idx].msia, uuid: endLine }\r\n            }\r\n            this.setlistEthernetCluster()\r\n        },\r\n        addOpenSDC() {\r\n            this.selNetworkEndpoint = this.$store.getters.getNetworkEndPoint\r\n            this.setlistEthernetCluster()\r\n        },\r\n        editSDC(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/sdctable-'+idx)\r\n            if (endLine != undefined && this.editedItemSDC.msia == null) {\r\n                this.deleteLine(this.element.uuid+'/sdctable-'+idx)\r\n                this.element.servicediscover[idx].msia = null\r\n            } else if (endLine != undefined && endLine != this.editedItemSDC.msia.uuid) {\r\n                this.deleteLine(this.element.uuid+'/sdctable-'+idx)\r\n                this.newLine(this.element.uuid+'/sdctable-'+idx, this.element.uuid+'/sdctable', this.editedItemSDC.msia.uuid)\r\n            } else if (endLine == undefined && this.editedItemSDC.msia != null) {\r\n                this.newLine(this.element.uuid+'/sdctable-'+idx, this.element.uuid+'/functiontable', this.editedItemSDC.msia.uuid)\r\n                this.element.servicediscover[idx].msia = this.editedItemSDC.msia.name\r\n            }\r\n\r\n            this.element.servicediscover[idx].ssdp = this.editedItemSDC.ssdp\r\n            this.cancelSDC()\r\n        },\r\n        cancelSDC() {\r\n            for(let i=0; i<this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.EthernetCluster.length; i++){\r\n                this.$store.commit('editEthernetCluster', {compo:\"z\", uuid:this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.EthernetCluster[i].uuid, zindex:2} )\r\n            }\r\n            this.editedItemSDC = Object.assign({}, this.defaultItemSDC)\r\n            this.selectIPAdderssItem = []\r\n            this.menulistEndpoint = []\r\n            this.setactiveUUID()\r\n        },\r\n        addSDC() {\r\n            if(this.editedItemSDC.msia != null) {\r\n                var datacount = this.element.servicediscover.length\r\n                this.newLine(this.element.uuid+'/sdctable-'+datacount, this.element.uuid+'/sdctable', this.editedItemSDC.msia.uuid)\r\n                this.editedItemSDC.msia = this.editedItemSDC.msia.name\r\n            }\r\n            const addObj = Object.assign({}, this.editedItemSDC);\r\n            this.element.servicediscover.push(addObj);\r\n            this.cancelSDC()\r\n        },\r\n        clearMDMulticast() {\r\n            this.isEditingMDMulticast = true\r\n            this.editedItemSDC.msia = null\r\n        },\r\n        setMDMulticastSelect() {\r\n            if (this.isEditingMDMulticast == true) {\r\n                if (this.editedItemSDC.msia != null && this.editedItemSDC.msia.uuid != null) {\r\n                    this.infoEthernetCluster()\r\n                    this.$store.commit('setDetailView', {uuid: this.editedItemSDC.msia.uuid, element: constant.EthernetCluster_str} )\r\n                }\r\n                this.setMDEndpointList()\r\n                this.isEditingMDMulticast = false\r\n            } else {\r\n                this.isEditingMDMulticast = true\r\n            }\r\n        },\r\n        infoEthernetCluster() {\r\n            var info = {  isChannel: true, isEndpoint: true, idxConditional: 0, idxChannel: 0,  idxEndpoint: 0,}\r\n            this.selNetworkEndpoint.forEach( data => {\r\n                if (data.uuid == this.editedItemCC.endpoint.uuid) {\r\n                    info.idxConditional = data.condidx\r\n                    info.idxChannel = data.channelidx\r\n                    info.idxEndpoint = data.endpointidx\r\n                }\r\n            })\r\n            EventBus.$emit('detailViewInfo',info)\r\n        },\r\n\r\n\r\n        setlistEthernetCluster() { // add list 버튼 눌렀을 경우 같은 element 이름 없애주는 코드임\r\n            this.menulistEndpoint = this.selNetworkEndpoint.filter((item1, idx1) => {\r\n                return this.selNetworkEndpoint.findIndex((item2) => {\r\n                    return item1.ethernetname == item2.ethernetname\r\n                }) == idx1\r\n            })\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editMachineDesign', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n"]}]}