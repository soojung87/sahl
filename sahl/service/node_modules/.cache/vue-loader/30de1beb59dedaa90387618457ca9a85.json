{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\serviceInterface.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\serviceInterface.vue","mtime":1628233190762},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["serviceInterface.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"serviceInterface.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"serviceInterface\">\r\n        <v-container>\r\n            <v-card outlined>\r\n                <v-toolbar :color=colorToolbar dark hide-on-scroll dense>\r\n                    <v-btn icon @click=\"showServiceInterface\">\r\n                        <v-icon>mdi-heart</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>Service Interface</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                    <v-icon v-if=\"iselementOpenClose && iseditorlist\" @click=\"saveServiceInterface\">\r\n                        mdi-content-save\r\n                    </v-icon>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose && !iseditorlist\"> <!-- list -->\r\n                    <v-row>\r\n                        <v-spacer></v-spacer>\r\n                        <v-col>\r\n                            <v-btn text @click=\"addServiceInterface\" x-small>\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn text @click=\"deleteServiceInterface\" x-small>\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn @click=\"openallList\" x-small> all </v-btn>\r\n                            <v-btn @click=\"closeallList\" x-small>none</v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-expansion-panels v-model=\"panelServiceInterface\" focusable dense multiple>\r\n                        <v-expansion-panel v-for=\"(item,i) in serviceInterfaceItem\" :key=\"i\">\r\n                            <v-expansion-panel-header>\r\n                                <template v-slot:default=\"{ open }\">\r\n                                    <v-checkbox v-if=\"isdeleteServiceInterface\" v-model=\"selectedSI\" :value=\"item\" :label=\"'name ' + item.name\" @click.native.stop class=\"panel-header\" />\r\n                                    <div v-else-if=\"!isdeleteServiceInterface\" class=\"panel-header\">\r\n                                        <v-icon v-if=\"open\" @click=\"saveSIListItem\">mdi-content-save</v-icon>\r\n                                        <label> name </label>\r\n                                        <v-fade-transition leave-absolute>\r\n                                            <span> {{ item.name }} </span>\r\n                                        </v-fade-transition>\r\n                                    </div>\r\n                                </template>\r\n                                <template v-slot:actions>\r\n                                    <v-icon v-if=\"item.name == ''\" color=\"error\">mdi-alert-circle</v-icon>\r\n                                </template>\r\n                            </v-expansion-panel-header>\r\n                            <v-expansion-panel-content>\r\n                                <v-divider class=\"my-2\"></v-divider>\r\n                                <v-text-field v-model=\"item.name\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                <v-text-field v-model=\"item.namespace\" label=\"Name Spaces\" placeholder=\"String/String/...\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                <v-text-field v-model=\"item.version\" label=\"Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                                <v-card outlined class=\"mx-auto\">\r\n                                    <div class=\"subtitle-2\" id=\"MFG\">\r\n                                        <v-btn text @click=\"showEventItem\" x-small color=\"indigo\">\r\n                                            <v-icon>mdi-heart</v-icon>\r\n                                        </v-btn>\r\n                                        Event\r\n                                        <v-btn text @click=\"addListEventItem(item)\" x-small color=\"indigo\" v-if=\"isEventsOpenClose\">\r\n                                            <v-icon>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                        <v-btn @click=\"deleteListEventItem(item)\" text x-small color=\"indigo\" v-if=\"isEventsOpenClose\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                    </div>\r\n                                    <v-card-text v-if=\"isEventsOpenClose\">  \r\n                                        <v-data-table v-model=\"selectDelectEventItem\" :headers=\"headerEvents\" :items=\"item.events\"\r\n                                                :show-select=\"isdeleteEventItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer>\r\n                                            <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                            </template>\r\n                                            <template v-if=\"!isdeleteEventItem\" v-slot:body=\"props\">\r\n                                                <draggable :list=\"props.items\" tag=\"tbody\" >\r\n                                                    <tr v-for=\"(itemfield,idx) in props.items\" :key=\"idx\">\r\n                                                        <td v-for=\"(header,key) in props.headers\" :key=\"key\" :class=\"row_classes(itemfield,enumelement.events)\">\r\n                                                            <v-icon v-if=\"header.value == 'sort'\" small class=\"page__grab-icon\">mdi-arrow-all</v-icon>\r\n                                                            <v-edit-dialog v-if=\"header.value != 'sort'\" :return-value.sync=\"itemfield[header.value]\" large > <!--lager 빼면 cancel save없어진다 근데 없으면 select하고나서 엔터 안치면 값이 안바뀜 -->\r\n                                                                {{itemfield[header.value]}}\r\n                                                                <template v-slot:input>\r\n                                                                    <v-text-field v-model=\"itemfield[header.value]\" single-line counter></v-text-field>\r\n                                                                </template>\r\n                                                            </v-edit-dialog>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </draggable>\r\n                                            </template>\r\n                                        </v-data-table>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                                <v-card outlined class=\"mx-auto\">\r\n                                    <div class=\"subtitle-2\" id=\"MFG\">\r\n                                        <v-btn text @click=\"showFieldItem\" x-small color=\"indigo\">\r\n                                            <v-icon>mdi-heart</v-icon>\r\n                                        </v-btn>\r\n                                        Field\r\n                                        <v-btn text @click=\"addListFieldItem(item)\" x-small color=\"indigo\" v-if=\"isFieldOpenClose\">\r\n                                            <v-icon>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                        <v-btn @click=\"deleteListFieldItem(item)\" text x-small color=\"indigo\" v-if=\"isFieldOpenClose\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                    </div>\r\n                                    <v-card-text v-if=\"isFieldOpenClose\">                            \r\n                                        <v-data-table v-model=\"selectDelectFieldItem\" :headers=\"headerField\" :items=\"item.fields\" \r\n                                                    :show-select=\"isdeleteFieldItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer>\r\n                                            <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                            </template>\r\n                                            <template v-if=\"!isdeleteFieldItem\" v-slot:body=\"{ items, headers }\">\r\n                                                <tbody>\r\n                                                    <tr v-for=\"(itemfield,idx) in items\" :key=\"idx\">\r\n                                                        <td v-for=\"(header,key) in headers\" :key=\"key\" :class=\"row_classes(itemfield,enumelement.fields)\">\r\n                                                            <v-edit-dialog :return-value.sync=\"itemfield[header.value]\" large >\r\n                                                                {{itemfield[header.value]}}\r\n                                                                <template v-slot:input>\r\n                                                                    <v-text-field v-if=\"header.value == 'name' || header.value == 'type'\"\r\n                                                                    v-model=\"itemfield[header.value]\" single-line counter></v-text-field>\r\n                                                                    <v-select v-else :items=\"enumTrueFalse\" v-model=\"itemfield[header.value]\" dense></v-select>\r\n                                                                </template>\r\n                                                            </v-edit-dialog>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </template>\r\n                                        </v-data-table>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                                <v-card outlined class=\"mx-auto\">\r\n                                    <div class=\"subtitle-2\" id=\"MFG\">\r\n                                        <v-btn text @click=\"showMethodItem\" x-small color=\"indigo\">\r\n                                            <v-icon>mdi-heart</v-icon>\r\n                                        </v-btn>\r\n                                        Method\r\n                                        <v-btn text @click=\"addListMethodItem(item)\" x-small color=\"indigo\" v-if=\"isMethodsOpenClose\">\r\n                                            <v-icon>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                        <v-btn @click=\"deleteListMethodItem(item)\" text x-small color=\"indigo\" v-if=\"isMethodsOpenClose\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                    </div>\r\n                                    <v-card-text v-if=\"isMethodsOpenClose\">                            \r\n                                        <v-data-table v-model=\"selectDelectMethodItem\" :headers=\"headerMethods\" :items=\"item.methods\" \r\n                                                    :show-select=\"isdeleteMethodItem\" item-key=\"name\" height=\"120px\" dense hide-default-footer>\r\n                                            <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                            </template>\r\n                                            <template v-if=\"!isdeleteMethodItem\" v-slot:body=\"{ items, headers }\">\r\n                                                <tbody>\r\n                                                    <tr v-for=\"(itemfield,idx) in items\" :key=\"idx\">\r\n                                                        <td v-for=\"(header,key) in headers\" :key=\"key\" :class=\"row_classes(itemfield,enumelement.methods)\">\r\n                                                            <v-edit-dialog :return-value.sync=\"itemfield[header.value]\" large >\r\n                                                                {{itemfield[header.value]}}\r\n                                                                <template v-slot:input>\r\n                                                                    <v-select v-if=\"header.value == 'fireforget'\" :items=\"enumTrueFalse\" v-model=\"itemfield[header.value]\" dense></v-select>\r\n                                                                    <v-text-field v-else-if=\"header.value == 'arguments'\" v-model=\"itemfield[header.value]\"  placeholder=\"inout_name_type,inout_name_type,...\" single-line counter></v-text-field>\r\n                                                                    <v-text-field v-else v-model=\"itemfield[header.value]\" single-line counter></v-text-field>\r\n                                                                </template>\r\n                                                            </v-edit-dialog>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </template>\r\n                                        </v-data-table>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                            </v-expansion-panel-content>\r\n                        </v-expansion-panel>\r\n                    </v-expansion-panels>\r\n                </v-card-text>\r\n                <v-card-text v-else-if=\"iselementOpenClose && iseditorlist\"> <!-- edit -->\r\n                    <v-text-field v-model=\"serviceInfName\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"serviceInfnamespaces\" label=\"Name Spaces\" placeholder=\"String/String/...\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                    <v-text-field v-model=\"serviceInfVersion\" label=\"Version\" placeholder=\"number.number\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"MFG\">\r\n                            <v-btn text @click=\"showEventItem\" x-small color=\"indigo\">\r\n                                <v-icon>mdi-heart</v-icon>\r\n                            </v-btn>\r\n                            Event\r\n                            <v-btn text @click=\"addEventItem\" x-small color=\"indigo\" v-if=\"isEventsOpenClose\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn @click=\"deleteEventItem\" text x-small color=\"indigo\" v-if=\"isEventsOpenClose\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isEventsOpenClose\">  \r\n                            <v-data-table v-model=\"selectDelectEventItem\" :headers=\"headerEvents\" :items=\"eventItem\" \r\n                                       :show-select=\"isdeleteEventItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer>\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteEventItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\" :class=\"row_classes(item,enumelement.events)\">\r\n                                                <v-edit-dialog :return-value.sync=\"item[header.value]\" large > <!--lager 빼면 cancel save없어진다 근데 없으면 select하고나서 엔터 안치면 값이 안바뀜 -->\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <v-text-field v-model=\"item[header.value]\" single-line counter></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"MFG\">\r\n                            <v-btn text @click=\"showFieldItem\" x-small color=\"indigo\">\r\n                                <v-icon>mdi-heart</v-icon>\r\n                            </v-btn>\r\n                            Field\r\n                            <v-btn text @click=\"addFieldItem\" x-small color=\"indigo\" v-if=\"isFieldOpenClose\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn @click=\"deleteFieldItem\" text x-small color=\"indigo\" v-if=\"isFieldOpenClose\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isFieldOpenClose\">                            \r\n                            <v-data-table v-model=\"selectDelectFieldItem\" :headers=\"headerField\" :items=\"fieldItem\" \r\n                                        :show-select=\"isdeleteFieldItem\" item-key=\"name\" height=\"100px\" dense hide-default-footer>\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteFieldItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\" :class=\"row_classes(item,enumelement.fields)\">\r\n                                                <v-edit-dialog :return-value.sync=\"item[header.value]\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <v-text-field v-if=\"header.value == 'name' || header.value == 'type'\"\r\n                                                        v-model=\"item[header.value]\" single-line counter></v-text-field>\r\n                                                        <v-select v-else :items=\"enumTrueFalse\" v-model=\"item[header.value]\" dense></v-select>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" id=\"MFG\">\r\n                            <v-btn text @click=\"showMethodItem\" x-small color=\"indigo\">\r\n                                <v-icon>mdi-heart</v-icon>\r\n                            </v-btn>\r\n                            Method\r\n                            <v-btn text @click=\"addMethodItem\" x-small color=\"indigo\" v-if=\"isMethodsOpenClose\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn @click=\"deleteMethodItem\" text x-small color=\"indigo\" v-if=\"isMethodsOpenClose\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-if=\"isMethodsOpenClose\">                            \r\n                            <v-data-table v-model=\"selectDelectMethodItem\" :headers=\"headerMethods\" :items=\"methodItem\" \r\n                                        :show-select=\"isdeleteMethodItem\" item-key=\"name\" height=\"120px\" dense hide-default-footer>\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteMethodItem\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\" :class=\"row_classes(item,enumelement.methods)\">\r\n                                                <v-edit-dialog :return-value.sync=\"item[header.value]\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <v-select v-if=\"header.value == 'fireforget'\" :items=\"enumTrueFalse\" v-model=\"item[header.value]\" dense></v-select>\r\n                                                        <v-text-field v-else-if=\"header.value == 'arguments'\" v-model=\"item[header.value]\"  placeholder=\"inout_name_type,inout_name_type,...\" single-line counter></v-text-field>\r\n                                                        <v-text-field v-else v-model=\"item[header.value]\" single-line counter></v-text-field>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../main.js\"\r\nimport Draggable  from 'vuedraggable'\r\n\r\nexport default {\r\n    components:{ Draggable,  },\r\n    props: ['initialFormat'],\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            colorToolbar: \"#6A5ACD\",\r\n            panelServiceInterface: [],\r\n            serviceInterfaceItem: [\r\n                { name: 'TestService01',\r\n                  namespace: 'bns/rd',\r\n                  version: '1.0',\r\n                  events: [\r\n                        { name:'Event_11', type: 'ByteArray' },\r\n                        { name:'Event_12', type: 'String' },\r\n                        { name:'Event_13', type: 'String' },\r\n                  ],\r\n                  fields: [\r\n                        { name: 'Field_11', type:'bool', getter: 'true', setter: 'false', notifier: 'false'},\r\n                        { name: 'Field_12', type:'bool', getter: 'true', setter: 'false', notifier: 'true'},\r\n                  ],\r\n                  methods: [\r\n                        { name: 'Method_11', arguments: 'IN_Arg1_int32', fireforget: 'false', perrorset:'ApAppError_10', perrors:'ApAppError_10', description: '' },\r\n                        { name: 'Method_12', arguments: 'IN_Arg1_int32,IN_Arg2_uint32', fireforget: 'false', perrorset:'ApAppError_10', perrors:'ApAppError_10', description: '' },\r\n\r\n                  ],\r\n                },\r\n                { name: 'TestService02',\r\n                  namespace: 'bns/rd',\r\n                  version: '1.0',\r\n                  events: [\r\n                        { name:'Event_11', type: 'ByteArray' },\r\n                        { name:'Event_12', type: 'String' },\r\n                        { name:'Event_13', type: 'String' },\r\n                  ],\r\n                  fields: [\r\n                        { name: 'Field_11', type:'bool', getter: 'true', setter: 'false', notifier: 'false'},\r\n                        { name: 'Field_12', type:'bool', getter: 'true', setter: 'false', notifier: 'true'},\r\n                  ],\r\n                  methods: [\r\n                        { name: 'Method_11', arguments: 'IN_Arg1_int32', fireforget: 'false', perrorset:'', perrors:'', description: '' },\r\n                        { name: 'Method_12', arguments: 'IN_Arg1_int32,IN_Arg2_uint32', fireforget: 'false', perrorset:'', perrors:'', description: '' },\r\n\r\n                  ],\r\n                }\r\n            ],\r\n            serviceInfName: null,\r\n            serviceInfVersion: null,\r\n            serviceInfnamespaces: null,\r\n            iselementOpenClose: true, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            iseditorlist: this.initialFormat, //지금 보여지는 상태가 edit인지 list인지 알려주는것 true : edit / false: list\r\n            isdeleteServiceInterface: false,\r\n            isEventsOpenClose: true,\r\n            isFieldOpenClose: true,\r\n            isMethodsOpenClose: true,\r\n            headerEvents: [\r\n                { text: '', sortable: false, value: 'sort' },\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Data Type', sortable: false, value: 'type' },\r\n            ],\r\n            defaultEventsItem: { name: '', type: '' },\r\n            eventItem: [\r\n                { name:'Event_11', type: 'ByteArray' },\r\n                { name:'Event_12', type: 'String' },\r\n                { name:'Event_13', type: 'String' },\r\n            ],\r\n            isdeleteEventItem: false,\r\n            headerField: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type', sortable: false, value: 'type' },\r\n                { text: 'Getter', sortable: false, value: 'getter' },\r\n                { text: 'Setter', sortable: false, value: 'setter' },\r\n                { text: 'Notifier', sortable: false, value: 'notifier' },\r\n            ],\r\n            defaultFieldItem: { name: '', type: '', getter: '', setter: '', notifier: '' },\r\n            fieldItem: [],\r\n            isdeleteFieldItem: false,\r\n            headerMethods: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Arguments', sortable: false, value: 'arguments' },\r\n                { text: 'Fire & Forget', sortable: false, value: 'fireforget' },\r\n                { text: 'Possible Error Sets', sortable: false, value: 'perrorset' },\r\n                { text: 'Possible Errors', sortable: false, value: 'perrors' },\r\n                { text: 'Description', sortable: false, value: 'description' },\r\n            ],\r\n            defaultMethodsItem: { name: '', arguments: '', fireforget: '', perrorset: '',  perrors: '', description: '' },\r\n            methodItem: [],\r\n            isdeleteMethodItem: false,\r\n            selectDelectEventItem: [],\r\n            selectDelectFieldItem: [],\r\n            selectDelectMethodItem: [],\r\n            enumTrueFalse: [ 'true', 'false'],\r\n            enumelement: { events: '1', fields: '2', methods: '3'},\r\n            selectedSI: [],\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        showServiceInterface () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        showEventItem () {\r\n            this.isEventsOpenClose =  this.isEventsOpenClose ? false : true\r\n        },\r\n        showFieldItem () {\r\n            this.isFieldOpenClose = this.isFieldOpenClose ? false : true\r\n        },\r\n        showMethodItem  () { \r\n            this.isMethodsOpenClose = this.isMethodsOpenClose ? false : true\r\n        },\r\n        addEventItem () {\r\n            const addObj = Object.assign({}, this.defaultEventsItem);\r\n            this.eventItem.unshift(addObj);\r\n        },\r\n        addFieldItem () {\r\n            const addObj = Object.assign({}, this.defaultFieldItem);\r\n            this.fieldItem.unshift(addObj);\r\n        },\r\n        addMethodItem () {\r\n            const addObj = Object.assign({}, this.defaultMethodsItem);\r\n            this.methodItem.unshift(addObj);\r\n        },\r\n        deleteEventItem () {\r\n            if (this.isdeleteEventItem == true) {\r\n                this.eventItem = this.eventItem.filter(item => {\r\n                         return this.selectDelectEventItem.indexOf(item) < 0 })\r\n                this.isdeleteEventItem = false\r\n                this.selectDelectEventItem = []\r\n            } else {\r\n                this.isdeleteEventItem = true\r\n            }\r\n        },\r\n        deleteFieldItem () {\r\n            if (this.isdeleteFieldItem == true) {\r\n                this.fieldItem = this.fieldItem.filter(item => {\r\n                         return this.selectDelectFieldItem.indexOf(item) < 0 })\r\n                this.isdeleteFieldItem = false\r\n                this.selectDelectFieldItem = []\r\n            } else {\r\n                this.isdeleteFieldItem = true\r\n            }\r\n        },\r\n        deleteMethodItem () {\r\n            if (this.isdeleteMethodItem == true) {\r\n                this.methodItem = this.methodItem.filter(item => {\r\n                         return this.selectDelectMethodItem.indexOf(item) < 0 })\r\n                this.isdeleteMethodItem = false\r\n                this.selectDelectMethodItem = []\r\n            } else {\r\n                this.isdeleteMethodItem = true\r\n            }\r\n        },\r\n        saveServiceInterface () {\r\n            //vuex에 저장해야한다.\r\n            EventBus.$emit('new-element', 'ServiceInterface', false)\r\n        },\r\n\r\n        //////////////////////////////////////// \r\n        //list관련 method\r\n        ///////////////////////////////////\r\n\r\n        addServiceInterface () {\r\n            // event뿌려서 edit창 새로 나오게 해야함\r\n            EventBus.$emit('new-element', 'ServiceInterface', true)\r\n        },\r\n        deleteServiceInterface () {\r\n            if (this.isdeleteServiceInterface == true) {\r\n                this.serviceInterfaceItem = this.serviceInterfaceItem.filter(rowitem => {\r\n                         return this.selectedSI.indexOf(rowitem) < 0 })\r\n                this.isdeleteServiceInterface = false\r\n                this.selectedSI = []\r\n            } else {\r\n                this.isdeleteServiceInterface = true\r\n            }\r\n        },\r\n        openallList () {\r\n            this.panelServiceInterface = Array.from(Array(this.serviceInterfaceItem.length).keys());\r\n        },\r\n        closeallList () {\r\n            this.panelServiceInterface = []\r\n        },\r\n        saveSIListItem (){\r\n            alert('save service Interface')\r\n        },\r\n        addListEventItem (item) {\r\n            const addObj = Object.assign({}, this.defaultEventsItem);\r\n            item.events.unshift(addObj)\r\n        },\r\n        addListFieldItem (item) {\r\n            const addObj = Object.assign({}, this.defaultFieldItem);\r\n            item.fields.unshift(addObj);\r\n        },\r\n        addListMethodItem (item) {\r\n            const addObj = Object.assign({}, this.defaultMethodsItem);\r\n            item.methods.unshift(addObj);\r\n        },\r\n        deleteListEventItem (item) {\r\n            if (this.isdeleteEventItem == true) {\r\n                item.events = item.events.filter(rowitem => {\r\n                         return this.selectDelectEventItem.indexOf(rowitem) < 0 })\r\n                this.isdeleteEventItem = false\r\n                this.selectDelectEventItem = []\r\n            } else {\r\n                this.isdeleteEventItem = true\r\n            }\r\n        },\r\n        deleteListFieldItem (item) {\r\n            if (this.isdeleteFieldItem == true) {\r\n                item.fields = item.fields.filter(rowitem => {\r\n                         return this.selectDelectFieldItem.indexOf(rowitem) < 0 })\r\n                this.isdeleteFieldItem = false\r\n                this.selectDelectFieldItem = []\r\n            } else {\r\n                this.isdeleteFieldItem = true\r\n            }\r\n        },\r\n        deleteListMethodItem (item) {\r\n            if (this.isdeleteMethodItem == true) {\r\n                item.methods = item.methods.filter(rowitem => {\r\n                         return this.selectDelectMethodItem.indexOf(rowitem) < 0 })\r\n                this.isdeleteMethodItem = false\r\n                this.selectDelectMethodItem = []\r\n            } else {\r\n                this.isdeleteMethodItem = true\r\n            }\r\n        },\r\n        row_classes (item,el) {\r\n            if (el == this.enumelement.events) {\r\n                if (item.name == '' && item.type == '') {\r\n                    return \"empty_row\"\r\n                }\r\n            }\r\n            else if (el == this.enumelement.fields) {\r\n                if (item.name == '' && item.type == '' && item.getter == '' && item.setter == '' && item.notifier == '') {\r\n                    return \"empty_row\"\r\n                }\r\n            }\r\n            else if (el == this.enumelement.methods) {\r\n                if (item.name == '' && item.arguments == '' && item.fireforget == '' && item.perrorset == '' && item.perrors == '' && item.description == '') {\r\n                    return \"empty_row\"\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.empty_row {\r\n    background-color: rgb(238, 236, 236);\r\n}\r\n</style>"]}]}