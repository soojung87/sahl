{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\PerKeyValueDI.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\PerKeyValueDI.vue","mtime":1657688242185},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PerKeyValueDI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"PerKeyValueDI.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showPERKeyValueDI\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Persistency Key Value Database Interface</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Persistency Key Value Database Interface</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputPERKeyValueDIName' outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.minisize\" label=\"Minimun Sustained Size\" placeholder=\"Integer\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-select v-model=\"element.redundancy\" :items=\"enumRedundancy\" clearable label=\"Redundance\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                            <v-select v-model=\"element.updateS\" :items=\"strategy\" clearable label=\"Update Strategy\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/PERData'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showDataElement\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isDataOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Data Element\r\n                                    <v-btn @click=\"isCheckData\" text x-small color=\"indigo\" v-if=\"isDataOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isDataOpenClose && isdeleteDataItem\" @click=\"deletData\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isDataOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectData\" :headers=\"headerPersistency\" :items=\"element.data\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteDataItem\" item-key=\"id\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteDataItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editData(idx)\" @open=\"openData(idx)\" @save=\"cancelData\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editItem.type' label='Type Tref' :items='selImplementation' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingType\" clearable @click=\"setTypeSelect()\" \r\n                                                                            @click:clear='clearTypeRef' @blur=\"isEditingType=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newImplementation\">\r\n                                                                            <v-icon>mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-select v-model=\"editItem.strategy\" :items=\"strategy\" clearable label=\"Update Strategy\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addData()\" @save=\"cancelData\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editItem.type' label='Type Tref' :items='selImplementation' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingType\" clearable @click=\"setTypeSelect()\" \r\n                                                                            @click:clear='clearTypeRef' @blur=\"isEditingType=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newImplementation\">\r\n                                                                            <v-icon>mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-select v-model=\"editItem.strategy\" :items=\"strategy\" clearable label=\"Update Strategy\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/PERSerial'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showSerialization\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isSerializationOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Data Type For Serialization Refs\r\n                                    <v-btn @click=\"isCheckSerialization\" text x-small color=\"indigo\" v-if=\"isSerializationOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isSerializationOpenClose && isdeleteSerializationItem\" @click=\"deletSerialization\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isSerializationOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectSerialization\" :headers=\"headerSerialization\" :items=\"element.serialization\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteSerializationItem\" item-key=\"id\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteSerializationItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editSerialization(idx)\" @open=\"openSerialization(idx)\" @save=\"cancelSerialization\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSerialItem.serial' label='Data Type For Serialization Ref' :items='selImplementation' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingImplement\" clearable @click=\"setImplementSelect()\" \r\n                                                                            @click:clear='clearImplementRef' @blur=\"isEditingImplement=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newImplementation\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addSerialization()\" @save=\"cancelSerialization\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSerialItem.serial' label='Data Type For Serialization Ref' :items='selImplementation' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingImplement\" clearable @click=\"setImplementSelect()\" \r\n                                                                            @click:clear='clearImplementRef' @blur=\"isEditingImplement=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newImplementation\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            enumRedundancy: ['NONE', ' REDUNDANT', 'REDUNDANTPER-ELEMENT'],\r\n            strategy: ['DELETE', 'KEEPEXISTING', 'OVERWRITE'],\r\n            selImplementation: this.$store.getters.getImplementationDataType,\r\n            isDataOpenClose: true,\r\n            isEditingType: true,\r\n            isdeleteDataItem: false,\r\n            selectDelectData: [],\r\n            headerPersistency: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type Tref', align: 'start', sortable: false, value: 'type' },\r\n                { text: 'Update Strategy', align: 'start', sortable: false, value: 'strategy' },\r\n            ],\r\n            editItem: { name: '', type : null, strategy: null, id:''},\r\n            deleteChangeLine : [],\r\n\r\n            isSerializationOpenClose: true,\r\n            isEditingImplement: true,\r\n            isdeleteSerializationItem: false,\r\n            selectDelectSerialization: [],\r\n            headerSerialization: [\r\n                { text: 'Data Type For Serialization Ref', align: 'start', sortable: false, value: 'serial' },\r\n            ],\r\n            editSerialItem: { serial : null, id:''},\r\n            deleteChangeLineSerial : [],\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showPERKeyValueDI () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showDataElement() {\r\n            this.isDataOpenClose = this.isDataOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showSerialization() {\r\n            this.isSerializationOpenClose = this.isSerializationOpenClose ? false : true\r\n        },\r\n        inputPERKeyValueDIName () {\r\n            this.$store.commit('editPERKeyValueDI', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        \r\n        isCheckData() {\r\n            if (this.isdeleteDataItem == true) {\r\n                this.isdeleteDataItem = false\r\n                this.selectDelectData = []\r\n            } else {\r\n                this.isdeleteDataItem = true\r\n            }\r\n        },\r\n        deletData() {\r\n            if (this.isdeleteDataItem == true) {\r\n                for(let i=0; i<this.element.data.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERData-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLine.push({id:this.element.data[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/PERData-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'perKVDIdata', deletItemList: this.selectDelectData, path: this.element.path, name: this.element.name})\r\n                this.element.data = this.element.data.filter(item => {\r\n                        return this.selectDelectData.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.data.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLine.length; idx++) {\r\n                        if (this.element.data[n].id == this.deleteChangeLine[idx].id) {\r\n                            this.newLine(this.element.uuid+'/PERData-'+n, this.element.uuid+'/PERData', this.deleteChangeLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteDataItem = false\r\n                this.selectDelectData = []\r\n                this.deleteChangeLine = []\r\n            } \r\n        },\r\n        openData(idx) {\r\n            this.selImplementation = this.$store.getters.getImplementationDataType\r\n            if ( this.element.data[idx].type != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERData-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getPHMContributionPath(this.element.data[idx].type)\r\n                }\r\n                this.editItem.type = { name: this.element.data[idx].type, uuid: endLine }\r\n            }\r\n            this.editItem.name = this.element.data[idx].name\r\n            this.editItem.strategy = this.element.data[idx].strategy\r\n        },\r\n        editData(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERData-'+idx)\r\n            if (endLine != undefined && this.editItem.type == null) {\r\n                this.deleteLine(this.element.uuid+'/PERData-'+idx)\r\n                this.element.data[idx].type = null\r\n            } else if (endLine != undefined && endLine != this.editItem.type.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/PERData-'+idx)\r\n                this.newLine(this.element.uuid+'/PERData-'+idx, this.element.uuid+'/PERData', this.editItem.type.uuid)\r\n                this.element.data[idx].type = this.editItem.type.name\r\n            } else if (endLine == undefined && this.editItem.type != null) {\r\n                this.newLine(this.element.uuid+'/PERData-'+idx, this.element.uuid+'/PERData', this.editItem.type.uuid)\r\n                this.element.data[idx].type = this.editItem.type.name\r\n            }\r\n\r\n            if (this.element.data[idx].name != this.editItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'PerDataInter', listname: this.editItem.name} )\r\n            }\r\n\r\n            this.element.data[idx].name = this.editItem.name\r\n            this.element.data[idx].strategy = this.editItem.strategy\r\n            this.cancelData()\r\n        },\r\n        cancelData() {\r\n            this.editItem.name = ''\r\n            this.editItem.strategy = null\r\n            this.editItem.type = null\r\n            this.setactiveUUID()\r\n        },\r\n        addData() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.data.some(item => item.id === n)\r\n            }\r\n            this.editItem.id = n\r\n\r\n            if( this.editItem.type != null) {\r\n                var datacount = this.element.data.length\r\n                this.newLine(this.element.uuid+'/PERData-'+datacount, this.element.uuid+'/PERData', this.editItem.type.uuid)\r\n                this.editItem.type = this.editItem.type.name\r\n            }\r\n            const addObj = Object.assign({}, this.editItem)\r\n            this.element.data.push(addObj);\r\n            this.cancelData()\r\n        },\r\n\r\n        clearTypeRef() {\r\n            this.isEditingType = true\r\n            this.editItem.type = null\r\n        },\r\n        setTypeSelect() {\r\n            if (this.isEditingType == true) {\r\n                if (this.editItem.type != null && this.editItem.type.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editItem.type.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setImplementList()\r\n                this.isEditingType = false\r\n            } else {\r\n                this.isEditingType = true\r\n            }\r\n        },\r\n\r\n        isCheckSerialization() {\r\n            if (this.isdeleteSerializationItem == true) {\r\n                this.isdeleteSerializationItem = false\r\n                this.selectDelectSerialization = []\r\n            } else {\r\n                this.isdeleteSerializationItem = true\r\n            }\r\n        },\r\n        deletSerialization() {\r\n            if (this.isdeleteSerializationItem == true) {\r\n                for(let i=0; i<this.element.serialization.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERSerial-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineSerial.push({id:this.element.serialization[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/PERSerial-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.serialization = this.element.serialization.filter(item => {\r\n                        return this.selectDelectSerialization.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.serialization.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineSerial.length; idx++) {\r\n                        if (this.element.serialization[n].id == this.deleteChangeLineSerial[idx].id) {\r\n                            this.newLine(this.element.uuid+'/PERSerial-'+n, this.element.uuid+'/PERSerial', this.deleteChangeLineSerial[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteSerializationItem = false\r\n                this.selectDelectSerialization = []\r\n                this.deleteChangeLineSerial = []\r\n            } \r\n        },\r\n        openSerialization(idx) {\r\n            this.selImplementation = this.$store.getters.getImplementationDataType\r\n            if ( this.element.serialization[idx].serial != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERSerial-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.serialization[idx].serial)\r\n                }\r\n                this.editSerialItem.serial = { name: this.element.serialization[idx].serial, uuid: endLine }\r\n            }\r\n        },\r\n        editSerialization(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PERSerial-'+idx)\r\n            if (endLine != undefined && this.editSerialItem.serial == null) {\r\n                this.deleteLine(this.element.uuid+'/PERSerial-'+idx)\r\n                this.element.serialization[idx].serial = null\r\n            } else if (endLine != undefined && endLine != this.editSerialItem.serial.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/PERSerial-'+idx)\r\n                this.newLine(this.element.uuid+'/PERSerial-'+idx, this.element.uuid+'/PERSerial', this.editSerialItem.serial.uuid)\r\n                this.element.serialization[idx].serial = this.editSerialItem.serial.name\r\n            } else if (endLine == undefined && this.editSerialItem.serial != null) {\r\n                this.newLine(this.element.uuid+'/PERSerial-'+idx, this.element.uuid+'/PERSerial', this.editSerialItem.serial.uuid)\r\n                this.element.serialization[idx].serial = this.editSerialItem.serial.name\r\n            }\r\n\r\n            this.cancelSerialization()\r\n        },\r\n        cancelSerialization() {\r\n            this.editSerialItem.serial = null\r\n            this.setactiveUUID()\r\n        },\r\n        addSerialization() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.serialization.some(item => item.id === n)\r\n            }\r\n            this.editSerialItem.id = n\r\n\r\n            if( this.editSerialItem.serial != null) {\r\n                var datacount = this.element.serialization.length\r\n                this.newLine(this.element.uuid+'/PERSerial-'+datacount, this.element.uuid+'/PERSerial', this.editSerialItem.serial.uuid)\r\n                this.editSerialItem.serial = this.editSerialItem.serial.name\r\n            }\r\n            const addObj = Object.assign({}, this.editSerialItem)\r\n            this.element.serialization.push(addObj);\r\n            this.cancelSerialization()\r\n        },\r\n\r\n        clearImplementRef() {\r\n            this.isEditingImplement = true\r\n            this.editSerialItem.serial = null\r\n        },\r\n        setImplementSelect() {\r\n            if (this.isEditingImplement == true) {\r\n                if (this.editSerialItem.serial != null && this.editSerialItem.serial.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editSerialItem.serial.uuid, element: constant.Implementation_str} )\r\n                }\r\n                this.setImplementList()\r\n                this.isEditingImplement = false\r\n            } else {\r\n                this.isEditingImplement = true\r\n            }\r\n        },\r\n        setImplementList() {\r\n            this.selImplementation = this.$store.getters.getImplementationDataType\r\n            this.setactiveUUID()\r\n        },\r\n        newImplementation() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementImplementation', {\r\n                    name: this.$store.getters.getNameImplementation, input: false, path: '',\r\n                    top: elementY, left: elementX,  zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', namespace:'', arraysize:'', typeemitter:'', \r\n                    typeref: null, templatetype:null, desc:'', ddpc:[], idtelement:[],\r\n            })\r\n            EventBus.$emit('add-element', constant.Implementation_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editPERKeyValueDI', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editPERKeyValueDI', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}