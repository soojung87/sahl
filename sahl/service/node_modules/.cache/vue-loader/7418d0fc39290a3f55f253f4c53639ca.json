{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\PHMtoMachine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\PHMtoMachine.vue","mtime":1660799098167},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PHMtoMachine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"PHMtoMachine.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showPHMtoMachine\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>PHM Contribution To Machine Mapping</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>PHM Contribution To Machine Mapping</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputPHMtoMachineName' outlined dense></v-text-field>\r\n                            <v-row style=\"height: 70px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.machine\" readonly @click=\"setMachineSelect()\" clearable @click:clear='clearMachine()' label=\"Design Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PHMtoMachine'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setMachineList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selMachine\" :key=\"i\" link @click=\"setMachine(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachine()\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/PHMContri'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showContri\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isContriOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    PHM Contribution Refs\r\n                                    <v-btn @click=\"isCheckContri\" text x-small color=\"indigo\" v-if=\"isContriOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isContriOpenClose && isdeleteContriItem\" @click=\"deletContri\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isContriOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectContri\" :headers=\"headerContri\" :items=\"element.contri\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteContriItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteContriItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editContri(idx)\" @open=\"openContri(idx)\" @save=\"cancelContri\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editItem.con' label='Contribution Reference' :items='selPHMManagement' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingCon\" clearable @click=\"setConSelect()\" \r\n                                                                            @click:clear='clearConRef' @blur=\"isEditingCon=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newPHMContribution\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addContri()\" @save=\"cancelContri\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editItem.con' label='Contribution Reference' :items='selPHMManagement' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingCon\" clearable @click=\"setConSelect()\" \r\n                                                                            @click:clear='clearConRef' @blur=\"isEditingCon=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newPHMContribution\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            selMachine: this.$store.getters.getMachine,\r\n            selPHMManagement: this.$store.getters.getPHMContribution,\r\n            isContriOpenClose: true,\r\n            isEditingCon: true,\r\n            isdeleteContriItem: false,\r\n            selectDelectContri: [],\r\n            headerContri: [\r\n                { text: 'PHM Contribution ref', align: 'start', sortable: false, value: 'con' },\r\n            ],\r\n            editItem: { con : null, id: ''},\r\n            deleteChangeLine : [],\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showPHMtoMachine () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showContri() {\r\n            this.isContriOpenClose = this.isContriOpenClose ? false : true\r\n        },\r\n        inputPHMtoMachineName () {\r\n            this.$store.commit('editPHMtoMachine', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clearMachine() {\r\n            this.element.machine = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMtoMachine')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PHMtoMachine')\r\n            }\r\n        },\r\n        \r\n        setMachineSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMtoMachine')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getMachinePath(this.element.machine)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setMachineList() {\r\n            this.selMachine = this.$store.getters.getMachine\r\n            this.setactiveUUID()\r\n        },\r\n        setMachine(item) {\r\n            if(this.element.machine != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMtoMachine')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PHMtoMachine')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PHMtoMachine', this.element.uuid+'/PHMtoMachine', item.uuid)\r\n                this.element.machine = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newMachine() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementMachine', {\r\n                name: this.$store.getters.getNameMachine, path: '',\r\n                top: elementY, left: elementX, zindex: 10, machinedesign:null, timeout:'', hwelement:[], executable:null, admin: '',\r\n                functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.Machine_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editPHMtoMachine', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckContri() {\r\n            if (this.isdeleteContriItem == true) {\r\n                this.isdeleteContriItem = false\r\n                this.selectDelectContri = []\r\n            } else {\r\n                this.isdeleteContriItem = true\r\n            }\r\n        },\r\n        deletContri() {\r\n            if (this.isdeleteContriItem == true) {\r\n                for(let i=0; i<this.element.contri.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMContri-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLine.push({id:this.element.contri[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/PHMContri-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.contri = this.element.contri.filter(item => {\r\n                        return this.selectDelectContri.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.contri.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLine.length; idx++) {\r\n                        if (this.element.contri[n].id == this.deleteChangeLine[idx].id) {\r\n                            this.newLine(this.element.uuid+'/PHMContri-'+n, this.element.uuid+'/PHMContri', this.deleteChangeLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteContriItem = false\r\n                this.selectDelectContri = []\r\n                this.deleteChangeLine = []\r\n            } \r\n        },\r\n        openContri(idx) {\r\n            this.selPHMManagement = this.$store.getters.getPHMContribution\r\n            if ( this.element.contri[idx].con != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMContri-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getPHMContributionPath(this.element.contri[idx].con)\r\n                }\r\n                this.editItem.con = { name: this.element.contri[idx].con, uuid: endLine }\r\n            }\r\n        },\r\n        editContri(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMContri-'+idx)\r\n            if (endLine != undefined && this.editItem.con == null) {\r\n                this.deleteLine(this.element.uuid+'/PHMContri-'+idx)\r\n                this.element.contri[idx].con = null\r\n            } else if (endLine != undefined && endLine != this.editItem.con.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/PHMContri-'+idx)\r\n                this.newLine(this.element.uuid+'/PHMContri-'+idx, this.element.uuid+'/PHMContri', this.editItem.con.uuid)\r\n                this.element.contri[idx].con = this.editItem.con.name\r\n            } else if (endLine == undefined && this.editItem.con != null && this.editItem.con.uuid != null) {\r\n                this.newLine(this.element.uuid+'/PHMContri-'+idx, this.element.uuid+'/PHMContri', this.editItem.con.uuid)\r\n                this.element.contri[idx].con = this.editItem.con.name\r\n            }\r\n\r\n            this.cancelContri()\r\n        },\r\n        cancelContri() {\r\n            this.editItem.con = null\r\n            this.setactiveUUID()\r\n        },\r\n        addContri() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.contri.some(item => item.id === n)\r\n            }\r\n            this.editItem.id = n\r\n\r\n            if( this.editItem.con != null) {\r\n                var datacount = this.element.contri.length\r\n                this.newLine(this.element.uuid+'/PHMContri-'+datacount, this.element.uuid+'/PHMContri', this.editItem.con.uuid)\r\n                this.editItem.con = this.editItem.con.name\r\n            }\r\n            const addObj = Object.assign({}, this.editItem)\r\n            this.element.contri.push(addObj);\r\n            this.cancelContri()\r\n        },\r\n\r\n        clearConRef() {\r\n            this.isEditingCon = true\r\n            this.editItem.con = null\r\n        },\r\n        setConSelect() {\r\n            if (this.isEditingCon == true) {\r\n                if (this.editItem.con != null && this.editItem.con.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editItem.con.uuid, element: constant.PlatformHealthManagC_str} )\r\n                    document.getElementById(this.editItem.con.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editItem.con.uuid)\r\n                }\r\n                this.setConList()\r\n                this.isEditingCon = false\r\n            } else {\r\n                this.isEditingCon = true\r\n            }\r\n        },\r\n        setConList() {\r\n            this.selPHMManagement = this.$store.getters.getPHMContribution\r\n            this.setactiveUUID()\r\n        },\r\n        newPHMContribution() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            this.$store.commit('addElementPHMContribution', {\r\n                name: this.$store.getters.getNamePHMContribution, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n            })\r\n            EventBus.$emit('add-element', constant.Platform_str)\r\n            EventBus.$emit('add-element', constant.PHM_str)\r\n            EventBus.$emit('add-element', constant.PlatformHealthManagC_str)\r\n            this.$store.commit('editPHMtoMachine', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editPHMtoMachine', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}