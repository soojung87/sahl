{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\ProcessToMachine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\ProcessToMachine.vue","mtime":1667798251345},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProcessToMachine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"ProcessToMachine.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showProcesstoMachineMappingset\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputProcesstoMachineMappingsetName' @click=\"clickOtherFields()\" outlined dense></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/proMapping'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showProMapping\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isProMappingOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Process To Machine Mappings\r\n                                    <v-btn v-if=\"isProMappingOpenClose\" @click=\"addProMapping()\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-plus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isProMappingOpenClose\">\r\n                                    <v-tabs v-model='mappingTab' height=\"30px\" show-arrows @change=\"changeProMappingTab()\">\r\n                                        <v-tab v-for=\"(tab, idx) in element.mapping\" :key=\"idx\" @click=\"clickProMappingtab()\"> \r\n                                            {{tab.name}}\r\n                                            <v-btn text x-small @click=\"deleteProMapping(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                                    </v-tabs>\r\n                                    <v-tabs-items v-model=\"mappingTab\">\r\n                                        <v-tab-item v-for=\"(tab, idx) in element.mapping\" :key=\"idx\">\r\n                                            <v-card flat>\r\n                                                <v-card-text>\r\n                                                    <v-text-field v-model=\"tab.name\" :rules=\"rules.name\" label=\"Name\" @click=\"clickOtherFields()\" @input=\"inputProMappingName(tab.name)\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    <v-row style=\"height: 45px\">\r\n                                                        <v-col cols=\"10\">\r\n                                                            <v-text-field v-model=\"tab.ptmmMachine\" readonly @click=\"setMachineRefSelect()\" :style=\"refMachine ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                                     clearable @click:clear='clearMachineRef(idx)' label=\"Machine Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        </v-col>\r\n                                                        <v-col cols=\"2\">\r\n                                                            <v-menu>\r\n                                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/machinefromptmm-'+tab.id\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setMachineList()\">\r\n                                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                    </v-btn>\r\n                                                                </template>\r\n                                                                <v-list>\r\n                                                                    <v-list-item v-for=\"(item, i) in selMachine\" :key=\"i\" link @click=\"setMachine(item)\">\r\n                                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachine\" >\r\n                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                    </v-btn>\r\n                                                                </v-list>\r\n                                                            </v-menu>\r\n                                                        </v-col>\r\n                                                    </v-row>\r\n                                                    <v-row>\r\n                                                        <v-col cols=\"10\">\r\n                                                            <v-text-field v-model=\"tab.ptmmProcess\" readonly @click=\"setProcessRefSelect()\" :style=\"refProcess ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                                         clearable @click:clear='clearProcessRef(idx)' label=\"Process Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        </v-col>\r\n                                                        <v-col cols=\"2\">\r\n                                                            <v-menu>\r\n                                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processfromptmm-'+tab.id\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                    </v-btn>\r\n                                                                </template>\r\n                                                                <v-list>\r\n                                                                    <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcess(item)\">\r\n                                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\" >\r\n                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                    </v-btn>\r\n                                                                </v-list>\r\n                                                            </v-menu>\r\n                                                        </v-col>\r\n                                                    </v-row>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/runOn-'+tab.id\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showRunOn\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isRunOnOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Shall Run On Refs\r\n                                                            <v-btn @click=\"isCheckRunOn\" text x-small color=\"indigo\" v-if=\"isRunOnOpenClose\">\r\n                                                                <v-icon>mdi-check</v-icon>\r\n                                                            </v-btn>\r\n                                                            <v-btn v-if=\"isRunOnOpenClose && isdeleteRunOn\" @click=\"deleteRunOn\" text x-small color=\"indigo\">\r\n                                                                <v-icon>mdi-minus</v-icon>\r\n                                                            </v-btn>\r\n                                                        </div>\r\n                                                        <v-card-text v-show=\"isRunOnOpenClose\">\r\n                                                            <v-data-table v-model=\"selectDelectRunOn\" :headers=\"headerRunOn\" :items=\"tab.runon\" :items-per-page='$setNumTableList'\r\n                                                                    :show-select=\"isdeleteRunOn\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                                </template>\r\n                                                                <template v-if=\"!isdeleteRunOn\" v-slot:body=\"{ items, headers }\">\r\n                                                                    <tbody>\r\n                                                                        <tr v-for=\"(item,num) in items\" :key=\"num\">\r\n                                                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                                <v-icon v-if=\"header.value == 'refView'\" class=\"refView-tableItem\" :color=\"refShall === item.id ? 'red' : null \" @click=\"rowClick(num)\">mdi-pencil</v-icon>\r\n                                                                                <v-edit-dialog v-if=\"header.value != 'refView'\" persistent @open=\"openRunOn(num)\" @cancel=\"cancelRunOn()\" @save=\"editRunOnItem(num)\" large >\r\n                                                                                    {{item[header.value]}}\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-if=\"header.value != 'refView'\" v-model='editRunOn.shall' label='Shall Run On Reference' :items='selRunOn' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingRunOn\" clearable @click=\"setRunOnSelect()\" \r\n                                                                                            @click:clear='clearRunOn' @blur=\"isEditingRunOn=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <th colspan=\"3\">\r\n                                                                                <v-edit-dialog  large persistent @opan=\"clickOtherFields()\" @cancel=\"cancelRunOn\" @save=\"addRunOn()\"> \r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-model='editRunOn.shall' label='Shall Run On Reference' :items='selRunOn' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingRunOn\" clearable @click=\"setRunOnSelect()\" \r\n                                                                                            @click:clear='clearRunOn' @blur=\"isEditingRunOn=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </th>\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                </template>\r\n                                                            </v-data-table>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                </v-card-text>\r\n                                            </v-card>\r\n                                        </v-tab-item>\r\n                                    </v-tabs-items>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else>\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 50px;\">\r\n                            <label style=\"padding:10px;\">&#60;PROCESS-TO-MACHINE-MAPPINGS&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextToMachine()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <div class=\"text-editDialog\" style=\"height: 400px;\">\r\n                            <v-row v-for=\"(item, i) in editARXML.mapping\" :key=\"i\" style=\"height: 280px;\">\r\n                                <div>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <v-btn style=\"margin: 15px -20px 0px 20px\" @click=\"deletTextToMachine(i)\" text x-small color=\"indigo\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 10px;\">&#60;PROCESS-TO-MACHINE-MAPPING&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;SHORT-NAME&#62;</label>\r\n                                        <v-text-field v-model=\"item.name\" placeholder=\"String\" style=\"width:400px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;MACHINE-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.ptmmMachine\" placeholder=\"Path\"  class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;MACHINE-REF&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 15px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;PROCESS-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.ptmmProcess\" placeholder=\"Path\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;PROCESS-REF&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 50px;\">\r\n                                        <label style=\"padding:10px;margin-left:90px;\">&#60;SHALL-RUN-ON-REFS&#62;</label>\r\n                                        <v-btn @click=\"newTextShall(i)\" icon color=\"teal darken\" x-samll dark>\r\n                                            <v-icon dense dark>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                    </v-row>\r\n                                    <div class=\"text-Inner-editDialog\" style=\"height: 120px;\">\r\n                                        <v-row v-for=\"(run, r) in item.runon\" :key=\"r\" style=\"height: 30px;\">\r\n                                            <div>\r\n                                                <br>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-btn style=\"margin: 13px -80px 0px 80px\" @click=\"deletTextShall(r,i)\" text x-small color=\"indigo\">\r\n                                                        <v-icon>mdi-minus</v-icon>\r\n                                                    </v-btn>\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 70px;\"> &#60;SHALL-RUN-ON-REF&#62;</label>\r\n                                                    <v-text-field v-model=\"run.shall\" placeholder=\"Path\" style=\"width:300px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;SHALL-RUN-ON-REF&#62;</label>\r\n                                                </v-row>\r\n                                            </div>\r\n                                        </v-row>\r\n                                    </div> \r\n                                    <v-row style=\"height: 30px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 90px;\">&#60;&#47;SHALL-RUN-ON-REFS&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 30px;margin:0px;\">\r\n                                            <label style=\"padding:10px;margin-left:55px;\">&#60;&#47;PROCESS-TO-MACHINE-MAPPING&#62;</label>\r\n                                    </v-row>\r\n                                </div>\r\n                            </v-row>\r\n                        </div>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;&#47;PROCESS-TO-MACHINE-MAPPINGS&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        /*detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },*/\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                        if(this.iselementOpenClose && this.location == 1) {\r\n                            if (this.isProMappingOpenClose) {\r\n                                EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)\r\n                            } else {\r\n                                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: true,//this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogText: false,\r\n            editARXML: {name:'', mapping: []},\r\n            editTextConfig: {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''},\r\n            editTextShall: { shall: null, id: ''},\r\n            isProMappingOpenClose: true,\r\n            isRunOnOpenClose: true,\r\n            selMachine: this.$store.getters.getMachine,\r\n            selProcess: this.$store.getters.getProcess,\r\n\r\n            mappingTab: null,\r\n            isdeleteRunOn: false,\r\n            selectDelectRunOn: [],\r\n            headerRunOn: [\r\n                { text: '', sortable: false, value: 'refView', width: '5px' },\r\n                { text: 'Shall Run On Ref', sortable: false, value: 'shall' },\r\n            ],\r\n            editRunOn: { shall: null, id: ''},\r\n            isEditingRunOn: true,\r\n            selRunOn: this.$store.getters.getMachinProcessor,\r\n\r\n            refMachine: false,\r\n            refProcess: false,\r\n            refShall: null\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n        EventBus.$on(this.element.uuid, (refNum, idxID, tabID, id, isDeleteItem, idxRow) => {\r\n            if (isDeleteItem) {\r\n                if (this.refShall == id && this.element.mapping[this.mappingTab].id == tabID) {\r\n                    this.refShall = id + 1\r\n                    this.rowClick(idxRow)\r\n                }\r\n            } else {\r\n                this.refMachine = false\r\n                this.refProcess = false\r\n                this.refShall = null\r\n\r\n                if (refNum == 1) {\r\n                    this.mappingTab = tabID\r\n                    this.refMachine = true\r\n                } else if (refNum == 2) {\r\n                    this.mappingTab = tabID\r\n                    this.refProcess = true\r\n                } else if (refNum == 3) {\r\n                    this.mappingTab = tabID\r\n                    this.refShall = idxID\r\n                }\r\n            }\r\n            console.log('##  '+ this.mappingTab)\r\n        })\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showProcesstoMachineMappingset() {\r\n            this.clickOtherFields()\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLine')\r\n            })\r\n        },\r\n        showProMapping() {\r\n            this.clickOtherFields()\r\n            this.isProMappingOpenClose = this.isProMappingOpenClose ? false : true\r\n            /*if(this.element.mapping.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isProMappingOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                })\r\n            }*/\r\n        },\r\n        showRunOn() {\r\n            this.clickOtherFields()\r\n            this.isRunOnOpenClose = this.isRunOnOpenClose ? false : true\r\n        },\r\n        inputProcesstoMachineMappingsetName() {\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            //this.$store.commit('changeNameExecutable', {uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clickOtherFields() {\r\n            if (this.refMachine || this.refProcess || this.refShall != null) {\r\n                this.deleteOpenElement()\r\n                this.refMachine = false\r\n                this.refProcess = false\r\n                this.refShall = null\r\n            }\r\n        },\r\n        rowClick(idx) {\r\n            console.log('rowClick ' + idx)\r\n            if (this.refShall != this.element.mapping[this.mappingTab].runon[idx].id) { // 같은거 계속 누르면 안됨\r\n                //기존것 delete하고 \r\n                this.clickOtherFields()\r\n                // 새로들어온 idx line draw\r\n                if (this.element.mapping[this.mappingTab].runon[idx].shall != null) {\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                    if (endLine == undefined) {\r\n                        endLine = this.$store.getters.getMachineProcessorPath(this.element.mapping[this.mappingTab].runon[idx].shall)\r\n                    }\r\n                    if (endLine != null) {\r\n                        // 기존에 있던거 좌표 바꿔줘야함.\r\n                        this.$store.commit('editMachine', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        \r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('Element-open', true, endLine)\r\n                            EventBus.$emit('new-line', this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, endLine)\r\n                            document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        })\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, end:endLine, iscircle:false, refNum:3,\r\n                                         idxID: this.element.mapping[this.mappingTab].runon[idx].id, tabID: this.mappingTab})\r\n                    }\r\n                }\r\n                this.refShall = this.element.mapping[this.mappingTab].runon[idx].id\r\n            }\r\n        },\r\n\r\n        clearMachineRef(idx) {\r\n            this.element.mapping[idx].ptmmMachine = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/machinefromptmm-' + this.element.mapping[idx].id)\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setMachineRefSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.mapping[this.mappingTab].ptmmMachine != null) {this.refMachine = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getMachinePath(this.element.mapping[this.mappingTab].ptmmMachine, 0)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', true, endLine)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, end:endLine, iscircle:false, \r\n                                    refNum:1, idxID: 0, tabID: this.mappingTab})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setMachineList() {\r\n            this.selMachine = this.$store.getters.getMachine\r\n            this.setactiveUUID()\r\n        },\r\n        setMachine(item) {\r\n            console.log('/// '+ this.element.mapping[this.mappingTab].ptmmMachine)\r\n            this.clickOtherFields()\r\n            if( this.element.mapping[this.mappingTab].ptmmMachine != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[this.mappingTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[this.mappingTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refMachine = true\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {     \r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id,\r\n                                     item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, end:item.uuid, iscircle:false, \r\n                                        refNum:1, idxID: 0, tabID: this.mappingTab})\r\n                }\r\n                this.element.mapping[this.mappingTab].ptmmMachine = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refMachine = true\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => {     \r\n                        EventBus.$emit('Element-open', true, item.uuid)\r\n                        this.newLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id,\r\n                                     item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, end:item.uuid, iscircle:false,\r\n                                        refNum:1, idxID: 0, tabID: this.mappingTab})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newMachine() {\r\n            /*var nameMachine = this.$store.getters.getNameMachine\r\n            this.$store.commit('addElementModeDeclarationGroup', {\r\n                name: nameMachine+'_MachineState_ModeDeclarationGroup', path: '',\r\n                top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                zindex: 10, modedeclaration:[{name: 'Off', value: ''},{name: 'Startup', Value: ''},{name: 'Running', Value: ''},{name: 'Shutdown', Value: ''}], initmode:'Off', icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            this.$store.commit('addElementMachine', {\r\n                name: nameMachine, path: '',\r\n                top: elementY, left: elementX, zindex: 10, machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                functiongroup:[{name:'MachineState', type:'/'+nameMachine+'_MachineState_ModeDeclarationGroup'}], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n            })*/\r\n            this.$store.commit('addElementMachine', {\r\n                name: this.$store.getters.getNameMachine, path: '', input: false,\r\n                top: this.element.top - 20, left: this.element.left + this.$setPositionLeft, zindex: 10, machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            //EventBus.$emit('add-element', constant.ModeDeclarationGroup_str)\r\n            EventBus.$emit('add-element', constant.Machine_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        clearProcessRef(idx) {\r\n            this.element.mapping[idx].ptmmProcess = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[idx].id)\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setProcessRefSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.mapping[this.mappingTab].ptmmProcess != null) {this.refProcess= true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getProcessPath(this.element.mapping[this.mappingTab].ptmmProcess)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editProcess', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Process_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, end:endLine, iscircle:false, \r\n                                        refNum:2, idxID: 0, tabID: this.mappingTab})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.Process_str} )\r\n                    // document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        setProcess(item) {\r\n            this.clickOtherFields()\r\n            if( this.element.mapping[this.mappingTab].ptmmProcess != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refProcess = true\r\n                    this.$store.commit('editProcess', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Process_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id,\r\n                                 item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, end:item.uuid, iscircle:false, \r\n                                        refNum:2, idxID: 0, tabID: this.mappingTab})\r\n                }\r\n                this.element.mapping[this.mappingTab].ptmmProcess = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refProcess = true\r\n                    this.$store.commit('editProcess', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Process_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id,\r\n                                 item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, end:item.uuid, iscircle:false, \r\n                                        refNum:2, idxID: 0, tabID: this.mappingTab})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameProcess, path: '', input: false,\r\n                top: this.element.top + 200, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        addProMapping() {\r\n            this.clickOtherFields()\r\n            const editItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'ProcessToMachineMap_' + n++;\r\n                res = this.element.mapping.some(ele => ele.name === addObj.name)\r\n            }\r\n            addObj.id = n\r\n            this.element.mapping.push(addObj)\r\n            this.mappingTab = this.element.mapping.length-1\r\n            /*if(this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n            }*/\r\n        },\r\n        clickProMappingtab() {\r\n            this.isdeleteRunOn = false\r\n            this.selectDelectRunOn = []\r\n        },\r\n        changeProMappingTab() {\r\n            this.clickOtherFields()\r\n            /*if(this.element.mapping.length > 0 && this.location == 1 && this.mappingTab != undefined) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)}, 300);\r\n            }*/\r\n        },\r\n        deleteProMapping(idx) {\r\n            this.clickOtherFields()\r\n            this.$store.commit('deleteRefTable', {deleteName:'proMapping', deleteTab: true, tabName: this.element.mapping[idx].name, path: this.element.path, name: this.element.name})\r\n\r\n            if (this.element.mapping[this.mappingTab].ptmmMachine != null) {\r\n                this.clearMachineRef(idx)\r\n            }\r\n            if (this.element.mapping[this.mappingTab].ptmmProcess != null) {\r\n                this.clearProcessRef(idx)\r\n            }\r\n            for(let i=0; i<this.element.mapping[idx].runon.length; i++){\r\n                var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[idx].runon[i].id+'-'+this.element.mapping[idx].id)\r\n                if(endLineCon != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[idx].runon[i].id+'-'+this.element.mapping[idx].id)\r\n                }\r\n            }\r\n\r\n            this.element.mapping.splice(idx, 1)\r\n        },\r\n        isCheckRunOn() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteRunOn == true) {\r\n                this.isdeleteRunOn = false\r\n                this.selectDelectRunOn = []\r\n            } else {\r\n                this.isdeleteRunOn = true\r\n            }\r\n        },\r\n        deleteRunOn() {\r\n            this.clickOtherFields()\r\n            if (this.isdeleteRunOn == true) {\r\n                this.selectDelectRunOn.forEach(element => {\r\n                    for(let i=0; i<this.element.mapping[this.mappingTab].runon.length; i++){\r\n                        if (element.id == this.element.mapping[this.mappingTab].runon[i].id) {\r\n                            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[i].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                            if(endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[i].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                this.element.mapping[this.mappingTab].runon = this.element.mapping[this.mappingTab].runon.filter(item => {\r\n                        return this.selectDelectRunOn.indexOf(item) < 0 })\r\n\r\n                this.isdeleteRunOn = false\r\n                this.selectDelectRunOn = []\r\n            } \r\n        },\r\n        openRunOn(idx) {\r\n            this.selRunOn = this.$store.getters.getMachinProcessor\r\n\r\n            if ( this.element.mapping[this.mappingTab].runon[idx].shall != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getMachineProcessorPath(this.element.mapping[this.mappingTab].runon[idx].shall)\r\n                }\r\n                this.editRunOn.shall = { name: this.element.mapping[this.mappingTab].runon[idx].shall, uuid: endLine}\r\n            }\r\n        },\r\n        editRunOnItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n            if (endLine != undefined && this.editRunOn.shall == null) {\r\n                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = null\r\n            } else if (endLine != undefined && endLine != this.editRunOn.shall.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                this.newLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id, \r\n                                this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, this.editRunOn.shall.uuid, false)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            } else if (endLine == undefined && this.editRunOn.shall != null && this.editRunOn.shall.uuid != null) {\r\n                this.newLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id, \r\n                                this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, this.editRunOn.shall.uuid, false)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            } else if (this.editRunOn.shall != null && endLine == this.editRunOn.method.uuid && this.element.mapping[this.mappingTab].runon[idx].shall != this.editRunOn.shall.name) {\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            }\r\n\r\n            if (this.refShall == this.element.mapping[this.mappingTab].runon[idx].id) {\r\n                this.deleteOpenElement()\r\n                if (this.editRunOn.shall != null && this.editRunOn.shall.uuid != null) {\r\n                    var endLineChange= this.editRunOn.shall.uuid\r\n                    this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editRunOn.shall.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editRunOn.shall.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('Element-open', true, endLineChange)\r\n                        EventBus.$emit('new-line', this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, endLineChange)\r\n                        document.getElementById(endLineChange+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, end:endLineChange,\r\n                                         iscircle:false, refNum:3, idxID: this.refShall, tabID: this.mappingTab})\r\n                }\r\n            }\r\n\r\n            this.cancelRunOn()\r\n        },\r\n        cancelRunOn() {\r\n            this.editRunOn = {shall: null}\r\n            this.setactiveUUID()\r\n        },\r\n        addRunOn() {\r\n            this.clickOtherFields()\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.mapping[this.mappingTab].runon.some(item => item.id === n)\r\n            }\r\n            this.editRunOn.id = n\r\n            var endLine = null\r\n            if( this.editRunOn.shall != null) {\r\n                endLine = this.editRunOn.shall.uuid\r\n                this.$store.commit('editMachine', {compo:\"drag\", uuid: this.editRunOn.shall.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                this.$store.commit('setzIndexVisible', {parent:constant.Machine_str, uuid: this.editRunOn.shall.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                \r\n                this.editRunOn.shall = this.editRunOn.shall.name\r\n                this.$nextTick(() => { \r\n                    EventBus.$emit('Element-open', true, endLine)\r\n                    this.newLine(this.element.uuid+'/runOn-'+n+'-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, \r\n                                endLine, true)\r\n                    document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                })\r\n                this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, end:endLine, iscircle:false, \r\n                                    refNum:3, idxID: this.editRunOn.id, tabID: this.mappingTab})\r\n            }\r\n            const addObj = Object.assign({}, this.editRunOn)\r\n            this.element.mapping[this.mappingTab].runon.push(addObj);\r\n            this.refShall = n\r\n            this.cancelRunOn()\r\n        },\r\n        setRunOnSelect() {\r\n            if (this.isEditingRunOn == true) {\r\n                if (this.editRunOn.shall != null && this.editRunOn.shall.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editRunOn.shall.uuid, element: constant.Machine_str} )\r\n                    // document.getElementById(this.editRunOn.shall.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    // EventBus.$emit('active-element', this.editRunOn.shall.uuid)\r\n                }\r\n                this.setEventList()\r\n                this.isEditingRunOn = false\r\n            } else {\r\n                this.isEditingRunOn = true\r\n            }\r\n        },\r\n        setEventList() {\r\n            this.selRunOn = this.$store.getters.getMachinProcessor\r\n            this.setactiveUUID()\r\n        },\r\n        clearRunOn() {\r\n            this.isEditingRunOn = true\r\n            this.editRunOn.shall = null\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n                this.deleteOpenElement()\r\n            }\r\n        },\r\n        deleteOpenElement() {\r\n            //EventBus.$emit('delete-line', this.$store.getters.getDeleteOpenElement(this.element.uuid))\r\n            this.$store.commit('deleteOpenElemnt', {uuid: this.element.uuid, isDeleteAll: false, startUUID: this.element.uuid} )\r\n        },\r\n        newLine(startLine, drawLine, endLine, isView) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            if (isView) {\r\n                EventBus.$emit('new-line', drawLine, endLine)\r\n            }\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.mapping = JSON.parse(JSON.stringify(this.element.mapping))\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editProtoMachineMapping', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n\r\n            var endLine = null, changEndLine = null\r\n            if (this.editARXML.mapping.length > 0) {\r\n                this.editARXML.mapping.forEach( item => {\r\n                    var isHaveTable = false, idxHaveTable = 0\r\n                    this.element.mapping.forEach((ele,e) => {\r\n                        if (ele.id == item.id) {\r\n                            isHaveTable = true\r\n                            idxHaveTable = e\r\n                        }\r\n                    })\r\n                    if (isHaveTable) {\r\n                        if (item.ptmmMachine != this.element.mapping[idxHaveTable].ptmmMachine) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getMachinePath(item.ptmmMachine, 0)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/machinefromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine, false)\r\n                            }\r\n                        }\r\n                        if (item.ptmmProcess != this.element.mapping[idxHaveTable].ptmmProcess) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processfromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getProcessPath(item.ptmmProcess)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/processfromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine, false)\r\n                            }\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(run => {\r\n                                var isTable = false\r\n                                this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    if (run.id == ele.id && run.shall == ele.shall) {\r\n                                        isTable = true\r\n                                    }\r\n                                })\r\n                                if (!isTable) {\r\n                                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id)\r\n                                    if (endLine != undefined) {\r\n                                        this.deleteLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id)\r\n                                    }\r\n                                    changEndLine = this.$store.getters.getMachineProcessorPath(run.shall)\r\n                                    if (changEndLine != null) {\r\n                                        this.newLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id, this.element.uuid+'/runOn-'+item.id, changEndLine, false)\r\n                                    }\r\n                                }\r\n                            })\r\n                            this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    var isTable = false\r\n                                    item.runon.forEach(edit => {\r\n                                        if (edit.id == ele.id) {\r\n                                            isTable = true\r\n                                        }\r\n                                    })\r\n                                    if (!isTable) {\r\n                                        endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                        if (endLine != undefined) {\r\n                                            this.deleteLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                        }\r\n                                    }\r\n                                })\r\n                        } else {\r\n                            if (this.element.mapping[idxHaveTable].runon.length > 0) {\r\n                                this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                    if (endLine != undefined) {\r\n                                        this.deleteLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (item.ptmmMachine != null) {\r\n                            changEndLine = this.$store.getters.getMachinePath(item.ptmmMachine, 0)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/machinefromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine, false)\r\n                            }   \r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            changEndLine = this.$store.getters.getProcessPath(item.ptmmProcess)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/processfromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine, false)\r\n                            }   \r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(run => {\r\n                                if (run.shall != null) {\r\n                                    var changEndLine = this.$store.getters.getMachineProcessorPath(run.shall)\r\n                                    if (changEndLine != null) {\r\n                                        this.newLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id, this.element.uuid+'/runOn-'+item.id, changEndLine, false)\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n                this.element.mapping.forEach(item => {\r\n                    var isHaveTable = false\r\n                    this.editARXML.mapping.forEach(edit => {\r\n                        if (edit.id == item.id) {\r\n                            isHaveTable = true\r\n                        }\r\n                    })\r\n                    if (!isHaveTable) {\r\n                        if (item.ptmmMachine != null) {\r\n                            this.deleteLine(this.element.uuid+'/machinefromptmm-'+ item.id)\r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            this.deleteLine(this.element.uuid+'/processfromptmm-'+ item.id)\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(data => {\r\n                                if (data.shall != null) {\r\n                                    this.deleteLine(this.element.uuid+'/runOn-'+data.id+'-'+item.id)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                if (this.element.mapping.length > 0) {\r\n                    this.element.mapping.forEach(item => {\r\n                        if (item.ptmmMachine != null) {\r\n                            this.deleteLine(this.element.uuid+'/machinefromptmm-'+ item.id)\r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            this.deleteLine(this.element.uuid+'/processfromptmm-'+ item.id)\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(data => {\r\n                                if (data.shall != null) {\r\n                                    this.deleteLine(this.element.uuid+'/runOn-'+data.id+'-'+item.id)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            this.element.mapping = JSON.parse(JSON.stringify(this.editARXML.mapping))\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', mapping: []}\r\n            this.editTextItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            this.editTextShall = { shall: null, id: ''}\r\n            this.dialogText = false\r\n        },\r\n        newTextToMachine() {\r\n            this.editTextItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                this.editTextItem.name = 'ProcessToMachineMap_' + n++;\r\n                res = this.editARXML.mapping.some(item => item.id === n)\r\n            }\r\n            this.editTextItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextItem)\r\n            this.editARXML.mapping.push(addObj);\r\n        },\r\n        deletTextToMachine(idx) {\r\n            this.editARXML.mapping.splice(idx,1)\r\n        },\r\n        newTextShall(idxMapping) {\r\n            this.editTextShall = { shall: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.editARXML.mapping[idxMapping].runon.some(item => item.id === n)\r\n            }\r\n            this.editTextShall.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextShall)\r\n            this.editARXML.mapping[idxMapping].runon.push(addObj);\r\n        },\r\n        deletTextShall(idxShall, idxMapping) {\r\n            this.editARXML.mapping[idxMapping].runon.splice(idxShall,1)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}