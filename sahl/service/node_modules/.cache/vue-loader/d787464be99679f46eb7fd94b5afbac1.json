{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\dialogSave.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\dialogSave.vue","mtime":1646272468513},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dialogSave.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dialogSave.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-dialog v-model='dialogSaveWindow' width=\"900\" persistent >\r\n        <v-card>\r\n            <v-card-title class=\"text-h6 green accent-1\"> Select Save Element  \r\n                <v-spacer></v-spacer>\r\n                <v-btn @click=\"newSaveWindow\" icon color=\"teal darken\" x-samll dark>\r\n                    <v-icon dense dark>mdi-plus</v-icon>\r\n                </v-btn>\r\n                <v-btn @click=\"isDeleteSaveWindow = isDeleteSaveWindow ? false : true\" icon color=\"teal darken\" x-samll dark>\r\n                    <v-icon dense dark>mdi-check</v-icon>\r\n                </v-btn>\r\n                <v-btn v-if=\"isDeleteSaveWindow\" @click=\"deleteSaveWindow\" icon color=\"teal darken\" x-samll dark>\r\n                    <v-icon dense dark>mdi-minus</v-icon>\r\n                </v-btn>\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <br>\r\n                <v-row>\r\n                    <v-col cols=\"6\">\r\n                        <v-card class=\"savetreeview\">\r\n                            <v-tabs v-model='listTab' background-color=\"teal darken-3\" dark show-arrows>\r\n                                <v-tab v-for=\"(tab, idx) in tabListItem\" :key=\"idx\" @click=\"clickListTab(idx)\"> \r\n                                    {{tab.name}}\r\n                                </v-tab>\r\n                            </v-tabs>\r\n                            <v-tabs-items v-model=\"listTab\">\r\n                                <v-tab-item v-for=\"(tab, idx) in tabListItem\" :key=\"idx\">\r\n                                    <v-card flat>\r\n                                        <v-card-text>\r\n                                            <v-treeview v-model=\"tab.select\" :items=\"tab.list\" activatable expand-icon=\"mdi-chevron-down\" selectable dense return-object :open.sync=\"tab.openIds\"  item-key=\"name\" >\r\n                                            <!-- <v-treeview ref=\"saveTree\" v-model=\"tab.select\" :items=\"tab.list\" activatable expand-icon=\"mdi-chevron-down\" selectable dense return-object open-all item-key=\"name\" > -->\r\n                                                <template v-slot:prepend=\"{item}\">\r\n                                                    <v-icon class=\"pa-0 ma-0\">{{item.icon}}</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'A')\" color=\"red\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-a</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'B')\" color=\"primary\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-b</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'C')\" color=\"green\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-c</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'D')\" color=\"brown\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-d</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'E')\" color=\"pink\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-e</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'F')\" color=\"purple\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-f</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'G')\" color=\"orange\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-g</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'H')\" color=\"indigo\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-h</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'I')\" color=\"teal\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-i</v-icon>\r\n                                                    <v-icon v-if=\"isIncludeSaveWindow(item.uuid, 'J')\" color=\"cyan\" small class=\"pa-0 ma-n1\">mdi mdi-alpha-j</v-icon>\r\n                                                </template>\r\n                                            </v-treeview>\r\n                                        </v-card-text>\r\n                                    </v-card>\r\n                                </v-tab-item>\r\n                            </v-tabs-items>\r\n                        </v-card>\r\n                        <v-row>\r\n                            <v-col>\r\n                                <v-checkbox v-model=\"checkAll\" label=\"Check All\" dense @click=\"checkAllLeft\"></v-checkbox>\r\n                            </v-col>\r\n                            <v-col>\r\n                                <v-checkbox v-model=\"onlyList\" label=\"Only With List\" dense @click=\"checkOnlyList\"></v-checkbox>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-col>\r\n                    <v-col cols=\"1\">\r\n                        <br><br><br><br><br><br><br><br><br><br>\r\n                        <v-row>\r\n                            <v-btn @click=\"moveRigth\" small ><v-icon>mdi-chevron-right</v-icon></v-btn>\r\n                        </v-row>\r\n                        <br><br><br><br><br><br><br><br>\r\n                        <v-row>\r\n                            <v-btn @click=\"moveLeft\" small ><v-icon>mdi-chevron-left</v-icon></v-btn>\r\n                        </v-row>\r\n                    </v-col>\r\n                    <v-col cols=\"5\">\r\n                        <v-row>\r\n                            <v-col cols=\"3\">\r\n                                <v-btn @click=\"btnSaveFile\" dense color=\"teal darken\" dark> find save file </v-btn>\r\n                                <input ref=\"saveloader\" class=\"d-none\" type=\"file\" @change=\"uploadSaveFile\">\r\n                            </v-col>\r\n                        </v-row>\r\n                        <v-row>\r\n                        <v-card class=\"saveSelectView\">\r\n                            <v-radio-group v-model=\"radios\" dense>\r\n                                <template v-for=\"(item,i) in saveList\">\r\n                                    <v-radio :value=\"item.radio\" color=\"success\" :key=\"i+'r'\">\r\n                                        <template v-slot:label>\r\n                                            <v-text-field v-model=\"item.savename\" :label=\"item.label\" placeholder=\"String\" style=\"height: 26px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </template>\r\n                                    </v-radio>\r\n                                    <v-list dense :key=\"i+'l'\"> <!--key값이 i로 중복이라고 Duplicate keys detected: '0'. This may cause an update error. 이런 에러가 나옴 ::해결방법-->\r\n                                        <v-list-item-group v-model=\"item.selectItem\" color=\"primary\">\r\n                                            <draggable class=\"draggable-list\" :list=\"item.saveFile\" group=\"my-group\" @end=\"endDrag\">\r\n                                                <v-list-item v-for=\"(ele, i) in item.saveFile\" :key=\"i\" dense>\r\n                                                    <v-list-item-content>\r\n                                                        <v-list-item-title v-text=\"ele.name\"></v-list-item-title>\r\n                                                    </v-list-item-content>\r\n                                                </v-list-item>\r\n                                            </draggable>\r\n                                        </v-list-item-group>\r\n                                    </v-list>\r\n                                </template>\r\n                            </v-radio-group>\r\n                        </v-card>\r\n                        </v-row>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn color=\"primary\" text  @click=\"saveElement\">\r\n                    Save\r\n                </v-btn>\r\n                <v-snackbar v-model=\"snackbar\" :timeout=\"timeout\" color=\"red accent-2\">\r\n                    {{ text }}\r\n                        <template v-slot:action=\"{ attrs }\">\r\n                        <v-btn color=\"white\" text v-bind=\"attrs\" @click=\"snackbar = false\">\r\n                            Close\r\n                        </v-btn>\r\n                    </template>\r\n                </v-snackbar>\r\n                <v-btn color=\"primary\" text @click=\"cancelSave\">\r\n                    Cancel\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport draggable from \"vuedraggable\";\r\n\r\nexport default {\r\n    components: {draggable},\r\n    computed: {\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n\r\n        dialogSaveWindow: {\r\n            get() {\r\n                return this.value;\r\n            },\r\n            set(value) {\r\n                this.$emit('input', value);\r\n            },\r\n        },\r\n    },\r\n    props: {\r\n        value: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            checkAll: false,\r\n            onlyList: false,\r\n            tabListItem: [\r\n                { name: 'All', list: [], select: [], checkAll: false, onlyList: false, openIds: []}, \r\n                { name: 'Service', list: [], select: [], checkAll: false, onlyList: false, openIds: []}, \r\n                { name: 'Application', list: [], select: [], checkAll: false, onlyList: false, openIds: []},\r\n                { name: 'Machine', list: [], select: [], checkAll: false, onlyList: false, openIds: []},\r\n            ],\r\n            listTab: 0,\r\n            radios: null,\r\n            isDeleteSaveWindow: false,\r\n            saveList: [ {radio:'A', savename:'', label: 'A Save File Name', selectItem:undefined, saveFile: [], },],\r\n            editSaveList: {radio:'', savename:'', label: '', selectItem:undefined, saveFile: [], },\r\n            defaultSaveList: {radio:'', savename:'', label: '', selectItem:undefined, saveFile: [], },\r\n            checkList: [\r\n                { existence: false, key:'A'},\r\n                { existence: false, key:'B'},\r\n                { existence: false, key:'C'},\r\n                { existence: false, key:'D'},\r\n                { existence: false, key:'E'},\r\n                { existence: false, key:'F'},\r\n                { existence: false, key:'G'},\r\n                { existence: false, key:'H'},\r\n                { existence: false, key:'I'},\r\n                { existence: false, key:'J'},\r\n            ],\r\n            dialogNoValidation: false,\r\n            snackbar: false,\r\n            text: '정확하게 작성한 뒤 저장을 시도해 주세요.',\r\n            timeout: 2000,\r\n            dialogOpen: false,\r\n            reOpen: true, // update,beforeupdate는 무언가를 누를때마다 불린다. cancle누르면  둘다 불려서 dialogOpen이 true로 변하기 떄문에 이걸로 바뀌지 않게 잡아줘야함.\r\n            //openIds: [],\r\n        }\r\n    },\r\n    updated() {\r\n        //console.log('updated '+ this.dialogOpen +' - ' + this.reOpen )\r\n        if(this.dialogOpen == false) {\r\n            this.reOpen = true\r\n        }\r\n    },\r\n    beforeUpdate() { //  updated에 넣으면 project만들기 전에 불리기 때문에 children이 없어서 에러남 \r\n        //console.log('beforeUpdate '+ this.dialogOpen +' - ' + this.reOpen )\r\n        if(!this.dialogOpen && this.reOpen) {\r\n            this.tabListItem[0].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children))\r\n            this.tabListItem[1].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.Service_index].children))\r\n            this.tabListItem[2].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.AdaptiveApplication_index].children))\r\n            this.tabListItem[3].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.Machines_index].children))\r\n            this.dialogOpen = true\r\n            this.reOpen = false\r\n            this.setOpenList(0)\r\n        }\r\n    },\r\n    methods: {\r\n        newSaveWindow() {\r\n            if (this.saveList.length < 10) {\r\n                var radio = ''\r\n                this.saveList.forEach( list => {\r\n                    this.checkList.forEach ( item => {\r\n                        if (list.radio == item.key) {\r\n                            item.existence = true\r\n                        }\r\n                    })\r\n                })\r\n                this.checkList.forEach( item => {\r\n                    if (!item.existence) {\r\n                        radio = item.key\r\n                    }\r\n                })\r\n                this.editSaveList = {radio: radio, savename:'', label: radio+ ' Save File Name', selectItem:undefined, saveFile: [], }\r\n                const addObj = Object.assign({}, this.editSaveList)\r\n                this.saveList.push(addObj);\r\n\r\n                this.editSaveList = Object.assign({}, this.defaultSaveList)\r\n                this.checkList.forEach( item => {\r\n                    item.existence = false\r\n                })            \r\n            }\r\n        },\r\n        deleteSaveWindow() {\r\n            if (this.isDeleteSaveWindow) {\r\n                this.saveList.forEach((item,i) => {\r\n                    if(item.radio == this.radios) {\r\n                        this.saveList.splice(i,1)\r\n                    }\r\n                })\r\n                this.isDeleteSaveWindow = false\r\n            }\r\n        },\r\n        clickListTab(idx) {\r\n            this.checkAll = this.tabListItem[idx].checkAll\r\n            this.onlyList = this.tabListItem[idx].onlyList \r\n            this.setOpenList(idx)\r\n        },\r\n        isIncludeSaveWindow(uuid, radio) {\r\n            var isInclude = false\r\n            this.saveList.forEach( ele => {\r\n                if (ele.radio == radio) {\r\n                    ele.saveFile.forEach ( data => {\r\n                        if (data.uuid === uuid){\r\n                            isInclude = true\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            return isInclude\r\n        },\r\n        checkAllLeft() {\r\n            if (this.checkAll) {\r\n                this.tabListItem[this.listTab].checkAll = true\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                this.tabListItem[this.listTab].select = []\r\n                treeitem.forEach(data => {\r\n                    if (data.name != data.uuid ) {\r\n                        if (this.listTab == 0) { //All\r\n                            this.tabListItem[this.listTab].select.push(data)\r\n                        } else if (this.listTab == 1 &&  //Serveice\r\n                                    (data.parent == constant.SomeIPServiceInterfaceDeployment_str || data.parent == constant.ServiceInterface_str || data.parent == constant.Client_str || data.parent == constant.Server_str ||\r\n                                     data.parent == constant.SomeIPClient_str || data.parent == constant.SomeIPServer_str || data.parent == constant.SomeIPToMachineMapping_str || \r\n                                     data.parent == constant.ToPortPrototypeMapping_str || data.parent == constant.RequiredSomeIP_str || data.parent == constant.ProvidedSomeIP_str ||\r\n                                     data.parent == constant.Error_str || data.parent == constant.Errorset_str || data.parent == constant.ErrorDomain_str )) {\r\n                            this.tabListItem[this.listTab].select.push(data)\r\n                        } else if (this.listTab == 2 && \r\n                                    ( data.parent == constant.ProcesstoMachineMapping_str || data.parent == constant.SWComponents_str || data.parent == constant.Process_str ||\r\n                                      data.parent == constant.ProcessDesign_str || data.parent == constant.Executable_str || data.parent == constant.StartupConfig_str || \r\n                                      data.parent == constant.DeterministicClient_str )) {\r\n                            this.tabListItem[this.listTab].select.push(data)\r\n                        } else if (this.listTab == 3 && \r\n                                    ( data.parent == constant.Machine_str || data.parent == constant.MachineDesigne_str || data.parent == constant.EthernetCluster_str ||\r\n                                      data.parent == constant.ModeDeclarationGroup_str || data.parent == constant.HWElement_str || data.parent == constant.HWCategory_str )) {\r\n                            this.tabListItem[this.listTab].select.push(data)\r\n                        }\r\n                } })\r\n            } else {\r\n                this.tabListItem[this.listTab].checkAll = false\r\n                this.tabListItem[this.listTab].select = []\r\n            }\r\n        },\r\n        checkOnlyList() {\r\n            if(this.onlyList) {\r\n                this.tabListItem[this.listTab].onlyList = true\r\n                if (this.listTab == 0) {\r\n                    for(let i=this.tabListItem[this.listTab].list.length-1; i>=0; i--) {\r\n                        for(let n=this.tabListItem[this.listTab].list[i].children.length-1; n>=0; n--) {\r\n                            if( i == 1) {\r\n                                for(let l=this.tabListItem[this.listTab].list[i].children[n].children.length-1; l>=0; l--) { //service\r\n                                    if (this.tabListItem[this.listTab].list[i].children[n].children[l].children.length == 0) {\r\n                                        this.tabListItem[this.listTab].list[i].children[n].children.splice(l,1)\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.tabListItem[this.listTab].list[i].children[n].children.length == 0) {\r\n                                this.tabListItem[this.listTab].list[i].children.splice(n,1)\r\n                            }\r\n                        }\r\n                        if (this.tabListItem[this.listTab].list[i].children.length == 0) {\r\n                            this.tabListItem[this.listTab].list.splice(i,1)\r\n                        }\r\n                    }\r\n                } else if (this.listTab == 1){  //service\r\n                    for(let i=this.tabListItem[this.listTab].list.length-1; i>=0; i--) {\r\n                        for(let n=this.tabListItem[this.listTab].list[i].children.length-1; n>=0; n--) {\r\n                            if (this.tabListItem[this.listTab].list[i].children[n].children.length == 0) {\r\n                                this.tabListItem[this.listTab].list[i].children.splice(n,1)\r\n                            }\r\n                        }\r\n                        if (this.tabListItem[this.listTab].list[i].children.length == 0) {\r\n                            this.tabListItem[this.listTab].list.splice(i,1)\r\n                        }\r\n                    }\r\n                } else {\r\n                    for(let i=this.tabListItem[this.listTab].list.length-1; i>=0; i--) {\r\n                        if (this.tabListItem[this.listTab].list[i].children.length == 0) {\r\n                            this.tabListItem[this.listTab].list.splice(i,1)\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.tabListItem[this.listTab].onlyList = false\r\n                if (this.listTab == 0) {\r\n                    this.tabListItem[0].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children))\r\n                } else if (this.listTab == 1) {\r\n                    this.tabListItem[1].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.Service_index].children))\r\n                } else if (this.listTab == 2) {\r\n                    this.tabListItem[2].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.AdaptiveApplication_index].children))\r\n                } else if (this.listTab == 3) {\r\n                    this.tabListItem[3].list = JSON.parse(JSON.stringify(this.navigatorList[this.openProjectIndex].children[constant.Machines_index].children))\r\n                }\r\n            }\r\n        },\r\n        moveRigth() {\r\n            this.saveList.forEach ( list => {\r\n                if (this.radios == list.radio) {\r\n                    this.tabListItem[this.listTab].select.forEach( data => {\r\n                        if (data.name != data.uuid) {\r\n                            let isExist = false\r\n                            list.saveFile.forEach ( item => {\r\n                                if (item.name == data.name) {\r\n                                    isExist = true\r\n                                }\r\n                            })\r\n                            if (!isExist) {\r\n                                list.saveFile.push(data)\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n            })\r\n\r\n            this.tabListItem[this.listTab].select = []\r\n            if (this.checkAll) {\r\n                this.checkAll = false\r\n                this.tabListItem[this.listTab].checkAll = false\r\n            }\r\n        },\r\n        moveLeft() {\r\n            this.saveList.forEach( list => {\r\n                if (this.radios == list.radio && list.selectItem != undefined) {\r\n                    var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                    treeitem.forEach(data => {\r\n                        if (data.name != data.uuid) {\r\n                            if (data.uuid == list.saveFile[list.selectItem].uuid) {\r\n                                this.compareList(list.saveFile[list.selectItem], data.parent)\r\n                                list.saveFile.splice(list.selectItem,1)\r\n                                list.selectItem = undefined\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n            })\r\n        },\r\n        compareList(data, parent) {\r\n            this.tabListItem[0].select.push(data)\r\n            if (parent == constant.SomeIPServiceInterfaceDeployment_str || parent == constant.ServiceInterface_str || parent == constant.Client_str || parent == constant.Server_str ||\r\n                parent == constant.SomeIPClient_str || parent == constant.SomeIPServer_str || parent == constant.SomeIPToMachineMapping_str || \r\n                parent == constant.ToPortPrototypeMapping_str || parent == constant.RequiredSomeIP_str || parent == constant.ProvidedSomeIP_str ||\r\n                parent == constant.Error_str || parent == constant.Errorset_str || parent == constant.ErrorDomain_str ) {\r\n                this.tabListItem[1].select.push(data)\r\n            } else if (parent == constant.ProcesstoMachineMapping_str || parent == constant.SWComponents_str || parent == constant.Process_str ||\r\n                parent == constant.ProcessDesign_str || parent == constant.Executable_str || parent == constant.StartupConfig_str || \r\n                parent == constant.DeterministicClient_str ) {\r\n                this.tabListItem[2].select.push(data)\r\n            } else if (parent == constant.Machine_str || parent == constant.MachineDesigne_str || parent == constant.EthernetCluster_str ||\r\n                parent == constant.ModeDeclarationGroup_str || parent == constant.HWElement_str || parent == constant.HWCategory_str ) {\r\n                this.tabListItem[3].select.push(data)\r\n            }\r\n        },\r\n        btnSaveFile() {\r\n            this.$refs.saveloader.click()\r\n        },\r\n        uploadSaveFile () {\r\n            let file = this.$refs.saveloader.files[0];\r\n            if(!file || file.type !== 'text/plain') return;\r\n            \r\n            let reader = new FileReader();\r\n            reader.readAsText(file, \"UTF-8\");\r\n            reader.onload =  evt => {\r\n                this.text = evt.target.result;\r\n                const object = JSON.parse(evt.target.result)\r\n                this.saveList = []\r\n                object.forEach( item => {\r\n                    this.saveList.push(\r\n                        { radio: item.radio, \r\n                          savename: item.savename, \r\n                          label: item.label, \r\n                          selectItem:undefined, \r\n                          saveFile: item.saveFile, },\r\n                    )\r\n                })\r\n            }\r\n            reader.onerror = evt => {\r\n                console.error(evt);\r\n            }        \r\n        },\r\n        endDrag() {\r\n            this.saveList.forEach( list => {\r\n                let uniqueJson\r\n                uniqueJson = list.saveFile.filter((thing, index) => {\r\n                const _thing = JSON.stringify(thing)\r\n                return index === list.saveFile.findIndex(obj => {\r\n                    return JSON.stringify(obj) === _thing\r\n                })})\r\n                list.saveFile = uniqueJson.slice()\r\n            })\r\n        },\r\n        saveElement() {\r\n            var isValidation = this.$store.getters.getCheckValidate\r\n            if(isValidation && this.navigatorList[this.openProjectIndex].validation==false) {\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                var arrelement\r\n                this.saveList.forEach( list => {\r\n                    if (list.savename != '') {\r\n                        this.moveSaveFile = []\r\n                        list.saveFile.forEach (item => {\r\n                            arrelement = treeitem.find(data =>  data.uuid === item.uuid)\r\n                            this.moveSaveFile.push({parent: arrelement.parent, uuid: item.uuid})\r\n                        })\r\n                        this.$store.commit('saveElement', {list: this.moveSaveFile, saveName: list.savename+\".xml\"} )\r\n                    }\r\n                })\r\n                let today = new Date();  \r\n                this.$store.commit('saveList', {list: this.saveList, saveName: today.toLocaleString()+\".txt\"} )\r\n                this.cancelSave()\r\n            } else {\r\n                this.snackbar = true\r\n            }\r\n        },\r\n        cancelSave() {\r\n            this.tabListItem.forEach(ele => {\r\n                ele.list = []\r\n                ele.select = []\r\n                ele.checkAll = false\r\n                ele.onlyList = false\r\n                ele.openIds = []\r\n            })\r\n            this.dialogSaveWindow = false  \r\n            this.dialogOpen = false    \r\n            this.listTab = 0\r\n            this.moveSaveFile = []\r\n            this.radios = null\r\n            this.saveList = [ {radio:'A', savename:'', label: 'A Save File Name', selectItem:undefined, saveFile: [], },]\r\n        },\r\n        setOpenList(idx) {\r\n            this.tabListItem[idx].list.forEach(item => {\r\n                if(item.children != null && item.children.length > 0) {\r\n                    item.children.forEach(data => {\r\n                        if(data.children != null && data.children.length > 0) {\r\n                            data.children.forEach(ser => {\r\n                                if(ser.children != null && ser.children.length > 0) {\r\n                                    if(!this.tabListItem[idx].openIds.some(ele => ele === ser)){\r\n                                        this.tabListItem[idx].openIds.push(ser)\r\n                                    }\r\n                                }\r\n                            })\r\n                            if(!this.tabListItem[idx].openIds.some(ele => ele === data)){\r\n                                this.tabListItem[idx].openIds.push(data)\r\n                            }\r\n                        }\r\n                    })\r\n                    if(!this.tabListItem[idx].openIds.some(ele => ele === item)){\r\n                        this.tabListItem[idx].openIds.push(item)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>\r\n"]}]}