{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\appbar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\service\\src\\components\\appbar.vue","mtime":1638322707764},{"path":"D:\\source\\service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYXsNCiAgICBwYWRkaW5nOiAtNTsNCn0NCg=="},{"version":3,"sources":["appbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAohBA;AACA;AACA","file":"appbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-tooltip bottom> \r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex\" small icon v-bind=\"attrs\" v-on=\"on\" @click=\"navigation.shown = !navigation.shown\">\r\n                    <v-icon>mdi-menu</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>project menu</span>\r\n        </v-tooltip>\r\n        <v-dialog v-model='dialogNewProject' width=\"500\" >\r\n            <template v-slot:activator=\"{ on:ondialog}\">\r\n                <v-tooltip bottom>  \r\n                    <template v-slot:activator=\"{on:ontooltip}\">\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-on=\"{ ...ontooltip, ...ondialog }\">\r\n                            <v-icon>mdi-folder-plus</v-icon>\r\n                        </v-btn>\r\n                    </template>\r\n                    <span>add Profect</span>\r\n                </v-tooltip>\r\n            </template>\r\n            <v-card>\r\n                <v-card-title class=\"text-h6 green accent-1\"> Name New Project </v-card-title>\r\n                <v-card-text>\r\n                    <v-text-field single-line label=\"project name\" v-model=\"strProjectName\">\r\n                    </v-text-field>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"addproject()\" >\r\n                        Accept\r\n                    </v-btn>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelproject\">\r\n                        Cancel\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-tooltip bottom>  \r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\"  small icon v-bind=\"attrs\" v-on=\"on\" @click=\"onButtonClick\">\r\n                    <v-icon> mdi-open-in-app</v-icon>\r\n                </v-btn>\r\n                <input ref=\"uploader\" class=\"d-none\" type=\"file\" @change=\"uploadProject\">\r\n            </template>\r\n            <span>File input</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>  \r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\"  small icon v-bind=\"attrs\" v-on=\"on\" @click=\"dialogSaveProject=true\">\r\n                    <v-icon> mdi-content-save-settings</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>select save</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>  \r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-expand-all</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>expand all</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-collapse-all-outline</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>collapse all</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-undo</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>undo</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-redo</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>redo</span>\r\n        </v-tooltip>\r\n        <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn class=\"d-inline-flex ml-3 mr-1\" small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-play</v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <span>validate</span>\r\n        </v-tooltip>\r\n        <v-dialog v-model='dialogSaveProject' width=\"900\" persistent>\r\n            <v-card>\r\n                <v-card-title class=\"text-h6 green accent-1\"> Select Save Element  </v-card-title>\r\n                <v-card-text v-if=\"navigatorList.length === 0\" class=\"text-h3 grey--text text-center\">\r\n                    create a project\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <br>\r\n                    <v-row>\r\n                        <v-col cols=\"6\">\r\n                            <v-card v-if=\"isprojectOpen\" class=\"savetreeview\">\r\n                                <v-treeview v-model=\"selectSaveTree\" :items=\"navigatorList[openProjectIndex].children\" expand-icon=\"mdi-chevron-down\" selectable dense return-object open-all item-key=\"name\">\r\n                                    <template v-slot:prepend=\"{item}\">\r\n                                        <v-icon>{{item.icon}}</v-icon>\r\n                                        <v-icon color=\"red\" small class=\"a\">mdi mdi-alpha-a</v-icon>\r\n                                        <v-icon color=\"primary\" small class=\"a\">mdi mdi-alpha-b</v-icon>\r\n                                        <v-icon color=\"green\" small class=\"a\">mdi mdi-alpha-c</v-icon>\r\n                                    </template>\r\n                                </v-treeview>\r\n                            </v-card>\r\n                            <v-spacer></v-spacer>\r\n                            <v-checkbox v-model=\"checkAll\" label=\"Check All\" dense @click=\"checkAllLeft\"></v-checkbox>\r\n                        </v-col>\r\n                        <v-col cols=\"1\">\r\n                            <br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveARigth\" small ><v-icon>mdi-chevron-right</v-icon></v-btn>\r\n                            </v-row>\r\n                            <br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveALeft\" small ><v-icon>mdi-chevron-left</v-icon></v-btn>\r\n                            </v-row>\r\n                            <br><br><br><br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveBRigth\" small ><v-icon>mdi-chevron-right</v-icon></v-btn>\r\n                            </v-row>\r\n                            <br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveBLeft\" small ><v-icon>mdi-chevron-left</v-icon></v-btn>\r\n                            </v-row>\r\n                            <br><br><br><br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveCRigth\" small ><v-icon>mdi-chevron-right</v-icon></v-btn>\r\n                            </v-row>\r\n                            <br><br><br>\r\n                            <v-row>\r\n                                <v-btn @click=\"moveCLeft\" small ><v-icon>mdi-chevron-left</v-icon></v-btn>\r\n                            </v-row>\r\n                        </v-col>\r\n                        <v-col cols=\"5\">\r\n                            <!-- <v-row >\r\n                                <v-text-field v-model=\"saveAname\" label=\"A Save File Name\" placeholder=\"String\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                <v-card class=\"savefileview\">\r\n                                    <div v-if=\"moveASaveFile.length === 0\" class=\"text-h6 font-weight-light grey--text pa-4 text-center\">\r\n                                        Select element file\r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <v-list dense>\r\n                                            <v-list-item-group v-model=\"selectedAItem\" color=\"primary\">\r\n                                                <v-list-item v-for=\"(item, i) in moveASaveFile\" :key=\"i\" dense>\r\n                                                    <v-list-item-content>\r\n                                                        <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                                    </v-list-item-content>\r\n                                                </v-list-item>\r\n                                            </v-list-item-group>\r\n                                        </v-list>\r\n                                    </div>\r\n                                </v-card>\r\n                            </v-row>\r\n                            <br><br>\r\n                            <v-row>\r\n                                <v-text-field v-model=\"saveBname\" label=\"B Save File Name\" placeholder=\"String\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                <v-card class=\"savefileview\">\r\n                                    <div v-if=\"moveBSaveFile.length === 0\" class=\"text-h6 font-weight-light grey--text pa-4 text-center\">\r\n                                        Select element file\r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <v-list dense>\r\n                                            <v-list-item-group v-model=\"selectedBItem\" color=\"primary\">\r\n                                                <v-list-item v-for=\"(item, i) in moveBSaveFile\" :key=\"i\" dense>\r\n                                                    <v-list-item-content>\r\n                                                        <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                                    </v-list-item-content>\r\n                                                </v-list-item>\r\n                                            </v-list-item-group>\r\n                                        </v-list>\r\n                                    </div>\r\n                            </v-card>\r\n                            </v-row>\r\n                            <br><br>\r\n                            <v-row>\r\n                                <v-text-field v-model=\"saveCname\" label=\"C Save File Name\" placeholder=\"String\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                <v-card class=\"savefileview\">\r\n                                    <div v-if=\"moveCSaveFile.length === 0\" class=\"text-h6 font-weight-light grey--text pa-4 text-center\">\r\n                                        Select element file\r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <v-list dense>\r\n                                            <v-list-item-group v-model=\"selectedCItem\" color=\"primary\">\r\n                                                <v-list-item v-for=\"(item, i) in moveCSaveFile\" :key=\"i\" dense>\r\n                                                    <v-list-item-content>\r\n                                                        <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                                    </v-list-item-content>\r\n                                                </v-list-item>\r\n                                            </v-list-item-group>\r\n                                        </v-list>\r\n                                    </div>\r\n                                </v-card>\r\n                            </v-row> -->\r\n                                    <!-- <div class=\"list-item\" v-for=\"element in moveASaveFile\" :key=\"element.name\">\r\n                                    {{ element.name }}\r\n                                    </div> -->\r\n                            <v-text-field v-model=\"saveAname\" label=\"A Save File Name\" placeholder=\"String\" style=\"height: 35px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-list dense>\r\n                                <v-list-item-group v-model=\"selectedAItem\" color=\"primary\">\r\n                                    <draggable class=\"draggable-list\" :list=\"moveASaveFile\" group=\"my-group\">\r\n                                        <v-list-item v-for=\"(item, i) in moveASaveFile\" :key=\"i\" dense>\r\n                                            <v-list-item-content>\r\n                                                <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                            </v-list-item-content>\r\n                                        </v-list-item>\r\n                                    </draggable>\r\n                                </v-list-item-group>\r\n                            </v-list>\r\n                                <!-- <div class=\"list-item\" v-for=\"element in moveBSaveFile\" :key=\"element.name\">\r\n                                {{ element.name }}\r\n                                </div> -->\r\n                            <v-text-field v-model=\"saveBname\" label=\"B Save File Name\" placeholder=\"String\" style=\"height: 35px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-list dense>\r\n                                <v-list-item-group v-model=\"selectedBItem\" color=\"primary\">\r\n                                    <draggable class=\"draggable-list\" :list=\"moveBSaveFile\" group=\"my-group\">\r\n                                        <v-list-item v-for=\"(item, i) in moveBSaveFile\" :key=\"i\" dense>\r\n                                            <v-list-item-content>\r\n                                                <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                            </v-list-item-content>\r\n                                        </v-list-item>\r\n                                    </draggable>\r\n                                </v-list-item-group>\r\n                            </v-list>\r\n                                    <!-- <div class=\"list-item\" v-for=\"element in moveCSaveFile\" :key=\"element.name\">\r\n                                    {{ element.name }}\r\n                                    </div> -->\r\n                            <v-text-field v-model=\"saveCname\" label=\"C Save File Name\" placeholder=\"String\" style=\"height: 35px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-list dense>\r\n                                <v-list-item-group v-model=\"selectedCItem\" color=\"primary\">\r\n                                    <draggable class=\"draggable-list\" :list=\"moveCSaveFile\" group=\"my-group\">\r\n                                        <v-list-item v-for=\"(item, i) in moveCSaveFile\" :key=\"i\" dense>\r\n                                            <v-list-item-content>\r\n                                                <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n                                            </v-list-item-content>\r\n                                        </v-list-item>\r\n                                    </draggable>\r\n                                </v-list-item-group>\r\n                            </v-list>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn v-if=\"navigatorList.length === 0\" @click=\"dialogSaveProject=false\" color=\"primary\" text>\r\n                        OK\r\n                    </v-btn>\r\n                    <v-btn v-if=\"navigatorList.length > 0\"  color=\"primary\" text  @click=\"saveElement\" >\r\n                        Save\r\n                    </v-btn>\r\n                    <v-btn v-if=\"navigatorList.length > 0\"  color=\"primary\" text @click=\"cancelSave\">\r\n                        Cancel\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-dialog v-model='dialogSaveName' width=\"500\" persistent>\r\n            <v-card>\r\n                <v-card-title class=\"text-h6 green accent-1\">Save File Name</v-card-title>\r\n                <v-card-text>\r\n                    <v-text-field v-model=\"saveFileName\" :rules=\"rules.name\" placeholder=\"String\" class=\"lable-placeholer-color\" required></v-text-field>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"primary\" text  @click=\"saveElementname\" >\r\n                        Save\r\n                    </v-btn>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"primary\" text @click=\"cancelSavename\">\r\n                        Cancel\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\n\r\nexport default({\r\n    components: {draggable},\r\n    computed: {\r\n        // numProject () {\r\n        //     return this.$store.getters.projectCount\r\n        // },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n        ismakeProject() {\r\n            return this.$store.state.ismakeProject\r\n        },\r\n    },\r\n    watch: {\r\n        ismakeProject() { // project가 없는상태에서 다른 compoment들을 만들어 놓으니 에러가 떠서 만들어줌\r\n            this.isprojectOpen = true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            rules: { name:  [val => (val || '').length > 0 ]},\r\n            isprojectOpen: false,\r\n            dialogSaveName: false,\r\n            dialogNewProject: false,\r\n            dialogSaveProject: false,\r\n            strProjectName: null,\r\n            selectSaveTree: [],\r\n            moveASaveFile: [],\r\n            moveBSaveFile: [],\r\n            moveCSaveFile: [],\r\n            moveSaveFile: [],\r\n            selectedAItem: null,\r\n            selectedBItem: null,\r\n            selectedCItem: null,\r\n            activenode:[],\r\n            saveFileName: null,\r\n            saveAname: '',\r\n            saveBname: '',\r\n            saveCname: '',\r\n            checkAll: false,\r\n        }\r\n    },\r\n    methods: {\r\n        addproject () {\r\n            this.$store.commit('addProject', {name:this.strProjectName})\r\n            this.$store.commit('selectOpenProject', {openProjectIndex: (this.$store.getters.projectCount -1 )})\r\n            this.$store.commit('setmakeProject', {makeproject:true})\r\n            this.dialogNewProject = false\r\n            this.strProjectName = null\r\n        },\r\n        cancelproject () {\r\n            this.dialogNewProject = false\r\n            this.strProjectName = null\r\n        },\r\n        removeproject () {\r\n            alert(this.$store.s.projectCount)\r\n        },\r\n        uploadProject () {            \r\n            let file = this.$refs.uploader.files[0];\r\n            if(!file || file.type !== 'text/plain') return;\r\n            \r\n            let reader = new FileReader();\r\n            reader.readAsText(file, \"UTF-8\");\r\n            reader.onload =  evt => {\r\n                this.text = evt.target.result;\r\n                this.$store.commit('uploadFileprocess', {fileInfo:evt.target.result})\r\n            }\r\n            reader.onerror = evt => {\r\n                console.error(evt);\r\n            }        \r\n        },\r\n        saveElement() {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement\r\n\r\n            if (this.saveAname.length > 0) {\r\n                this.moveASaveFile.forEach(item => {\r\n                    arrelement = treeitem.find(data =>  data.uuid === item.uuid)\r\n                    this.moveSaveFile.push({parent: arrelement.parent, uuid: item.uuid})\r\n                })\r\n                this.$store.commit('saveElement', {list: this.moveSaveFile, saveName: this.saveAname+\".txt\"} )\r\n            }\r\n            if (this.saveBname.length > 0) {\r\n                this.moveBSaveFile.forEach(item => {\r\n                    arrelement = treeitem.find(data =>  data.uuid === item.uuid)\r\n                    this.moveSaveFile.push({parent: arrelement.parent, uuid: item.uuid})\r\n                })\r\n                this.$store.commit('saveElement', {list: this.moveSaveFile, saveName: this.saveBname+\".txt\"} )\r\n            }\r\n            if (this.saveCname.length > 0) {\r\n                this.moveCSaveFile.forEach(item => {\r\n                    arrelement = treeitem.find(data =>  data.uuid === item.uuid)\r\n                    this.moveSaveFile.push({parent: arrelement.parent, uuid: item.uuid})\r\n                })\r\n                this.$store.commit('saveElement', {list: this.moveSaveFile, saveName: this.saveCname+\".txt\"} )\r\n            }\r\n            this.cancelSave()\r\n        },\r\n        cancelSave() {\r\n            this.dialogSaveProject = false\r\n            this.selectSaveTree = []\r\n            this.moveASaveFile = []\r\n            this.moveBSaveFile = []\r\n            this.moveCSaveFile = []\r\n            this.moveSaveFile = []\r\n            this.selectedAItem = null\r\n            this.selectedBItem = null\r\n            this.selectedCItem = null\r\n            this.saveAname = ''\r\n            this.saveBname = ''\r\n            this.saveCname = ''\r\n        },\r\n        saveElementname() {\r\n            if (this.saveFileName.length > 0) {\r\n                //file 저장\r\n                this.$store.commit('saveElement', {list: this.moveSaveFile, saveName: this.saveFileName+\".txt\"} )\r\n                this.saveFileName = null\r\n                this.dialogSaveName = false\r\n                this.cancelSave()\r\n            }\r\n        },\r\n        cancelSavename() {\r\n            this.dialogSaveName = false\r\n            this.saveFileName = null\r\n        },\r\n        moveAllRigth() {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            treeitem.forEach(data => {\r\n                if (data.name != data.uuid ) {\r\n                    let isExist = false\r\n                    this.moveSaveFile.forEach(item =>{\r\n                        if (item.name == data.name) {\r\n                            isExist = true\r\n                        }})\r\n                    if (!isExist) {\r\n                        this.moveSaveFile.push(data)\r\n                    }\r\n            } })\r\n            this.moveSaveFile.forEach(data => {\r\n                let isExist = false\r\n                this.selectSaveTree.forEach(item => {\r\n                    if (data.name == item.name) {\r\n                        isExist = true\r\n                    }\r\n                })\r\n                if (!isExist) {\r\n                    this.selectSaveTree.push(data)\r\n                }\r\n            })\r\n        },\r\n        checkAllLeft() {\r\n            if (this.checkAll) {\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                this.selectSaveTree = []\r\n                treeitem.forEach(data => {\r\n                    if (data.name != data.uuid ) {\r\n                        this.selectSaveTree.push(data)\r\n                } })\r\n            } else {\r\n                this.selectSaveTree = []\r\n            }\r\n        },\r\n        moveARigth() {\r\n            this.selectSaveTree.forEach( data => {\r\n                console.log('moveRigth'+ data.name+\"..\"+data.uuid)\r\n                if (data.name != data.uuid ) {\r\n                    let isExist = false\r\n                    this.moveASaveFile.forEach(item =>{\r\n                        if (item.name == data.name) {\r\n                            isExist = true\r\n                        }})\r\n                    if (!isExist) {\r\n                        this.moveASaveFile.push(data)\r\n                    }\r\n                }\r\n            })\r\n            this.selectSaveTree = []\r\n            if (this.checkAll) {\r\n                 this.checkAll = false\r\n            }\r\n        },\r\n        moveALeft() {\r\n            this.selectSaveTree.push(this.moveASaveFile[this.selectedAItem])\r\n            this.moveASaveFile.splice(this.selectedAItem,1)\r\n        },\r\n        moveBRigth() {\r\n            this.selectSaveTree.forEach( data => {\r\n                console.log('moveRigth'+ data.name+\"..\"+data.uuid)\r\n                if (data.name != data.uuid ) {\r\n                    let isExist = false\r\n                    this.moveBSaveFile.forEach(item =>{\r\n                        if (item.name == data.name) {\r\n                            isExist = true\r\n                        }})\r\n                    if (!isExist) {\r\n                        this.moveBSaveFile.push(data)\r\n                    }\r\n                }\r\n            })\r\n            this.selectSaveTree = []\r\n            if (this.checkAll) {\r\n                 this.checkAll = false\r\n            }\r\n        },\r\n        moveBLeft() {\r\n            this.selectSaveTree.push(this.moveBSaveFile[this.selectedBItem])\r\n            this.moveBSaveFile.splice(this.selectedBItem,1)\r\n        },\r\n        moveCRigth() {\r\n            this.selectSaveTree.forEach( data => {\r\n                console.log('moveRigth'+ data.name+\"..\"+data.uuid)\r\n                if (data.name != data.uuid ) {\r\n                    let isExist = false\r\n                    this.moveCSaveFile.forEach(item =>{\r\n                        if (item.name == data.name) {\r\n                            isExist = true\r\n                        }})\r\n                    if (!isExist) {\r\n                        this.moveCSaveFile.push(data)\r\n                    }\r\n                }\r\n            })\r\n            this.selectSaveTree = []\r\n            if (this.checkAll) {\r\n                 this.checkAll = false\r\n            }\r\n        },\r\n        moveCLeft() {\r\n            this.selectSaveTree.push(this.moveCSaveFile[this.selectedCItem])\r\n            this.moveCSaveFile.splice(this.selectedCItem,1)\r\n        },\r\n\r\n\r\n        onButtonClick() {\r\n            this.$refs.uploader.click()\r\n        },\r\n    },\r\n})\r\n</script>\r\n<style>\r\n.a{\r\n    padding: -5;\r\n}\r\n</style>"]}]}