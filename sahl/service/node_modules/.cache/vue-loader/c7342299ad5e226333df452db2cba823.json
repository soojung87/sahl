{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\ModeDeclarationGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\ModeDeclarationGroup.vue","mtime":1667798186297},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ModeDeclarationGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ModeDeclarationGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=\"colorToolbar\" dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"shoeModeDeclaration\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Mode Declaration Group</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Mode Declaration Group</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputModeDeclarationName' outlined dense></v-text-field>\r\n                            <v-select v-model=\"element.initmode\" :items=\"element.modedeclaration\" item-value=\"name\" item-text=\"name\" label=\"Initial Mode\" clearable @click:clear='element.initmode=null' @click=\"setactiveUUID()\" outlined dense style=\"height: 45px;\" class=\"lable-placeholer-color\"></v-select>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showModeDeclarationItem\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isModeDeclarationOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Mode Declarations\r\n                                    <v-btn @click=\"isCheckModeDeclaration\" text x-small color=\"indigo\" v-if=\"isModeDeclarationOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isModeDeclarationOpenClose && isdeleteModeDeclaration\" @click=\"deleteModeDeclaration\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isModeDeclarationOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectModeDeclaration\" :headers=\"headerModeDeclaration\" :items=\"element.modedeclaration\" :items-per-page='$setNumTableList'\r\n                                            :show-select=\"isdeleteModeDeclaration\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteModeDeclaration\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @open=\"openModeDeclaration(idx)\" @cancel=\"cancelModeDeclaration\" @save=\"editModeDeclaration(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editModeDeclarationItem.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editModeDeclarationItem.value\" label=\"Value\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 35px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelModeDeclaration\" @save=\"addModeDeclaration()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editModeDeclarationItem.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-text-field v-model=\"editModeDeclarationItem.value\" label=\"Value\" placeholder=\"Int\" @click=\"setactiveUUID\" style=\"height: 35px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else>\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;INITIAL-MODE-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.initmode\" placeholder=\"Int\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;INITIAL-MODE-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;height:50px;\">&#60;MODE-DECLARATIONS&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextMD()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <v-row>\r\n                            <div class=\"text-editDialog\" style=\"height: 300px;\">\r\n                                <v-row v-for=\"(item, i) in editARXML.modedeclaration\" :key=\"i\" style=\"height: 100px;\">\r\n                                    <div>\r\n                                        <v-row style=\"height: 25px;margin:0px;\">\r\n                                            <v-btn style=\"margin: 15px -20px 0px 20px\" @click=\"deletTextMD(i)\" text x-small color=\"indigo\">\r\n                                                <v-icon>mdi-minus</v-icon>\r\n                                            </v-btn>\r\n                                            <label style=\"padding:10px;margin:2px 0px 2px 30px;\">&#60;MODE-DECLARATION&#62;</label>\r\n                                        </v-row>\r\n                                        <v-row style=\"height: 25px;margin:0px;\">\r\n                                            <label style=\"padding:10px;margin-left:90px;\">&#60;SHORT-NAME&#62;</label>\r\n                                            <v-text-field v-model=\"item.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                                        </v-row>\r\n                                        <v-row style=\"height: 25px;margin:0px;\">\r\n                                            <label style=\"padding:10px;margin-left:90px;\">&#60;VALUE&#62;</label>\r\n                                            <v-text-field v-model=\"item.value\" placeholder=\"Int\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                            <label style=\"padding:10px;\">&#60;&#47;VALUE&#62;</label>\r\n                                        </v-row>\r\n                                        <v-row style=\"height: 25px;margin:0px;\">\r\n                                            <label style=\"padding:10px;margin-left:75px;\">&#60;&#47;MODE-DECLARATION&#62;</label>\r\n                                        </v-row>\r\n                                    </div>\r\n                                </v-row>\r\n                            </div>\r\n                        </v-row>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;height:20px;\" >&#60;&#47;MODE-DECLARATIONS&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: { \r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        /*detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },*/\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: { name:  [val => (val || '').length > 0 ], },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: true,\r\n            dialogText: false,\r\n            editARXML: {name:'', initmode: null, modedeclaration: []},\r\n            editTextItem: { name: '', value: '', id: ''},\r\n            isModeDeclarationOpenClose: true,\r\n\r\n            isdeleteModeDeclaration: false,\r\n            headerModeDeclaration: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Value', sortable: false, value: 'value' },\r\n            ],\r\n            selectDelectModeDeclaration: [],\r\n            editModeDeclarationItem: { name: '', value: '', id: ''}\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n        EventBus.$on('Element-open', (isopen, uuid) => {\r\n            if (this.element.uuid == uuid) {\r\n                console.log(isopen)\r\n                this.iselementOpenClose = isopen\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        shoeModeDeclaration () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            if (this.iselementOpenClose) { //SWComponent RClient에서 3개가 같이 뜰수있음 그때 하나만 펼치고 나머지 다 접으려고\r\n                this.$store.commit('setOpenCloseCompuDataStrMachineModeD', {\r\n                                uuid: this.element.uuid, left: this.element.left, top: this.element.top,\r\n                                beforElement: constant.Process_str, closeElement: constant.Machine_str})\r\n            }\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLine')\r\n                document.getElementById(this.element.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n            })\r\n        },\r\n        showModeDeclarationItem () {\r\n            this.isModeDeclarationOpenClose = this.isModeDeclarationOpenClose ? false : true\r\n        },\r\n        inputModeDeclarationName() {\r\n            this.$store.commit('editModeDeclarationGroup', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isCheckModeDeclaration() {\r\n            if (this.isdeleteModeDeclaration == true) {\r\n                this.isdeleteModeDeclaration = false\r\n                this.selectDelectModeDeclaration = []\r\n            } else {\r\n                this.isdeleteModeDeclaration = true\r\n            }\r\n        },\r\n        deleteModeDeclaration () {\r\n            if (this.isdeleteModeDeclaration == true) {\r\n                this.$store.commit('deleteRefTable', {deleteName:'modeDeclar', deletItemList: this.selectDelectModeDeclaration, path: this.element.path, name: this.element.name})\r\n\r\n                this.element.modedeclaration = this.element.modedeclaration.filter(item => {\r\n                         return this.selectDelectModeDeclaration.indexOf(item) < 0 })\r\n                this.isdeleteModeDeclaration = false\r\n                this.selectDelectModeDeclaration = []\r\n            }\r\n        },\r\n        openModeDeclaration (idx) {\r\n            this.editModeDeclarationItem.name = this.element.modedeclaration[idx].name\r\n            this.editModeDeclarationItem.value = this.element.modedeclaration[idx].value\r\n        },\r\n        addModeDeclaration () {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.modedeclaration.some(item => item.id === n)\r\n            }\r\n            this.editModeDeclarationItem.id = n\r\n            const addObj = Object.assign({}, this.editModeDeclarationItem);\r\n            this.element.modedeclaration.push(addObj);\r\n            this.cancelModeDeclaration()\r\n        },\r\n        editModeDeclaration (idx) {\r\n            if (this.element.modedeclaration[idx].name != this.editModeDeclarationItem.name) {\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                            changeName: 'modeD', listname: this.editModeDeclarationItem.name, beforename:this.element.modedeclaration[idx].name} )\r\n            }\r\n            this.element.modedeclaration[idx].name = this.editModeDeclarationItem.name\r\n            this.element.modedeclaration[idx].value = this.editModeDeclarationItem.value\r\n            this.cancelModeDeclaration()\r\n        },\r\n        cancelModeDeclaration () {\r\n            this.editModeDeclarationItem.name = ''\r\n            this.editModeDeclarationItem.value = ''\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editModeDeclarationGroup', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.initmode = this.element.initmode\r\n            this.editARXML.modedeclaration = JSON.parse(JSON.stringify(this.element.modedeclaration))\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editModeDeclarationGroup', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n\r\n            this.editARXML.modedeclaration.forEach(element => {\r\n                if (element.name == this.editARXML.initmode) {\r\n                    this.element.initmode = this.editARXML.initmode\r\n                }\r\n            })\r\n\r\n            if (this.editARXML.modedeclaration.length > 0) {\r\n                var deleteItem = []\r\n                this.element.modedeclaration.forEach(item => {\r\n                    var isExistence = false\r\n                    this.editARXML.modedeclaration.forEach(data => {\r\n                        if (data.id == item.id) {\r\n                            isExistence = true\r\n                            if (data.name != item.name) {\r\n                                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                        changeName: 'modeD', listname: data.name, beforename: item.name} )\r\n                            }\r\n                        }\r\n                    })\r\n                    if (!isExistence) {\r\n                        deleteItem.push(item)\r\n                    }\r\n                })\r\n                if (deleteItem.length > 0)\r\n                {\r\n                    this.$store.commit('deleteRefTable', {deleteName:'modeDeclar', deletItemList: deleteItem, path: this.element.path, name: this.element.name})\r\n                }\r\n            } else {\r\n                if (this.element.modedeclaration.length > 0) {\r\n                    this.$store.commit('deleteRefTable', {deleteName:'modeDeclar', deletItemList: this.element.modedeclaration, path: this.element.path, name: this.element.name})\r\n                }\r\n            }\r\n            this.element.modedeclaration = JSON.parse(JSON.stringify(this.editARXML.modedeclaration))\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', initmode: null, modedeclaration: []}\r\n            this.editTextItem = { name: '', value: '', id: ''}\r\n            this.dialogText = false\r\n        },\r\n        newTextMD() {\r\n            this.editTextItem = { name: '', value: '', id: ''}\r\n\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++;\r\n                res = this.editARXML.modedeclaration.some(item => item.id === n)\r\n            }\r\n            this.editTextItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextItem)\r\n            this.editARXML.modedeclaration.push(addObj);\r\n        },\r\n        deletTextMD(idx) {\r\n            this.editARXML.modedeclaration.splice(idx,1)\r\n        },\r\n\r\n    },\r\n}\r\n</script>"]}]}