{"remainingRequest":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\D-noMoveLine\\src\\components\\Machine.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\D-noMoveLine\\src\\components\\Machine.vue","mtime":1626668976868},{"path":"D:\\source\\D-noMoveLine\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-noMoveLine\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubWFjaGluZSB7DQogICAgaGVpZ2h0OiA3NTBweDsNCn0NCg0K"},{"version":3,"sources":["Machine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA;AACA;AACA","file":"Machine.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"machine\" @mousedown=\"onMouseDown\">\r\n        <!-- <v-app>  레이아웃 요소를 배치 할 때 v-app 속성을 최상위에 사용 이렇게 안쪽에 사용하는 component에는 사용하면 안된다 -->\r\n        <v-container> \r\n            <v-card outlined max-height=\"300px\"> <!-- style='height:300px' 이렇게 하면 접었을때 배경이 하얗게 나옴 max-height해야지 접었을때 배경안나옴 -->\r\n                <v-toolbar :color=colorToolbar dark hide-on-scroll dense class=\"drag-handle\">\r\n                    <v-btn icon @click=\"shoeModeDeclaration\">\r\n                        <v-icon>mdi-heart</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>Machine</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text  v-if=\"iselementOpenClose\">\r\n                    <v-text-field type=\"text\" v-model=\"MachineName\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                    <v-text-field type=\"text\" v-model=\"MachineDesign\" label=\"Machine Design\" placeholder=\"Select Reference\" style=\"height: 45px;\" \r\n                                  id=\"MD\" append-outer-icon=\"mdi-arrow-right\"  @click:append-outer=\"callelement($event,2)\" @click=\"locationelement(2)\" outlined dense readonly></v-text-field>\r\n                    <v-text-field type=\"text\" v-model=\"DATimeOut\" label=\"Default-Application-TimeOut\" placeholder=\"Numeric Only(Unit Second)\" style=\"height: 45px;\" outlined dense></v-text-field>\r\n                    <v-tooltip bottom :disabled=\"MachineHWElement.length < 32\">\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <div  v-bind=\"attrs\" v-on=\"on\">\r\n                                <v-text-field type=\"text\" id=\"MHE\" v-model=\"MachineHWElement\" label=\"HW-Element\" append-outer-icon=\"mdi-arrow-right\" @click:append-outer=\"callelement($event,3), addHWElement\" @click=\"locationelement(3)\"  placeholder=\"Multi Select Reference\" style=\"height: 45px;\" outlined dense readonly></v-text-field>\r\n                            </div>\r\n                        </template>\r\n                        <span>{{MachineHWElement}}</span>\r\n                    </v-tooltip>\r\n                    <v-select :items=\"executableLaunch\" label=\"Executable Launch Behavior\" outlined dense></v-select>\r\n                </v-card-text>\r\n            </v-card>\r\n            <v-card outlined class=\"mx-auto\"  v-if=\"iselementOpenClose\">\r\n                <div class=\"subtitle-2\">Function Groups\r\n                    <v-btn text @click=\"addFunctionGroup\" x-small>\r\n                        <v-icon>mdi-plus</v-icon>\r\n                    </v-btn>\r\n                    <v-btn @click=\"deleteFunctionGroup\" text x-small>\r\n                        <v-icon>mdi-minus</v-icon>\r\n                    </v-btn>\r\n                    <v-text-field v-if=\"isaddFunctionGroup==true\" type=\"text\" v-model=\"editedfunctionGroupItem.name\" label=\"add name\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                    <v-text-field v-if=\"isaddFunctionGroup==true\" type=\"text\" v-model=\"editedfunctionGroupItem.type\" label=\"add type\" append-outer-icon=\"mdi-arrow-right\" @click=\"locationelement(4)\" @click:append-outer=\"addType(), callelement($event,4)\" readonly outlined dense style=\"height: 45px;\"></v-text-field>\r\n                </div>\r\n                <v-data-table v-model=\"selectFunctionGroup\" @click:row=\"showModeDeclaration\" :headers=\"headerFunctionGroup\" :items=\"functionGroupItem\" \r\n                                :show-select=\"isdeleteFunctionGroup\" item-key=\"name\" height=\"120px\" dense hide-default-footer>\r\n                    <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                        <v-simple-checkbox color=\"green\" :value=\"isSelected\" @input=\"select($event)\"></v-simple-checkbox>\r\n                    </template>\r\n                </v-data-table>\r\n            </v-card>\r\n            <v-card outlined  v-if=\"iselementOpenClose\">\r\n                <div class=\"subtitle-2\">Processors\r\n                    <v-btn text @click=\"lengthProcessor++\" x-small>\r\n                        <v-icon>mdi-plus</v-icon>\r\n                    </v-btn>\r\n                    <v-btn :disabled=\"!lengthProcessor\" text @click=\"lengthProcessor--\" x-small>\r\n                        <v-icon>mdi-minus</v-icon>\r\n                    </v-btn>\r\n                </div>\r\n                <v-tabs v-model=\"tabProcessor\" color=\"deep-purple accent-4\" height=\"20\">\r\n                    <v-tab v-for=\"item in processorItem\" :key=\"item.processorName\" > {{ item.processorName }} </v-tab>\r\n                </v-tabs>\r\n                <v-tabs-items v-model=\"tabProcessor\">\r\n                    <v-tab-item v-for=\"n in processorItem\" :key=\"n.processorName\">\r\n                        <v-simple-table dense height=\"100px\">\r\n                            <template v-slot:default>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"text-left\">\r\n                                            Core Name\r\n                                        </th>\r\n                                        <th class=\"text-left\">\r\n                                            ID\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"item in n.processorCoreItems\" :key=\"item.name\">\r\n                                        <td>{{ item.name }}</td>\r\n                                        <td>{{ item.id }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </template>\r\n                        </v-simple-table>\r\n                    </v-tab-item>\r\n                </v-tabs-items>\r\n            </v-card>\r\n            <v-card outlined v-if=\"iselementOpenClose\">\r\n                <div class=\"subtitle-2\">Module Instantiation\r\n                    <v-btn text @click=\"lengthModuleIns++\" x-small>\r\n                        <v-icon>mdi-plus</v-icon>\r\n                    </v-btn>\r\n                    <v-btn :disabled=\"!lengthModuleIns\" text @click=\"lengthModuleIns--\" x-small>\r\n                        <v-icon>mdi-minus</v-icon>\r\n                    </v-btn>\r\n                </div>\r\n                <v-tabs v-model=\"tabModuleIns\" color=\"deep-purple accent-4\" height=\"20\">\r\n                    <v-tab v-for=\"item in moduleInsItem\" :key=\"item.instantiationName\" > {{ item.instantiationName }} </v-tab>\r\n                </v-tabs>\r\n                <v-tabs-items v-model=\"tabModuleIns\">\r\n                    <v-tab-item v-for=\"n in moduleInsItem\" :key=\"n.instantiationName\">\r\n                        <v-simple-table dense height=\"100px\">\r\n                            <template v-slot:default>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"text-left\">\r\n                                            Resource Group Name\r\n                                        </th>\r\n                                        <th class=\"text-left\">\r\n                                            CPU Usage\r\n                                        </th>\r\n                                        <th class=\"text-left\">\r\n                                            Memory Usage\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"item in n.resourceGroup\" :key=\"item.name\">\r\n                                        <td>{{ item.name }}</td>\r\n                                        <td>{{ item.cpuUsage }}</td>\r\n                                        <td>{{ item.memoryUsage }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </template>\r\n                        </v-simple-table>\r\n                    </v-tab-item>\r\n                </v-tabs-items>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 || 'This field is required'],\r\n            },\r\n            colorToolbar: \"#6A5ACD\",\r\n            MachineName: '',\r\n            MachineDesign: '',\r\n            DATimeOut: '',\r\n            MachineHWElement: 'SUPER_MACHINE_MEMORY_EEPROM',\r\n            executableLaunch: [ 'STRICT-MODE', 'MONITOR-MODE', 'NO-TRUSTED-PLATFORM-SUPPORT'],\r\n            functionGroupItem: [\r\n                { name: 'Aaa',\r\n                  type: 'CCU20_Machine_MachineState_ModeDeclarationGroup'\r\n                },\r\n                { name: 'Bbbb',\r\n                  type: 'CCU20_Machine_Network_Storage_ModeDeclarationGroup'\r\n                },\r\n                { name: 'Ccccc',\r\n                  type: 'CCU20_Machine_OTA_ModeDeclarationGroup'\r\n                },\r\n            ],\r\n            headerFunctionGroup: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type', sortable: false, value: 'type' },\r\n            ],\r\n            editedfunctionGroupItem: {\r\n                name: '',\r\n                type: '',\r\n            },\r\n            defaultfunctionGroupItem: {\r\n                name: '',\r\n                type: '',\r\n            },\r\n            isdeleteFunctionGroup: false,\r\n            isaddFunctionGroup: false,\r\n            selectFunctionGroup: [],\r\n            tabProcessor: null,\r\n            lengthProcessor: 1,\r\n            processorItem: [ \r\n                {   processorName: 'processor01',\r\n                    processorCoreItems: [\r\n                        { name: '1', id: '1', },\r\n                        { name: '2', id: '2', },\r\n                        { name: '3', id: '3', },\r\n                ]},\r\n                {\r\n                    processorName: 'processor02',\r\n                    processorCoreItems: [\r\n                        { name: '11', id: '1111'},\r\n                        { name: '22', id: '2222'},\r\n                        { name: '33', id: '3333'},\r\n                        { name: '44', id: '4444'},\r\n                ]},\r\n                {\r\n                    processorName: 'processor03',\r\n                    processorCoreItems: [\r\n                        { name: '11', id: '1111'},\r\n                ]}\r\n            ],\r\n            lengthModuleIns: 1,\r\n            tabModuleIns: null,\r\n            moduleInsItem: [\r\n                {   instantiationName: 'instant01',\r\n                    resourceGroup: [\r\n                        { name: '11', cpuUsage: '11', memoryUsage: '11'},\r\n                        { name: '22', cpuUsage: '22', memoryUsage: '22'},\r\n                        { name: '22', cpuUsage: '22', memoryUsage: '22'},\r\n                ]},\r\n            ],\r\n            iselementOpenClose: true,\r\n            counter: 0,\r\n            numOutsideID: null, // 화면안에 있는지 밖에 있는지 구별해 주려고, 화면 밖에 있는 id값이 들어온다\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('reponse-outsideView', (id, isoutsideView) => {\r\n            //alert(id + '+' + isoutsideView)\r\n            if (isoutsideView == true) {\r\n                this.numOutsideID = id\r\n            } else {\r\n                this.numOutsideID = null\r\n            }\r\n        })\r\n        EventBus.$on(\"select-functionGrouptype\", (functionType) => {\r\n            this.editedfunctionGroupItem.type = functionType\r\n        })\r\n        EventBus.$on(\"selected-HWElement\", (editeHWElement) => {\r\n            this.MachineHWElement = editeHWElement.join(', ')\r\n        })\r\n        EventBus.$on(\"onActivated-Machin\", (onActivated) => { // 0: false 1: view position 2:activated\r\n            if (onActivated == 2) { \r\n                this.colorToolbar =\"#FF1493\" \r\n            } else if (onActivated == 1){ \r\n                this.colorToolbar = \"#A52A2A\" \r\n            } else if (onActivated == 0){\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        onMouseDown () {\r\n           // EventBus.$emit('active-element',1) //move를 toolbar로만 바꾸니까 딸린 창을 누르면 active가 안되서 이벤트로 전해준다.\r\n        },\r\n        shoeModeDeclaration () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n        },\r\n        locationelement (n) {\r\n            EventBus.$emit('call-component',n, 1)\r\n        },\r\n        callelement(e,n){ //click 하면 select 1  dbclick하면 call component 2\r\n            //alert('callelement')\r\n            // this.counter++; /* 클릭하면 어디있는지 알려주고 더블클릭하면 그쪽으로 가게 해놨음 */\r\n            // if(this.counter == 1) {\r\n            //     this.timer = setTimeout(() => {\r\n            //     this.counter = 0;\r\n            //     EventBus.$emit('call-component',n, 1)\r\n            //     }, 300);\r\n\r\n            //     return;\r\n            // }\r\n      \r\n            // clearTimeout(this.timer);  \r\n            // this.counter = 0;\r\n            // if (this.numOutsideID == 3) { // 화면보다 밖에 있으면 가상으로 하나더 보이게 ---지금은 hwelement만했음\r\n            //     EventBus.$emit('virtual-diagram', this.numOutsideID)\r\n            //     this.numOutsideID = null\r\n            // } else { //화면 안에 있으면 불러준다.\r\n            //     EventBus.$emit('call-component',n, 2) //emits button clicking action to parent component\r\n            // }\r\n\r\n            //요게 minimap을 넣어놓으면 minimap안에 있는걸 가리키기 떄문에 안먹는다.  \r\n            // 화면밖에 위치하냐 알아보는 코드\r\n            const target = document.getElementById('hwelement'); // 요소의 id 값\r\n            const clientRect = target.getBoundingClientRect(); // DomRect 구하기 (각종 좌표값이 들어있는 객체)\r\n            const relativeTop = clientRect.top; // Viewport의 시작지점을 기준으로한 상대좌표 Y 값.\r\n            const relativeLeft = clientRect.left\r\n            var isoutsideViewPort\r\n\r\n            //alert(document.documentElement.clientHeight + '+' + relativeTop)\r\n            if ( relativeTop < 0  || relativeTop > document.documentElement.clientHeight ||\r\n                 relativeLeft < 0 || relativeLeft > document.documentElement.clientWidth ) {\r\n                isoutsideViewPort = true\r\n            } else {\r\n                isoutsideViewPort = false\r\n            }\r\n\r\n            if (isoutsideViewPort) { // 화면보다 밖에 있으면 가상으로 하나더 보이게 ---지금은 hwelement만했음\r\n                 EventBus.$emit('virtual-diagram', 3)\r\n                 this.numOutsideID = null\r\n            } else { //화면 안에 있으면 불러준다.\r\n                 EventBus.$emit('call-component',n, 2) //emits button clicking action to parent component\r\n            }\r\n        },\r\n        addHWElement () {\r\n            var a = true\r\n            EventBus.$emit(\"select-HWElement\", a);\r\n        },\r\n        showModeDeclaration (item) {\r\n            EventBus.$emit(\"open-modeDeclaration\", item.type, 4); //mode declaration 부를때 활성화창해주려고 3번 mode declaration\r\n            this.locationelement(4)\r\n        },\r\n        addFunctionGroup () {\r\n            if (this.isaddFunctionGroup == true) {\r\n                if (this.editedfunctionGroupItem.name != '') {\r\n                    this.functionGroupItem.push(this.editedfunctionGroupItem)\r\n                }\r\n                this.editedfunctionGroupItem = Object.assign({}, this.defaultfunctionGroupItem) \r\n                this.isaddFunctionGroup = false\r\n            } else {\r\n                this.isaddFunctionGroup = true\r\n            }\r\n        },\r\n        addType() {\r\n            EventBus.$emit(\"select-modedeclaration\", this.isaddFunctionGroup);\r\n        },\r\n        deleteFunctionGroup () {\r\n            if (this.isdeleteFunctionGroup == true) {\r\n                this.functionGroupItem = this.functionGroupItem.filter(item => {\r\n                         return this.selectFunctionGroup.indexOf(item) < 0 })\r\n                this.isdeleteFunctionGroup = false\r\n                this.selectFunctionGroup = []\r\n            } else {\r\n                this.isdeleteFunctionGroup = true\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.machine {\r\n    height: 750px;\r\n}\r\n\r\n</style>\r\n"]}]}