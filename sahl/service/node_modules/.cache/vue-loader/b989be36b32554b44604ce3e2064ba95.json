{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\ToPortPrototype.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\ToPortPrototype.vue","mtime":1667798320311},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ToPortPrototype.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0NA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"ToPortPrototype.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showToPortPrototype\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Service Instance To Port Prototype Mapping</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Service Instance To Port Prototype Mapping</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputToPortPrototypeName' @click=\"setHWCategorySelect()\" outlined dense></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <!-- <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover> -->\r\n                                    <v-btn text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-chevron-double-right</v-icon>\r\n                                    </v-btn>\r\n                                    Port Prototype Iref\r\n                                </div>\r\n                                <v-card-text v-if=\"isPortOpenClose\">\r\n                                    <v-select v-model=\"element.selectPort\" :items=\"selectPortList\" @change=\"inputSelectPort\" clearable @click:clear='clearPort()' label=\"Select Port Prototype\" @click=\"clickOtherFields()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                    <v-row style=\"height: 45px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.porttype\" readonly @click=\"setPortSelect()\" :style=\"refPort ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                         clearable @click:clear='clearPort()' label=\"Type TReference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/toportport'\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setPortList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list v-if=\"element.selectPort != null\">\r\n                                                    <v-list-item v-for=\"(item, i) in selPortPrototype\" :key=\"i\" link @click=\"setPortPrototype(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-list-item v-if=\"selPortPrototype == null || (selPortPrototype !=null && selPortPrototype.length == 0)\">\r\n                                                        <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 60px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.context\" readonly @click=\"setContextSelect()\" :style=\"refContext ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                         clearable @click:clear='clearContext()' label=\"Context Root SW Component Prototype Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/toportcontext'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setContextList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list>\r\n                                                    <v-list-item v-for=\"(item, i) in selContext\" :key=\"i\" link @click=\"setContextRef(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-list-item v-if=\"selContext.length == 0\">\r\n                                                        <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-row style=\"height: 70px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.process\" readonly @click=\"setProcessSelect()\" :style=\"refProcessD ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                 clearable @click:clear='clearProcess()' label=\"Process Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/toportprocess'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcessRef(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <!-- <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showServiceIns\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isServiceInsOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover> -->\r\n                                    <v-btn text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-chevron-double-right</v-icon>\r\n                                    </v-btn>\r\n                                    Service Instance Reference\r\n                                </div>\r\n                                <v-card-text v-if=\"isServiceInsOpenClose\">\r\n                                    <v-select v-model=\"element.selectServiceIns\" :items=\"selectServiceInsList\" @change=\"inputSelectServiceIns\" clearable @click:clear='clearServiceIns()' label=\"Executable Launch Behavior\" @click=\"clickOtherFields()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                    <v-row style=\"height: 60px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.serviceIns\" readonly @click=\"setServiceInsSelect()\" :style=\"refService ? 'height: 43px;border:solid red 2px' : ''\"\r\n                                                         clearable @click:clear='clearServiceIns()' label=\"Type TReference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/toportservice'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setServiceInsList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list v-if=\"element.selectServiceIns != null\">\r\n                                                    <v-list-item v-for=\"(item, i) in selServiceIns\" :key=\"i\" link @click=\"setServiceIns(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceIns\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else>\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <label style=\"padding:10px;\">&#60;PORT-PROTOTYPE-IREF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;margin:2px 0px 2px 30px;\">&#60;TARGET-PORT-PROTOTYPE-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.porttype\" placeholder=\"Path\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;TARGET-PORT-PROTOTYPE-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 35px;\">\r\n                            <label style=\"padding:10px;margin:2px 0px 2px 30px;\">&#60;CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <v-text-field v-model=\"editARXML.context\" placeholder=\"Path\" style=\"margin:2px 0px 2px 80px\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                        </v-row>\r\n                        <v-row style=\"height: 25px;\">\r\n                            <label style=\"padding:10px;margin:2px 0px 2px 30px;\">&#60;&#47;CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;&#47;PORT-PROTOTYPE-IREF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;PROCESS-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.process\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;PROCESS-REF&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;SERVICE-INSTANCE-REF&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.serviceIns\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SERVICE-INSTANCE-REF&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        /*detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },*/\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: true,//this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogText: false,\r\n            editARXML: {name:'', selectPort:null, porttype: null, context: null, process:null, selectServiceIns: null, serviceIns: null},\r\n            isPortOpenClose: true,\r\n            isServiceInsOpenClose: true,\r\n            selectPortList: ['P-PORT-PROTOTYPE','R-PORT-PROTOTYPE', 'PR-PORT-PROTOTYPE'],\r\n            selPortPrototype: null,\r\n            selProcess: this.$store.getters.getProcessDesign,\r\n            selectServiceInsList: [\"PROVIDED-SOMEIP-SERVICE-INSTANCE\", \"REQUIRED-SOMEIP-SERVICE-INSTANCE\"],\r\n            selServiceIns: null,\r\n            selContext: this.$store.getters.getRootSWComponentPrototype,\r\n            refPort: false,\r\n            refContext: false,\r\n            refProcessD: false,\r\n            refService: false,\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n        EventBus.$on(this.element.uuid, (refNum, isDeleteItem, item) => {\r\n            if (isDeleteItem) {\r\n                if (this.refPort && item == 'port') {\r\n                    this.clickOtherFields()\r\n                }\r\n            } else {\r\n                this.refPort = false\r\n                this.refContext = false\r\n                this.refProcessD = false\r\n                this.refService = false\r\n\r\n                if (refNum == 1) {\r\n                    this.refPort = true\r\n                } else if (refNum == 2) {\r\n                    this.refContext = true\r\n                } else if (refNum == 3) {\r\n                    this.refProcessD = true\r\n                } else if (refNum == 4) {\r\n                    this.refService = true\r\n                }\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showToPortPrototype () {\r\n            this.clickOtherFields()\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLine')\r\n            })\r\n        },\r\n        showPort() {\r\n            this.isPortOpenClose = this.isPortOpenClose ? false : true\r\n        },\r\n        showServiceIns() {\r\n            this.isServiceInsOpenClose = this.isServiceInsOpenClose ? false : true\r\n        },\r\n        inputToPortPrototypeName () {\r\n            this.$store.commit('editToPortPrototype', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            //this.$store.commit('changeNameDataConstr', {uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clickOtherFields() {\r\n            if (this.refPort || this.refContext || this.refProcessD || this.refService) {\r\n                this.deleteOpenElement()\r\n                this.refPort = false\r\n                this.refContext = false\r\n                this.refProcessD = false\r\n                this.refService = false\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        inputSelectPort() {\r\n            this.clearPort()\r\n            this.setPortList()\r\n        },\r\n        setPortSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.selectPort != null) {\r\n                this.refPort = true\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportport')\r\n                    if (endLine == undefined) {\r\n                        if (this.element.selectPort == \"P-PORT-PROTOTYPE\") {\r\n                            endLine = this.$store.getters.getSWComponentPath(this.element.porttype, 1)\r\n                        } else if (this.element.selectPort == \"R-PORT-PROTOTYPE\") {\r\n                            endLine = this.$store.getters.getSWComponentPath(this.element.porttype, 2)\r\n                        } else if (this.element.selectPort == \"PR-PORT-PROTOTYPE\") {\r\n                            endLine = this.$store.getters.getSWComponentPath(this.element.porttype, 3)\r\n                        }\r\n                    }\r\n                    if (endLine != null) {\r\n                        this.$store.commit('editSWComponents', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.SWComponents_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('new-line', this.element.uuid+'/toportport', endLine)\r\n                            document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        })\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportport', end:endLine, iscircle:false, refNum:1})\r\n                        //this.$store.commit('setDetailView', {uuid: endLine, element: constant.SWComponents_str} )\r\n                        //document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        //EventBus.$emit('active-element', endLine)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        setPortList() {\r\n            if (this.element.selectPort == \"P-PORT-PROTOTYPE\") {\r\n                this.selPortPrototype = this.$store.getters.getPPortPrototype\r\n            } else if (this.element.selectPort == \"R-PORT-PROTOTYPE\") {\r\n                this.selPortPrototype = this.$store.getters.getRPortPrototype\r\n            } else if (this.element.selectPort == \"PR-PORT-PROTOTYPE\") {\r\n                this.selPortPrototype = this.$store.getters.getPRPortPrototype\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        setPortPrototype(item){\r\n            this.clickOtherFields()\r\n            if( this.element.porttype != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportport')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/toportport')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refPort = true\r\n                    this.$store.commit('editSWComponents', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.SWComponents_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportport', this.element.uuid+'/toportport', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportport', end:item.uuid, iscircle:false, refNum:1})\r\n                }\r\n                this.element.porttype = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refPort = true\r\n                    this.$store.commit('editSWComponents', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.SWComponents_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportport', this.element.uuid+'/toportport', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportport', end:item.uuid, iscircle:false, refNum:1})\r\n                }\r\n\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        clearPort() {\r\n            this.element.porttype = null\r\n            this.selPortPrototype = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportport')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/toportport')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        clearContext() {\r\n            this.element.context = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportcontext')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/toportcontext')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setContextSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.context != null) {this.refContext = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportcontext')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getRootSWComponentPrototypePath(this.element.context)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/toportcontext', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportcontext', end:endLine, iscircle:false, refNum:2})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.Executable_str} )\r\n                    //document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    //EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setContextList() {\r\n            this.selContext = this.$store.getters.getRootSWComponentPrototype\r\n            this.setactiveUUID()\r\n        },\r\n        setContextRef(item){\r\n            this.clickOtherFields()\r\n            if( this.element.context != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportcontext')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/toportcontext')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refContext = true\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportcontext', this.element.uuid+'/toportcontext', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportcontext', end:item.uuid, iscircle:false, refNum:2})\r\n                }\r\n                this.element.context = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refContext = true\r\n                    this.$store.commit('editExecutable', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.Executable_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportcontext', this.element.uuid+'/toportcontext', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportcontext', end:item.uuid, iscircle:false, refNum:2})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        clearProcess() {\r\n            this.element.process = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportprocess')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/toportprocess')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setProcessSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.process != null) {this.refProcessD = true}\r\n            if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportprocess')\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getProcessDesignPath(this.element.process)\r\n                }\r\n                if (endLine != null) {\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: endLine, top: this.element.top + 175, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        EventBus.$emit('new-line', this.element.uuid+'/toportprocess', endLine)\r\n                        document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportprocess', end:endLine, iscircle:false, refNum:3})\r\n                    //this.$store.commit('setDetailView', {uuid: endLine, element: constant.ProcessDesign_str} )\r\n                    //document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    //EventBus.$emit('active-element', endLine)\r\n                }\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcessDesign\r\n            this.setactiveUUID()\r\n        },\r\n        setProcessRef(item){\r\n            this.clickOtherFields()\r\n            if( this.element.process != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportprocess')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/toportprocess')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refProcessD = true\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 175, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportprocess', this.element.uuid+'/toportprocess', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportprocess', end:item.uuid, iscircle:false, refNum:3})\r\n                }\r\n                this.element.process = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refProcessD = true\r\n                    this.$store.commit('editProcessDesign', {compo:\"drag\", uuid: item.uuid, top: this.element.top + 175, left: this.element.left + this.$setPositionLeft} )\r\n                    this.$store.commit('setzIndexVisible', {parent:constant.ProcessDesign_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportprocess', this.element.uuid+'/toportprocess', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportprocess', end:item.uuid, iscircle:false, refNum:3})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            this.$store.commit('addElementProcessDesign', {\r\n                name: this.$store.getters.getNameProcessDesign, path: '', input: false,\r\n                top: this.element.top + 175, left: this.element.left + this.$setPositionLeft, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                executableref: null, determin: [],\r\n            })\r\n            EventBus.$emit('add-element', constant.ProcessDesign_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editToPortPrototype', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        inputSelectServiceIns() {\r\n            this.clearServiceIns()\r\n            this.setServiceInsList()\r\n        },\r\n        clearServiceIns() {\r\n            this.element.serviceIns = null\r\n            this.selServiceIns = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportservice')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/toportservice')\r\n            }\r\n            this.clickOtherFields()\r\n        },\r\n        setServiceInsSelect() {\r\n            this.clickOtherFields()\r\n            if (this.element.selectServiceIns != null) {\r\n                this.refService = true\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportservice')\r\n                    if (endLine == undefined) {\r\n                        if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                            endLine = this.$store.getters.getProvidedSomeIPPath(this.element.serviceIns)\r\n                        } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                            endLine = this.$store.getters.getRequiredSomeIPPath(this.element.serviceIns)\r\n                        }\r\n                    }\r\n                    if (endLine != null) {\r\n                        if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                            //this.$store.commit('setDetailView', {uuid: endLine, element: constant.ProvidedSomeIP_str} )\r\n                            this.$store.commit('editProvidedSomeIP', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                            this.$store.commit('setzIndexVisible', {parent:constant.ProvidedSomeIP_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                        } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                            this.$store.commit('editRequiredSomeIP', {compo:\"drag\", uuid: endLine, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                            this.$store.commit('setzIndexVisible', {parent:constant.RequiredSomeIP_str, uuid: endLine, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                            //this.$store.commit('setDetailView', {uuid: endLine, element: constant.RequiredSomeIP_str} )\r\n                        }\r\n                        this.$nextTick(() => { \r\n                            EventBus.$emit('new-line', this.element.uuid+'/toportservice', endLine)\r\n                            document.getElementById(endLine+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        })\r\n                        this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportservice', end:endLine, iscircle:false, refNum:4})\r\n                        //document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        //EventBus.$emit('active-element', endLine)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        setServiceInsList() {\r\n            if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                this.selServiceIns = this.$store.getters.getProvidedSomeIP\r\n            } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                this.selServiceIns = this.$store.getters.getRequiredSomeIP\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        setServiceIns(item){\r\n            this.clickOtherFields()\r\n            if( this.element.serviceIns != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportservice')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/toportservice')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.refService = true\r\n                    if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                        this.$store.commit('editProvidedSomeIP', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.ProvidedSomeIP_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                        this.$store.commit('editRequiredSomeIP', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.RequiredSomeIP_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    }\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportservice', this.element.uuid+'/toportservice', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportservice', end:item.uuid, iscircle:false, refNum:4})\r\n\r\n                }\r\n                this.element.serviceIns = item.name\r\n            } else {\r\n                if (this.$store.getters.getDeleteOpenElement(this.element.uuid)+1 == this.$store.state.openElement.length) {\r\n                    this.refService = true\r\n                    if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                        this.$store.commit('editProvidedSomeIP', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.ProvidedSomeIP_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                        this.$store.commit('editRequiredSomeIP', {compo:\"drag\", uuid: item.uuid, top: this.element.top, left: this.element.left + this.$setPositionLeft} )\r\n                        this.$store.commit('setzIndexVisible', {parent:constant.RequiredSomeIP_str, uuid: item.uuid, isVisible: true, compo: 'visible', startUUID: this.element.uuid} )\r\n                    }\r\n                    this.$nextTick(() => { \r\n                        this.newLine(this.element.uuid+'/toportservice', this.element.uuid+'/toportservice', item.uuid, true)\r\n                        document.getElementById(item.uuid+1).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    })\r\n                    this.$store.commit('setViewLineInfo', {start:this.element.uuid+'/toportservice', end:item.uuid, iscircle:false, refNum:4})\r\n                }\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newServiceIns() {\r\n            if (this.element.selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\") {\r\n                this.$store.commit('addElementProvidedSomeIP', {\r\n                    name: this.$store.getters.getNameProvidedSomeIP, path: '', input: false,\r\n                    top: this.element.top - 50, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, someipserver: null, id: '', eventP: [], method: [], eventG: [],\r\n                })\r\n                EventBus.$emit('add-element', constant.ProvidedSomeIP_str)\r\n            } else if (this.element.selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\") {\r\n                this.$store.commit('addElementRequiredSomeIP', {  //deployref, clientref,ver는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameRequiredSomeIP, path: '', input: false,\r\n                    top: this.element.top + 50, left: this.element.left + this.$setPositionLeft, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, minover: '', id: '', clientref: null, ver: null, method: [], requiredevent: [],\r\n                })\r\n                EventBus.$emit('add-element', constant.RequiredSomeIP_str)\r\n            }\r\n            this.$store.commit('editToPortPrototype', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editToPortPrototype', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n                this.deleteOpenElement()\r\n            }\r\n        },\r\n        deleteOpenElement() {\r\n            //EventBus.$emit('delete-line', this.$store.getters.getDeleteOpenElement(this.element.uuid))\r\n            this.$store.commit('deleteOpenElemnt', {uuid: this.element.uuid, isDeleteAll: false, startUUID: this.element.uuid} )\r\n        },\r\n        newLine(startLine, drawLine, endLine, isView) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            if (isView) {\r\n                EventBus.$emit('new-line', drawLine, endLine)\r\n            }\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.porttype = this.element.porttype\r\n            this.editARXML.context = this.element.context\r\n            this.editARXML.process = this.element.process\r\n            this.editARXML.serviceIns = this.element.serviceIns\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editToPortPrototype', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n\r\n            var endLine = null, changEndLine = null\r\n            if (this.editARXML.porttype != this.element.porttype) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportport')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/toportport')\r\n                }\r\n                changEndLine = this.$store.getters.getSWComponentPath(this.editARXML.porttype,1)\r\n                if (changEndLine != null) {\r\n                    this.element.selectPort = \"P-PORT-PROTOTYPE\"\r\n                    this.newLine(this.element.uuid+'/toportport', this.element.uuid+'/toportport', changEndLine, false)\r\n                } else {\r\n                    changEndLine = this.$store.getters.getSWComponentPath(this.editARXML.porttype,2)\r\n                    if (changEndLine != null) {\r\n                        this.element.selectPort = \"R-PORT-PROTOTYPE\"\r\n                        this.newLine(this.element.uuid+'/toportport', this.element.uuid+'/toportport', changEndLine, false)\r\n                    } else {\r\n                        changEndLine = this.$store.getters.getSWComponentPath(this.editARXML.porttype,3)\r\n                        if (changEndLine != null) {\r\n                            this.element.selectPort = \"PR-PORT-PROTOTYPE\"\r\n                            this.newLine(this.element.uuid+'/toportport', this.element.uuid+'/toportport', changEndLine, false)\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n            this.element.porttype = this.editARXML.porttype\r\n\r\n            if (this.editARXML.context != this.element.context) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportcontext')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/toportcontext')\r\n                }\r\n                changEndLine = this.$store.getters.getRootSWComponentPrototypePath(this.editARXML.context)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/toportcontext', this.element.uuid+'/toportcontext', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.context = this.editARXML.context\r\n\r\n            if (this.editARXML.process != this.element.process) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportprocess')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/toportprocess')\r\n                }\r\n                changEndLine = this.$store.getters.getProcessDesignPath(this.editARXML.process)\r\n                if (changEndLine != null) {\r\n                    this.newLine(this.element.uuid+'/toportprocess', this.element.uuid+'/toportprocess', changEndLine, false)\r\n                }\r\n            }\r\n            this.element.process = this.editARXML.process\r\n\r\n            if (this.editARXML.serviceIns != this.element.serviceIns) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/toportservice')\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/toportservice')\r\n                }\r\n                changEndLine = this.$store.getters.getProvidedSomeIPPath(this.editARXML.serviceIns)\r\n                if (changEndLine != null) {\r\n                    this.element.selectServiceIns = \"PROVIDED-SOMEIP-SERVICE-INSTANCE\"\r\n                    this.newLine(this.element.uuid+'/toportservice', this.element.uuid+'/toportservice', changEndLine, false)\r\n                } else {\r\n                    changEndLine = this.$store.getters.getRequiredSomeIPPath(this.editARXML.serviceIns)\r\n                    if (changEndLine != null) {\r\n                        this.element.selectServiceIns = \"REQUIRED-SOMEIP-SERVICE-INSTANCE\"\r\n                        this.newLine(this.element.uuid+'/toportservice', this.element.uuid+'/toportservice', changEndLine, false)\r\n                    }\r\n                }\r\n            }\r\n            this.element.serviceIns = this.editARXML.serviceIns\r\n\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', selectPort:null, porttype: null, context: null, process:null, selectServiceIns: null, serviceIns: null}\r\n            this.dialogText = false\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}