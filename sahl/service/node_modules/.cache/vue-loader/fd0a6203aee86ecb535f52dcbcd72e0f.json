{"remainingRequest":"D:\\source\\D-mainedit(noMove)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\D-mainedit(noMove)\\src\\components\\mainview.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\source\\D-mainedit(noMove)\\src\\components\\mainview.vue","mtime":1625791707696},{"path":"D:\\source\\D-mainedit(noMove)\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-mainedit(noMove)\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\source\\D-mainedit(noMove)\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\source\\D-mainedit(noMove)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\D-mainedit(noMove)\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KI21haW4tdmlldyB7DQogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIGhlaWdodDogODMwcHg7IC8qIOydtOqyjCDsu6Tsp4DrqbQg6rCA7J6lIOyYpOuluOyqvSBzY3JvbGzsnbQg7IOd6ri064ukLiAqLw0KfQ0KDQoubXktYWN0aXZlLWNsYXNzIHsNCiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7DQp9DQoNCi5iYXNpYy1mb3JtIHsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcG9zaXRpb246IGFic29sdXRlOyAvKiDsnbTqsowg7JeG7Jy866m0IGNvbXBvbmVudOuTpOydtCAgeCDsooztkZzsl5Ag6rCZ7J20IOyeiOyniCDrqrvtlaggIGjrp4ztgbwg65ao7Ja07KC47IScIOuwsOy5mOuQqCovDQp9DQoNCmRpdiAvKiDthY3siqTtirjrpbwg66eI7Jqw7Iqk66GcIOuTnOuemOq3uO2VmOuKlCDqsoPsnYQg67Cp7KeA7ZWY64qUIENTUyAqLw0Kew0KICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7IA0KICAtbW96LXVzZXItc2VsZWN0OiAtbW96LW5vbmU7DQogIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsNCiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsNCiAgdXNlci1zZWxlY3Q6IG5vbmU7DQp9DQoNCg=="},{"version":3,"sources":["mainview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mainview.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"main-view\"  ref='el' @mousedown=\"onMouseDown\" @mouseup=\"onMouseUp\" @mousemove=\"onMouseMove\"\r\n        :style=\"{cursor: isMouseDown ? 'grabbing' : 'grab',  }\">\r\n        <v-app>\r\n            <vue-draggable-resizable\r\n                class-name-active=\"my-active-class\"\r\n                class-name=\"basic-form\"\r\n                v-for=\"element in elements\"\r\n                :key=\"element.id\"\r\n                :x=\"element.x\"\r\n                :y=\"element.y\"\r\n                :w=\"400\"\r\n                :h=\"element.h\"\r\n                :resizable=\"false\"\r\n                :z=\"element.z\"\r\n                :active.sync=\"element.active\" \r\n                @activated=\"onActivated(element.id)\" @deactivated=\"onDeactivated(element.id)\"\r\n                @dragging=\"(left, top) => dragging(element.id, left, top)\"\r\n                @dragstop=\"(left, top) => dragstop(element.id, left, top)\" >\r\n                <component  :is=\"element.component\" ></component>\r\n            </vue-draggable-resizable> \r\n        </v-app>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport HWElement from '@/components/HWElement.vue'\r\nimport Machine from '@/components/Machine.vue'\r\nimport MachineDesign from '@/components/MachineDesign.vue'\r\nimport ModeDeclarationGroup from '@/components/ModeDeclarationGroup.vue'\r\nimport { EventBus } from '../main'\r\n\r\n\r\nexport default{\r\n    components:{ HWElement, Machine, MachineDesign, ModeDeclarationGroup},\r\n    data () {\r\n        return {\r\n            draggingId: null,\r\n            prevOffsetX: 0,\r\n            prevOffsetY: 0,\r\n            centerZ: 50,\r\n            elements: [\r\n                {id: 1, x: 500,  y: 20,  h: 750, z: 8,  active: false, component: 'Machine'}, // machine\r\n                {id: 2, x: 10,   y: 150, h: 450, z: 1,  active: false, component: 'MachineDesign'}, //machine design\r\n                {id: 3, x: 1050, y: 250, h: 250, z: 2,  active: false, component: 'HWElement'}, //HWelement\r\n                {id: 4, x: 950,  y: 500, h: 300, z: 1,  active: false, component: 'ModeDeclarationGroup'}, //Mode declaration Group\r\n            ],\r\n            isMouseDown: false,\r\n            el: null,\r\n            cursorPos: [0, 0],\r\n            isMouseDiagram: false, // mouse가 diagram위에 있으면 화면이 움직이면 안되니 설정\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on(\"call-component\", (element)=>{\r\n            this.positionchange(element)\r\n        })\r\n        EventBus.$on(\"open-modeDeclaration\", (item, id) => { //mode declaration 부를때 활성화창해주려고 이벤트 받았음\r\n            this.elements[id].active = true\r\n            this.elements[0].active = false\r\n        })\r\n        EventBus.$on(\"select-functionGrouptype\", (item, id) => { // mode declaratione에서 selecet했을 때 machine 활성화 해주려고 함\r\n            this.elements[0].active = true\r\n            this.elements[id].active = false\r\n            this.onDeactivated(id) // z값 변경하려고 \r\n        })\r\n    },\r\n    methods: {\r\n        onMouseDown (ev) {\r\n            if (this.isMouseDiagram) return\r\n            this.cursorPos = [ev.pageX, ev.pageY];\r\n            this.isMouseDown = true;\r\n        },\r\n        onMouseUp () {\r\n            this.isMouseDown = false;\r\n        },\r\n        onMouseMove (ev) {\r\n            if(!this.isMouseDown) return\r\n\r\n            ev.preventDefault();\r\n\r\n            requestAnimationFrame(() => {\r\n                const delta = [\r\n                ev.pageX - this.cursorPos[0],\r\n                ev.pageY - this.cursorPos[1],\r\n                ];\r\n\r\n            this.cursorPos = [ev.pageX, ev.pageY];\r\n\r\n            if (!this.$refs.el) return;\r\n                this.$refs.el.scrollBy({\r\n                    left: -delta[0],\r\n                    top: -delta[1],\r\n                });\r\n            });\r\n       },\r\n        dragging(id, left, top) {\r\n            this.draggingId = id;\r\n\r\n            if (! this.sync) return;\r\n\r\n            const offsetX = left - this.draggingElement.x;\r\n            const offsetY = top - this.draggingElement.y;\r\n\r\n            const deltaX = this.deltaX(offsetX);\r\n            const deltaY = this.deltaY(offsetY);\r\n\r\n            this.elements.map(el => {\r\n                if (el.id !== id) {\r\n                    el.x += deltaX;\r\n                    el.y += deltaY;\r\n                }\r\n                return el;\r\n            });\r\n        },\r\n        dragstop(id, left, top) {\r\n            this.elements.map(el => {\r\n                if (el.id === id) {\r\n                    el.x = left;\r\n                    el.y = top;\r\n                }\r\n                return el;\r\n            });\r\n\r\n            this.draggingId = null;\r\n            this.prevOffsetX = 0;\r\n            this.prevOffsetY = 0;\r\n        },\r\n        deltaX(offsetX) {\r\n            const ret = offsetX - this.prevOffsetX;\r\n\r\n            this.prevOffsetX = offsetX;\r\n\r\n            return ret;\r\n        },\r\n        deltaY(offsetY) {\r\n            const ret = offsetY - this.prevOffsetY;\r\n\r\n            this.prevOffsetY = offsetY;\r\n\r\n            return ret;\r\n        },\r\n        onActivated (id) {\r\n            if (id != 1) {\r\n                this.elements[id-1].z = 10 // main이 초기값 8 주변요소들이 1 main보다 선택된것이 높아야 하므로 10으로 설정함\r\n            }\r\n            this.isMouseDiagram = true\r\n        },\r\n        onDeactivated (id) {\r\n            if (this.elements[id-1].z != 1 &&  id != 1) { //초기값넣어줌\r\n                this.elements[id-1].z = 1\r\n            }\r\n            this.isMouseDiagram = false\r\n        },\r\n        positionchange (item) {\r\n            this.elements[item].z = this.centerZ\r\n            this.elements[item].active = true\r\n            this.elements[0].active = false\r\n        }\r\n    },\r\n    computed: {\r\n        draggingElement: function () {\r\n            if (! this.draggingId) return;\r\n\r\n            return this.elements.find(el => el.id === this.draggingId);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n#main-view {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    height: 830px; /* 이게 커지면 가장 오른쪽 scroll이 생긴다. */\r\n}\r\n\r\n.my-active-class {\r\n    border: 2px solid red;\r\n}\r\n\r\n.basic-form {\r\n    cursor: pointer;\r\n    position: absolute; /* 이게 없으면 component들이  x 좌표에 같이 있질 못함  h만큼 떨어져서 배치됨*/\r\n}\r\n\r\ndiv /* 텍스트를 마우스로 드래그하는 것을 방지하는 CSS */\r\n{\r\n  -ms-user-select: none; \r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n</style>"]}]}