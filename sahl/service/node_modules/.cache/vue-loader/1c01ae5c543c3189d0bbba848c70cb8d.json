{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\PPPtoKeyValue.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\PPPtoKeyValue.vue","mtime":1662616085730},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PPPtoKeyValue.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"PPPtoKeyValue.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showPPPtoKeyValue\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Persistency Port Prototype To Key Value Database Mapping</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Persistency Port Prototype To Key Value Database Mapping</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputPPPtoKeyValueName' outlined dense  @click=\"setactiveUUID\"></v-text-field>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.keyValue\" readonly @click=\"setKeyValueSelect()\" clearable @click:clear='clearKeyValueRef()' label=\"Key Value Storage Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PPPtoKeyValue'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setKeyValueList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selKeyValue\" :key=\"i\" link @click=\"setKeyValue(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newKeyValue()\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.port\" readonly @click=\"setPortSelect()\" clearable @click:clear='clearPort()' label=\"Target Port Prototype Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PPPtoKeyPRPort'\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setPortList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list >\r\n                                            <v-list-item v-for=\"(item, i) in selPort\" :key=\"i\" link @click=\"setPort(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-list-item v-if=\"selPort.length == 0\">\r\n                                                <v-list-item-title>No Data Available</v-list-item-title>\r\n                                            </v-list-item>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row style=\"height: px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.process\" readonly @click=\"setProcessRefSelect()\" clearable @click:clear='clearProcessRef()' label=\"Process Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PPPtoKeyProcess'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcess(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess()\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: false,//this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            selKeyValue: this.$store.getters.getPERKeyValueD,\r\n            selPort: this.$store.getters.getPRPortPrototype,\r\n            selProcess: this.$store.getters.getProcess,\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showPPPtoKeyValue() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        inputPPPtoKeyValueName() {\r\n            this.$store.commit('editPERPPtoKeyValue', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        clearKeyValueRef() {\r\n            this.element.keyValue = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyValue')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PPPtoKeyValue')\r\n            }\r\n        },\r\n        setKeyValueSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyValue')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getPERKeyValueDPath(this.element.keyValue)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.KeyValueData_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setKeyValueList() {\r\n            this.selKeyValue = this.$store.getters.getPERKeyValueD\r\n            this.setactiveUUID()\r\n        },\r\n        setKeyValue(item) {\r\n            if(this.element.keyValue != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyValue')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PPPtoKeyValue')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PPPtoKeyValue', this.element.uuid+'/PPPtoKeyValue', item.uuid)\r\n                this.element.keyValue = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newKeyValue() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementPERKeyValueD', { \r\n                name: this.$store.getters.getNamePERKeyValueD, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                \r\n            })\r\n            EventBus.$emit('add-element', constant.KeyValueData_str)\r\n            this.$store.commit('editPERPPtoKeyValue', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setPortSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyPRPort')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getSWComponentPath(this.element.port, 3)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SWComponents_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        clearPort() {\r\n            this.element.port = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyPRPort')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PPPtoKeyPRPort')\r\n            }\r\n        },\r\n        setPortList() {\r\n            this.selPort = this.$store.getters.getPRPortPrototype\r\n            this.setactiveUUID()\r\n        },\r\n        setPort(item) {\r\n            if(this.element.port != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyPRPort')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PPPtoKeyPRPort')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/PPPtoKeyPRPort', this.element.uuid+'/PPPtoKeyPRPort', item.uuid)\r\n                }\r\n                this.element.port = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        clearProcessRef() {\r\n            this.element.process = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyProcess')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PPPtoKeyProcess')\r\n            }\r\n        },\r\n        setProcessRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyProcess')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getProcessPath(this.element.process)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Process_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        setProcess(item) {\r\n            if(this.element.process != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PPPtoKeyProcess')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PPPtoKeyProcess')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PPPtoKeyProcess', this.element.uuid+'/PPPtoKeyProcess', item.uuid)\r\n                this.element.process = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementProcess', { \r\n                name: this.$store.getters.getNameProcess, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editPERPPtoKeyValue', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editPERPPtoKeyValue', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}