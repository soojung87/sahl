{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\UCMSoftwareCluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\UCMSoftwareCluster.vue","mtime":1659408478316},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UCMSoftwareCluster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAubfile":"UCMSoftwareCluster.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn  icon @click=\"showSoftwareCluster\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Software Cluster</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Software Cluster</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputSoftwareClusterName' outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.category\" label=\"Category\" placeholder=\"string\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.idVendor\" label=\"Vendor ID\" placeholder=\"Integer\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.version\" label=\"Version\" placeholder=\"string\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showSDGS\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isSDGSOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Admin Data\r\n                                    <v-btn @click=\"isCheckSDGS\" text x-small color=\"indigo\" v-if=\"isSDGSOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isSDGSOpenClose && isdeleteSDGSItem\" @click=\"deletSDGS\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isSDGSOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectSDGS\" :headers=\"headerSDGS\" :items=\"element.sdgs\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteSDGSItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteSDGSItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openSDGS(idx)\" @cancel=\"editSDGS(idx)\" @save=\"cancelSDGS\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-select v-model=\"editSDGSItem.sdg\" :items=\"selSDG\" label=\"SDG\" @click=\"setactiveUUID()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-text-field v-model=\"editSDGSItem.sd\" label=\"SD\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addSDGS()\" @save=\"cancelSDGS\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-select v-model=\"editSDGSItem.sdg\" :items=\"selSDG\" label=\"SDG\" @click=\"setactiveUUID()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-text-field v-model=\"editSDGSItem.sd\" label=\"SD\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCExecutable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showExecutable\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isExecutableOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained AR Element Refs\r\n                                    <v-btn @click=\"isCheckExecutable\" text x-small color=\"indigo\" v-if=\"isExecutableOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isExecutableOpenClose && isdeleteExecutableItem\" @click=\"deletExecutable\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isExecutableOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectExecutable\" :headers=\"headerExecutable\" :items=\"element.executable\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteExecutableItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteExecutableItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editExecutable(idx)\" @open=\"openExecutable(idx)\" @save=\"cancelExecutable\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editExecutableItem.execut' label='Contained AR Element Ref' :items='selExecutable' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingExecutable\" clearable @click=\"setExecutableSelect()\" \r\n                                                                            @click:clear='clearExecutableRef' @blur=\"isEditingExecutable=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addExecutable()\" @save=\"cancelExecutable\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editExecutableItem.execut' label='Contained AR Element Ref' :items='selExecutable' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingExecutable\" clearable @click=\"setExecutableSelect()\" \r\n                                                                            @click:clear='clearExecutableRef' @blur=\"isEditingExecutable=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCMachineD'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showMachineD\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isMachineDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Fibex Element Refs\r\n                                    <v-btn @click=\"isCheckMachineD\" text x-small color=\"indigo\" v-if=\"isMachineDOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isMachineDOpenClose && isdeleteMachineDItem\" @click=\"deletMachineD\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isMachineDOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectMachineD\" :headers=\"headerMachineD\" :items=\"element.machineD\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteMachineDItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteMachineDItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editMachineD(idx)\" @open=\"openMachineD(idx)\" @save=\"cancelMachineD\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editMachineDItem.machine' label='Contained Fibex Element Ref' :items='selMachineD' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingMachineD\" clearable @click=\"setMachineDSelect()\" \r\n                                                                            @click:clear='clearMachineDRef' @blur=\"isEditingMachineD=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachineD\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addMachineD()\" @save=\"cancelMachineD\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editMachineDItem.machine' label='Contained Fibex Element Ref' :items='selMachineD' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingMachineD\" clearable @click=\"setMachineDSelect()\" \r\n                                                                            @click:clear='clearMachineDRef' @blur=\"isEditingMachineD=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachineD\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCtoMachine'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showToMachineM\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isToMachineMOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Package Element Refs\r\n                                    <v-btn @click=\"isCheckToMachineM\" text x-small color=\"indigo\" v-if=\"isToMachineMOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isToMachineMOpenClose && isdeleteToMachineMItem\" @click=\"deletToMachineM\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isToMachineMOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectToMachineM\" :headers=\"headerToMachineM\" :items=\"element.toMachine\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteToMachineMItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteToMachineMItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editToMachineM(idx)\" @open=\"openToMachineM(idx)\" @save=\"cancelToMachineM\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editToMachineMItem.mapping' label='Contained Package Element Ref' :items='selToMachineM' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingToMachineM\" clearable @click=\"setToMachineMSelect()\" \r\n                                                                            @click:clear='clearToMachineMRef' @blur=\"isEditingToMachineM=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newToMachineM\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addToMachineM()\" @save=\"cancelToMachineM\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editToMachineMItem.mapping' label='Contained Package Element Ref' :items='selToMachineM' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingToMachineM\" clearable @click=\"setToMachineMSelect()\" \r\n                                                                            @click:clear='clearToMachineMRef' @blur=\"isEditingToMachineM=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newToMachineM\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCProcess'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showProcess\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isProcessOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Process Refs\r\n                                    <v-btn @click=\"isCheckProcess\" text x-small color=\"indigo\" v-if=\"isProcessOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isProcessOpenClose && isdeleteProcessItem\" @click=\"deletProcess\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isProcessOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectProcess\" :headers=\"headerProcess\" :items=\"element.process\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteProcessItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteProcessItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editProcess(idx)\" @open=\"openProcess(idx)\" @save=\"cancelProcess\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editProcessItem.pro' label='Contained Process Ref' :items='selProcess' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingProcess\" clearable @click=\"setProcessSelect()\" \r\n                                                                            @click:clear='clearProcessRef' @blur=\"isEditingProcess=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addProcess()\" @save=\"cancelProcess\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editProcessItem.pro' label='Contained Process Ref' :items='selProcess' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingProcess\" clearable @click=\"setProcessSelect()\" \r\n                                                                            @click:clear='clearProcessRef' @blur=\"isEditingProcess=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCswc'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showSWCluster\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isSWClusterOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Sub Software Cluster Refs\r\n                                    <v-btn @click=\"isCheckSWCluster\" text x-small color=\"indigo\" v-if=\"isSWClusterOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isSWClusterOpenClose && isdeleteSWClusterItem\" @click=\"deletSWCluster\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isSWClusterOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectSWCluster\" :headers=\"headerSWCluster\" :items=\"element.sswc\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteSWClusterItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteSWClusterItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"editSWCluster(idx)\" @open=\"openSWCluster(idx)\" @save=\"cancelSWCluster\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSWClusterItem.swc' label='Sub Software Cluster Ref' :items='selSWCluster' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingSWCluster\" clearable @click=\"setSWClusterSelect()\" \r\n                                                                            @click:clear='clearSWClusterRef' @blur=\"isEditingSWCluster=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newSWCluster\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addSWCluster()\" @save=\"cancelSWCluster\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSWClusterItem.swc' label='Sub Software Cluster Ref' :items='selSWCluster' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingSWCluster\" clearable @click=\"setSWClusterSelect()\" \r\n                                                                            @click:clear='clearSWClusterRef' @blur=\"isEditingSWCluster=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newSWCluster\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement  || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogPath: false,\r\n            isSDGSOpenClose: true,\r\n            isdeleteSDGSItem: false,\r\n            selectDelectSDGS: [],\r\n            headerSDGS: [\r\n                { text: 'SDG', align: 'start', sortable: false, value: 'sdg' },\r\n                { text: 'SD', align: 'start', sortable: false, value: 'sd' },\r\n            ],\r\n            editSDGSItem: { sdg: null, sd : null, id: ''},\r\n            selSDG: [\"R20-11-CATEGORY\", \"LICENSES\"],\r\n\r\n            isExecutableOpenClose: true,\r\n            isEditingExecutable: true,\r\n            isdeleteExecutableItem: false,\r\n            selectDelectExecutable: [],\r\n            selExecutable: this.$store.getters.getExecutable,\r\n            headerExecutable: [\r\n                { text: 'Contained AR Element Ref', align: 'start', sortable: false, value: 'execut' },\r\n            ],\r\n            editExecutableItem: { execut : null, id:''},\r\n            deleteChangeLineExecutable : [],\r\n\r\n            isMachineDOpenClose: true,\r\n            isEditingMachineD: true,\r\n            isdeleteMachineDItem: false,\r\n            selectDelectMachineD: [],\r\n            selMachineD: this.$store.getters.getMachineDesign,\r\n            headerMachineD: [\r\n                { text: 'Contained Fibex Element Ref', align: 'start', sortable: false, value: 'machine' },\r\n            ],\r\n            editMachineDItem: { machine : null, id:''},\r\n            deleteChangeLineMachineD : [],\r\n\r\n            isToMachineMOpenClose: true,\r\n            isEditingToMachineM: true,\r\n            isdeleteToMachineMItem: false,\r\n            selectDelectToMachineM: [],\r\n            selToMachineM: this.$store.getters.getSomeIPToMachineMapping,\r\n            headerToMachineM: [\r\n                { text: 'Contained Package Element Ref', align: 'start', sortable: false, value: 'mapping' },\r\n            ],\r\n            editToMachineMItem: { mapping : null, id:''},\r\n            deleteChangeLineToMachineM : [],\r\n\r\n            isProcessOpenClose: true,\r\n            isEditingProcess: true,\r\n            isdeleteProcessItem: false,\r\n            selectDelectProcess: [],\r\n            selProcess: this.$store.getters.getProcess,\r\n            headerProcess: [\r\n                { text: 'Contained Process Ref', align: 'start', sortable: false, value: 'pro' },\r\n            ],\r\n            editProcessItem: { pro : null, id:''},\r\n            deleteChangeLineProcess : [],\r\n\r\n            isSWClusterOpenClose: true,\r\n            isEditingSWCluster: true,\r\n            isdeleteSWClusterItem: false,\r\n            selectDelectSWCluster: [],\r\n            selSWCluster: this.$store.getters.getSWCluster,\r\n            headerSWCluster: [\r\n                { text: 'Sub Software Cluster Ref', align: 'start', sortable: false, value: 'swc' },\r\n            ],\r\n            editSWClusterItem: { swc : null, id:''},\r\n            deleteChangeLineSWCluster : [],\r\n\r\n\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showSoftwareCluster () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showSDGS() {\r\n            this.isSDGSOpenClose = this.isSDGSOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showExecutable() {\r\n            this.isExecutableOpenClose = this.isExecutableOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showMachineD() {\r\n            this.isMachineDOpenClose = this.isMachineDOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showToMachineM() {\r\n            this.isToMachineMOpenClose = this.isToMachineMOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showProcess() {\r\n            this.isProcessOpenClose = this.isProcessOpenClose ? false : true\r\n        },\r\n        showSWCluster() {\r\n            this.isSWClusterOpenClose = this.isSWClusterOpenClose ? false : true\r\n        },\r\n\r\n        inputSoftwareClusterName () {\r\n            this.$store.commit('editSoftWareCluster', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isCheckSDGS() {\r\n            if (this.isdeleteSDGSItem == true) {\r\n                this.isdeleteSDGSItem = false\r\n                this.selectDelectSDGS = []\r\n            } else {\r\n                this.isdeleteSDGSItem = true\r\n            }\r\n        },\r\n        deletSDGS() {\r\n            if (this.isdeleteSDGSItem == true) {\r\n                this.element.sdgs = this.element.sdgs.filter(item => {\r\n                        return this.selectDelectSDGS.indexOf(item) < 0 })\r\n\r\n                this.isdeleteSDGSItem = false\r\n                this.selectDelectSDGS = []\r\n            } \r\n        },\r\n        editSDGS(idx) {\r\n            this.element.sdgs[idx].sdg = this.editSDGSItem.sdg\r\n            this.element.sdgs[idx].sd = this.editSDGSItem.sd\r\n            this.cancelSDGS()\r\n        },\r\n        cancelSDGS() {\r\n            this.editSDGSItem.sdg = null\r\n            this.editSDGSItem.sd = null\r\n            this.editSDGSItem.id = ''\r\n            this.setactiveUUID()\r\n        },\r\n        openSDGS(idx) {\r\n            this.editSDGSItem.sdg = this.element.sdgs[idx].sdg\r\n            this.editSDGSItem.sd =  this.element.sdgs[idx].sd\r\n        },\r\n        addSDGS() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.sdgs.some(item => item.id === n)\r\n            }\r\n            this.editSDGSItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editSDGSItem)\r\n            this.element.sdgs.push(addObj)\r\n            this.cancelSDGS()\r\n        },\r\n        clearSDGS() {\r\n            this.editSDGSItem.sdg = null\r\n        },\r\n\r\n        isCheckExecutable() {\r\n            if (this.isdeleteExecutableItem == true) {\r\n                this.isdeleteExecutableItem = false\r\n                this.selectDelectExecutable = []\r\n            } else {\r\n                this.isdeleteExecutableItem = true\r\n            }\r\n        },\r\n        deletExecutable() {\r\n            if (this.isdeleteExecutableItem == true) {\r\n                for(let i=0; i<this.element.executable.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineExecutable.push({id:this.element.executable[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCExecutable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.executable = this.element.executable.filter(item => {\r\n                        return this.selectDelectExecutable.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.executable.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineExecutable.length; idx++) {\r\n                        if (this.element.executable[n].id == this.deleteChangeLineExecutable[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCExecutable-'+n, this.element.uuid+'/SCExecutable', this.deleteChangeLineExecutable[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteExecutableItem = false\r\n                this.selectDelectExecutable = []\r\n                this.deleteChangeLineExecutable = []\r\n            } \r\n        },\r\n        openExecutable(idx) {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            if ( this.element.executable[idx].execut != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.executable[idx].execut)\r\n                }\r\n                this.editExecutableItem.execut = { name: this.element.executable[idx].execut, uuid: endLine }\r\n            }\r\n        },\r\n        editExecutable(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+idx)\r\n            if (endLine != undefined && this.editExecutableItem.execut == null) {\r\n                this.deleteLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                this.element.executable[idx].execut = null\r\n            } else if (endLine != undefined && endLine != this.editExecutableItem.execut.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+idx, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.element.executable[idx].execut = this.editExecutableItem.execut.name\r\n            } else if (endLine == undefined && this.editExecutableItem.execut != null) {\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+idx, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.element.executable[idx].execut = this.editExecutableItem.execut.name\r\n            }\r\n\r\n            this.cancelExecutable()\r\n        },\r\n        cancelExecutable() {\r\n            this.editExecutableItem.execut = null\r\n            this.setactiveUUID()\r\n        },\r\n        addExecutable() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.executable.some(item => item.id === n)\r\n            }\r\n            this.editExecutableItem.id = n\r\n\r\n            if( this.editExecutableItem.execut != null) {\r\n                var datacount = this.element.executable.length\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+datacount, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.editExecutableItem.execut = this.editExecutableItem.execut.name\r\n            }\r\n            const addObj = Object.assign({}, this.editExecutableItem)\r\n            this.element.executable.push(addObj);\r\n            this.cancelExecutable()\r\n        },\r\n        clearExecutableRef() {\r\n            this.isEditingExecutable = true\r\n            this.editExecutableItem.execut = null\r\n        },\r\n        setExecutableSelect() {\r\n            if (this.isEditingExecutable == true) {\r\n                if (this.editExecutableItem.execut != null && this.editExecutableItem.execut.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editExecutableItem.execut.uuid, element: constant.Executable_str} )\r\n                    document.getElementById(this.editExecutableItem.execut.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editExecutableItem.execut.uuid)\r\n                }\r\n                this.setExecutableList()\r\n                this.isEditingExecutable = false\r\n            } else {\r\n                this.isEditingExecutable = true\r\n            }\r\n        },\r\n        setExecutableList() {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            this.setactiveUUID()\r\n        },\r\n        newExecutable() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameExecutable, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n            })\r\n            EventBus.$emit('add-element', constant.Executable_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckMachineD() {\r\n            if (this.isdeleteMachineDItem == true) {\r\n                this.isdeleteMachineDItem = false\r\n                this.selectDelectMachineD = []\r\n            } else {\r\n                this.isdeleteMachineDItem = true\r\n            }\r\n        },\r\n        deletMachineD() {\r\n            if (this.isdeleteMachineDItem == true) {\r\n                for(let i=0; i<this.element.machineD.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineMachineD.push({id:this.element.machineD[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCMachineD-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.machineD = this.element.machineD.filter(item => {\r\n                        return this.selectDelectMachineD.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.machineD.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineMachineD.length; idx++) {\r\n                        if (this.element.machineD[n].id == this.deleteChangeLineMachineD[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCMachineD-'+n, this.element.uuid+'/SCMachineD', this.deleteChangeLineMachineD[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteMachineDItem = false\r\n                this.selectDelectMachineD = []\r\n                this.deleteChangeLineMachineD = []\r\n            } \r\n        },\r\n        openMachineD(idx) {\r\n            this.selMachineD = this.$store.getters.getMachineDesign\r\n            if ( this.element.machineD[idx].machine != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.machineD[idx].machine)\r\n                }\r\n                this.editMachineDItem.machine = { name: this.element.machineD[idx].machine, uuid: endLine }\r\n            }\r\n        },\r\n        editMachineD(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+idx)\r\n            if (endLine != undefined && this.editMachineDItem.machine == null) {\r\n                this.deleteLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                this.element.machineD[idx].machine = null\r\n            } else if (endLine != undefined && endLine != this.editMachineDItem.machine.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+idx, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.element.machineD[idx].machine = this.editMachineDItem.machine.name\r\n            } else if (endLine == undefined && this.editMachineDItem.machine != null) {\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+idx, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.element.machineD[idx].machine = this.editMachineDItem.machine.name\r\n            }\r\n\r\n            this.cancelMachineD()\r\n        },\r\n        cancelMachineD() {\r\n            this.editMachineDItem.machine = null\r\n            this.setactiveUUID()\r\n        },\r\n        addMachineD() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.machineD.some(item => item.id === n)\r\n            }\r\n            this.editMachineDItem.id = n\r\n\r\n            if( this.editMachineDItem.machine != null) {\r\n                var datacount = this.element.machineD.length\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+datacount, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.editMachineDItem.machine = this.editMachineDItem.machine.name\r\n            }\r\n            const addObj = Object.assign({}, this.editMachineDItem)\r\n            this.element.machineD.push(addObj);\r\n            this.cancelMachineD()\r\n        },\r\n        clearMachineDRef() {\r\n            this.isEditingMachineD = true\r\n            this.editMachineDItem.machine = null\r\n        },\r\n        setMachineDSelect() {\r\n            if (this.isEditingMachineD == true) {\r\n                if (this.editMachineDItem.machine != null && this.editMachineDItem.machine.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editMachineDItem.machine.uuid, element: constant.MachineDesigne_str} )\r\n                    document.getElementById(this.editMachineDItem.machine.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editMachineDItem.machine.uuid)\r\n                }\r\n                this.setMachineDList()\r\n                this.isEditingMachineD = false\r\n            } else {\r\n                this.isEditingMachineD = true\r\n            }\r\n        },\r\n        setMachineDList() {\r\n            this.selMachineD = this.$store.getters.getMachineDesign\r\n            this.setactiveUUID()\r\n        },\r\n        newMachineD() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementMachineDesign', {\r\n                name: this.$store.getters.getNameMachineDesign, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                access:null, resettimer: '', connector:[], servicediscover:[], \r\n            })\r\n            EventBus.$emit('add-element', constant.MachineDesigne_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckToMachineM() {\r\n            if (this.isdeleteToMachineMItem == true) {\r\n                this.isdeleteToMachineMItem = false\r\n                this.selectDelectToMachineM = []\r\n            } else {\r\n                this.isdeleteToMachineMItem = true\r\n            }\r\n        },\r\n        deletToMachineM() {\r\n            if (this.isdeleteToMachineMItem == true) {\r\n                for(let i=0; i<this.element.toMachine.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineToMachineM.push({id:this.element.toMachine[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCtoMachine-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.toMachine = this.element.toMachine.filter(item => {\r\n                        return this.selectDelectToMachineM.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.toMachine.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineToMachineM.length; idx++) {\r\n                        if (this.element.toMachine[n].id == this.deleteChangeLineToMachineM[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCtoMachine-'+n, this.element.uuid+'/SCtoMachine', this.deleteChangeLineToMachineM[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteToMachineMItem = false\r\n                this.selectDelectToMachineM = []\r\n                this.deleteChangeLineToMachineM = []\r\n            } \r\n        },\r\n        openToMachineM(idx) {\r\n            this.selToMachineM = this.$store.getters.getSomeIPToMachineMapping\r\n            if ( this.element.toMachine[idx].mapping != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.toMachine[idx].mapping)\r\n                }\r\n                this.editToMachineMItem.mapping = { name: this.element.toMachine[idx].mapping, uuid: endLine }\r\n            }\r\n        },\r\n        editToMachineM(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n            if (endLine != undefined && this.editToMachineMItem.mapping == null) {\r\n                this.deleteLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                this.element.toMachine[idx].mapping = null\r\n            } else if (endLine != undefined && endLine != this.editToMachineMItem.mapping.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+idx, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.element.toMachine[idx].mapping = this.editToMachineMItem.mapping.name\r\n            } else if (endLine == undefined && this.editToMachineMItem.mapping != null) {\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+idx, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.element.toMachine[idx].mapping = this.editToMachineMItem.mapping.name\r\n            }\r\n\r\n            this.cancelToMachineM()\r\n        },\r\n        cancelToMachineM() {\r\n            this.editToMachineMItem.mapping = null\r\n            this.setactiveUUID()\r\n        },\r\n        addToMachineM() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.toMachine.some(item => item.id === n)\r\n            }\r\n            this.editToMachineMItem.id = n\r\n\r\n            if( this.editToMachineMItem.mapping != null) {\r\n                var datacount = this.element.toMachine.length\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+datacount, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.editToMachineMItem.mapping = this.editToMachineMItem.mapping.name\r\n            }\r\n            const addObj = Object.assign({}, this.editToMachineMItem)\r\n            this.element.toMachine.push(addObj);\r\n            this.cancelToMachineM()\r\n        },\r\n        clearToMachineMRef() {\r\n            this.isEditingToMachineM = true\r\n            this.editToMachineMItem.mapping = null\r\n        },\r\n        setToMachineMSelect() {\r\n            if (this.isEditingToMachineM == true) {\r\n                if (this.editToMachineMItem.mapping != null && this.editToMachineMItem.mapping.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editToMachineMItem.mapping.uuid, element: constant.SomeIPToMachineMapping_str} )\r\n                    document.getElementById(this.editToMachineMItem.mapping.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editToMachineMItem.mapping.uuid)\r\n                }\r\n                this.setToMachineMList()\r\n                this.isEditingToMachineM = false\r\n            } else {\r\n                this.isEditingToMachineM = true\r\n            }\r\n        },\r\n        setToMachineMList() {\r\n            this.selToMachineM = this.$store.getters.getSomeIPToMachineMapping\r\n            this.setactiveUUID()\r\n        },\r\n        newToMachineM() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementSomeIPtoMachine', {\r\n                name: this.$store.getters.getNameSomeIPtoMachine, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                ccref: null, siref: null, tcp:'', udp: '',\r\n            })\r\n            EventBus.$emit('add-element', constant.SomeIPToMachineMapping_str)\r\n            EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckProcess() {\r\n            if (this.isdeleteProcessItem == true) {\r\n                this.isdeleteProcessItem = false\r\n                this.selectDelectProcess = []\r\n            } else {\r\n                this.isdeleteProcessItem = true\r\n            }\r\n        },\r\n        deletProcess() {\r\n            if (this.isdeleteProcessItem == true) {\r\n                for(let i=0; i<this.element.process.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineProcess.push({id:this.element.process[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCProcess-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.process = this.element.process.filter(item => {\r\n                        return this.selectDelectProcess.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.process.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineProcess.length; idx++) {\r\n                        if (this.element.process[n].id == this.deleteChangeLineProcess[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCProcess-'+n, this.element.uuid+'/SCProcess', this.deleteChangeLineProcess[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteProcessItem = false\r\n                this.selectDelectProcess = []\r\n                this.deleteChangeLineProcess = []\r\n            } \r\n        },\r\n        openProcess(idx) {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            if ( this.element.process[idx].pro != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getProcessPath(this.element.process[idx].pro)\r\n                }\r\n                this.editProcessItem.pro = { name: this.element.process[idx].pro, uuid: endLine }\r\n            }\r\n        },\r\n        editProcess(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+idx)\r\n            if (endLine != undefined && this.editProcessItem.pro == null) {\r\n                this.deleteLine(this.element.uuid+'/SCProcess-'+idx)\r\n                this.element.process[idx].pro = null\r\n            } else if (endLine != undefined && endLine != this.editProcessItem.pro.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCProcess-'+idx)\r\n                this.newLine(this.element.uuid+'/SCProcess-'+idx, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.element.process[idx].pro = this.editProcessItem.pro.name\r\n            } else if (endLine == undefined && this.editProcessItem.pro != null) {\r\n                this.newLine(this.element.uuid+'/SCProcess-'+idx, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.element.process[idx].pro = this.editProcessItem.pro.name\r\n            }\r\n\r\n            this.cancelProcess()\r\n        },\r\n        cancelProcess() {\r\n            this.editProcessItem.pro = null\r\n            this.setactiveUUID()\r\n        },\r\n        addProcess() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.process.some(item => item.id === n)\r\n            }\r\n            this.editProcessItem.id = n\r\n\r\n            if( this.editProcessItem.pro != null) {\r\n                var datacount = this.element.process.length\r\n                this.newLine(this.element.uuid+'/SCProcess-'+datacount, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.editProcessItem.pro = this.editProcessItem.pro.name\r\n            }\r\n            const addObj = Object.assign({}, this.editProcessItem)\r\n            this.element.process.push(addObj);\r\n            this.cancelProcess()\r\n        },\r\n        clearProcessRef() {\r\n            this.isEditingProcess = true\r\n            this.editProcessItem.pro = null\r\n        },\r\n        setProcessSelect() {\r\n            if (this.isEditingProcess == true) {\r\n                if (this.editProcessItem.pro != null && this.editProcessItem.pro.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editProcessItem.pro.uuid, element: constant.Process_str} )\r\n                    document.getElementById(this.editProcessItem.pro.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editProcessItem.pro.uuid)\r\n                }\r\n                this.setProcessList()\r\n                this.isEditingProcess = false\r\n            } else {\r\n                this.isEditingProcess = true\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementProcess', {\r\n                name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckSWCluster() {\r\n            if (this.isdeleteSWClusterItem == true) {\r\n                this.isdeleteSWClusterItem = false\r\n                this.selectDelectSWCluster = []\r\n            } else {\r\n                this.isdeleteSWClusterItem = true\r\n            }\r\n        },\r\n        deletSWCluster() {\r\n            if (this.isdeleteSWClusterItem == true) {\r\n                for(let i=0; i<this.element.sswc.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineSWCluster.push({id:this.element.sswc[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCswc-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.sswc = this.element.sswc.filter(item => {\r\n                        return this.selectDelectSWCluster.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.sswc.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineSWCluster.length; idx++) {\r\n                        if (this.element.sswc[n].id == this.deleteChangeLineSWCluster[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCswc-'+n, this.element.uuid+'/SCswc', this.deleteChangeLineSWCluster[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteSWClusterItem = false\r\n                this.selectDelectSWCluster = []\r\n                this.deleteChangeLineSWCluster = []\r\n            } \r\n        },\r\n        openSWCluster(idx) {\r\n            this.selSWCluster = this.$store.getters.getSWCluster\r\n            if ( this.element.sswc[idx].swc != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getSWClusterPath(this.element.sswc[idx].swc)\r\n                }\r\n                this.editSWClusterItem.swc = { name: this.element.sswc[idx].swc, uuid: endLine }\r\n            }\r\n        },\r\n        editSWCluster(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+idx)\r\n            if (endLine != undefined && this.editSWClusterItem.swc == null) {\r\n                this.deleteLine(this.element.uuid+'/SCswc-'+idx)\r\n                this.element.sswc[idx].swc = null\r\n            } else if (endLine != undefined && endLine != this.editSWClusterItem.swc.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCswc-'+idx)\r\n                this.newLine(this.element.uuid+'/SCswc-'+idx, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.element.sswc[idx].swc = this.editSWClusterItem.swc.name\r\n            } else if (endLine == undefined && this.editSWClusterItem.swc != null) {\r\n                this.newLine(this.element.uuid+'/SCswc-'+idx, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.element.sswc[idx].swc = this.editSWClusterItem.swc.name\r\n            }\r\n\r\n            this.cancelSWCluster()\r\n        },\r\n        cancelSWCluster() {\r\n            this.editSWClusterItem.swc = null\r\n            this.setactiveUUID()\r\n        },\r\n        addSWCluster() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.sswc.some(item => item.id === n)\r\n            }\r\n            this.editSWClusterItem.id = n\r\n\r\n            if( this.editSWClusterItem.swc != null) {\r\n                var datacount = this.element.sswc.length\r\n                this.newLine(this.element.uuid+'/SCswc-'+datacount, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.editSWClusterItem.swc = this.editSWClusterItem.swc.name\r\n            }\r\n            const addObj = Object.assign({}, this.editSWClusterItem)\r\n            this.element.sswc.push(addObj);\r\n            this.cancelSWCluster()\r\n        },\r\n        clearSWClusterRef() {\r\n            this.isEditingSWCluster = true\r\n            this.editSWClusterItem.swc = null\r\n        },\r\n        setSWClusterSelect() {\r\n            if (this.isEditingSWCluster == true) {\r\n                if (this.editSWClusterItem.swc != null && this.editSWClusterItem.swc.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editSWClusterItem.swc.uuid, element: constant.SWCluster_str} )\r\n                    document.getElementById(this.editSWClusterItem.swc.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editSWClusterItem.swc.uuid)\r\n                }\r\n                this.setSWClusterList()\r\n                this.isEditingSWCluster = false\r\n            } else {\r\n                this.isEditingSWCluster = true\r\n            }\r\n        },\r\n        setSWClusterList() {\r\n            this.selSWCluster = this.$store.getters.getSWCluster\r\n            this.setactiveUUID()\r\n        },\r\n        newSWCluster() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementSoftWareCluster', {\r\n                name: this.$store.getters.getNameSoftWareCluster, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                category: '', inVendor: '', version: '', sdgs: [], executable: [], machineD: [], toMachine: [], process: [], sswc: [],\r\n            })\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}