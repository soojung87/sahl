{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\implementationData.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\implementationData.vue","mtime":1659423195207},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgY29uc3RhbnQgZnJvbSAiLi4vc3RvcmUvY29uc3RhbnRzLmpzIg0KaW1wb3J0IHsgRXZlbnRCdXMgfSBmcm9tICIuLi9tYWluLmpzIg0KaW1wb3J0IGRpYWxvZ1BhdGhTZXR0aW5nIGZyb20gJy4uL2NvbXBvbmVudHMvZGlhbG9nUGF0aFNldHRpbmcudnVlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgcHJvcHM6IFsnZWxlbWVudCcsICdpc0RhdGFpbFZpZXcnLCAnbWluaW1hcHRvb2xiYXInXSwNCiAgICBjb21wb25lbnRzOntkaWFsb2dQYXRoU2V0dGluZ30sDQogICAgY29tcHV0ZWQ6IHsgDQogICAgICAgIGFjdGl2ZVVVSUQoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYWN0aXZlVVVJRA0KICAgICAgICB9LA0KICAgICAgICBkZXRhaWxWaWV3VVVJRCgpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5kZXRhaWxWaWV3VVVJRA0KICAgICAgICB9LA0KICAgICAgICBzZXR0aW5nKCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNldHRpbmcNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIGFjdGl2ZVVVSUQodmFsKSB7DQogICAgICAgICAgICB0aGlzLnNldFRvb2xiYXJDb2xvcih2YWwpDQogICAgICAgIH0sDQogICAgICAgIGRldGFpbFZpZXdVVUlEKHZhbCkgew0KICAgICAgICAgICAgdGhpcy5zZXRUb29sYmFyQ29sb3JEZXRhaWxWaWV3KHZhbCkNCiAgICAgICAgfSwNCiAgICAgICAgc2V0dGluZyh2YWx1ZSkgew0KICAgICAgICAgICAgdGhpcy56b29tdmFsdWUgPSB2YWx1ZS56b29tTWFpbg0KICAgICAgICAgICAgaWYgKHRoaXMuem9vbXZhbHVlIDwgdGhpcy4kc2V0Wm9vbWluVG9vbHRpcCkgew0KICAgICAgICAgICAgICAgIHRoaXMuaXNUb29sdGlwID0gZmFsc2UNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc1Rvb2x0aXAgPSB0aGlzLm1pbmltYXB0b29sYmFyDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuem9vbXZhbHVlICA+IHRoaXMuJHNldFpvb21pbkxpbmVUaXRsZSAmJiB0aGlzLnpvb212YWx1ZSA8IHRoaXMuJHNldFpvb21pbkxpbmVTZXR1cFN0YXJ0KSB7DQogICAgICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdkcmF3TGluZVRpdGxlQmFyJywgdGhpcy5lbGVtZW50LnV1aWQsIGZhbHNlKQ0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy56b29tdmFsdWUgPiB0aGlzLiRzZXRab29taW5MaW5lU2V0dXBTdGFydCAmJiB0aGlzLnpvb212YWx1ZSA8IHRoaXMuJHNldFpvb21pbkxpbmVTZXR1cEVuZCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZHJhd0xpbmVUaXRsZUJhcicsIHRoaXMuZWxlbWVudC51dWlkLCB0aGlzLmlzZWxlbWVudE9wZW5DbG9zZSkNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgfSwNCiAgICBjcmVhdGVkKCkgew0KICAgICAgICB0aGlzLnNldFRvb2xiYXJDb2xvcih0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEKQ0KICAgIH0sDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHJ1bGVzOiB7DQogICAgICAgICAgICAgICAgbmFtZTogIFt2YWwgPT4gKHZhbCB8fCAnJykubGVuZ3RoID4gMCBdLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRpYWxvZ1BhdGggOiBmYWxzZSwNCiAgICAgICAgICAgIGNvbG9yVG9vbGJhcjogIiM2QTVBQ0QiLA0KICAgICAgICAgICAgem9vbXZhbHVlOiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5nLnpvb21NYWluLA0KICAgICAgICAgICAgaXNUb29sdGlwOiB0aGlzLm1pbmltYXB0b29sYmFyLA0KICAgICAgICAgICAgaXNlbGVtZW50T3BlbkNsb3NlOiB0aGlzLm1pbmltYXB0b29sYmFyLCAvL3Rvb2xiYXLrp4wg67O07Jes7KSE6rKD7J2064OQIOyVhOuLiOuDkCDshKTsoJUgdHJ1ZTog7KCE7LK0IOuLpCDrs7Tsl6zspIwgLyBmYWxzZSA6IHRvb2xiYXLrp4wg67O07Jes7KSMDQogICAgICAgICAgICBpc0VkaXRpbmdDb21wdU1ldGhvZDogdHJ1ZSwNCiAgICAgICAgICAgIGlzRWRpdGluZ0RhdGFDb25zdHI6IHRydWUsDQogICAgICAgICAgICBpc0REUENPcGVuQ2xvc2U6IHRydWUsDQoNCiAgICAgICAgICAgIGlzSW50cm9kdWN0aW9uT3BlbkNsb3NlOiB0cnVlLA0KICAgICAgICAgICAgaXNkZWxldGVJbnRyb2R1Y3Rpb25JdGVtOiBmYWxzZSwNCiAgICAgICAgICAgIGhlYWRlckludHJvZHVjdGlvbjogWw0KICAgICAgICAgICAgICAgIHsgdGV4dDogJ1RyYWNlIFJlZicsIGFsaWduOiAnc3RhcnQnLCBzb3J0YWJsZTogZmFsc2UsIHZhbHVlOiAndHJhY2VyZWYnIH0sDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgc2VsZWN0RGVsZWN0SW50cm9kdWN0aW9uSXRlbTogW10sDQogICAgICAgICAgICBlZGl0SW50cm9kdWN0aW9uSXRlbToge3RyYWNlcmVmOiAnJywgaWQ6ICcnIH0sDQoNCiAgICAgICAgICAgIGlzZGVsZXRlRERQQ0l0ZW06IGZhbHNlLA0KICAgICAgICAgICAgaGVhZGVyRERQQzogWw0KICAgICAgICAgICAgICAgIHsgdGV4dDogJ0NvbXB1IE1ldGhvZCcsIGFsaWduOiAnc3RhcnQnLCBzb3J0YWJsZTogZmFsc2UsIHZhbHVlOiAnY29tcHVtZXRob2QnLCB3aWR0aDogJzE4MHB4JyB9LA0KICAgICAgICAgICAgICAgIHsgdGV4dDogJ0RhdGEgQ29uc3RyJywgc29ydGFibGU6IGZhbHNlLCB2YWx1ZTogJ2RhdGFjb25zdHInLCB3aWR0aDonMTgwcHgnIH0sDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgc2VsZWN0RGVsZWN0RERQQ0l0ZW06IFtdLA0KICAgICAgICAgICAgZGVmYXVsdEREUENJdGVtOiB7IGNvbXB1bWV0aG9kOiBudWxsLCBkYXRhY29uc3RyOiBudWxsLCBpZDogJycgfSwNCiAgICAgICAgICAgIGVkaXRERFBDSXRlbTogeyBjb21wdW1ldGhvZDogbnVsbCwgZGF0YWNvbnN0cjogbnVsbCwgaWQ6ICcnIH0sDQogICAgICAgICAgICBzZWxDb21wdU1ldGhvZDogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDb21wdU1ldGhvZCwNCiAgICAgICAgICAgIHNlbERhdGFDb25zdHI6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RGF0YUNvbnN0ciwNCiAgICAgICAgICAgIHNlbFRlbXBsYXRlVHlwZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRJbXBsZW1lbnRhdGlvbkRhdGFUeXBlLA0KDQogICAgICAgICAgICBpc0lEVEVsZW1lbnRPcGVuQ2xvc2U6IHRydWUsDQogICAgICAgICAgICBpc2RlbGV0ZUlEVEVsZW1lbnRJdGVtOiBmYWxzZSwNCiAgICAgICAgICAgIGlzRWRpdGluZ0lEVEVUeXBlUmVmOiB0cnVlLA0KICAgICAgICAgICAgaGVhZGVySURURWxlbWVudDogWw0KICAgICAgICAgICAgICAgIHsgdGV4dDogJ05hbWUnLCBhbGlnbjogJ3N0YXJ0Jywgc29ydGFibGU6IGZhbHNlLCB2YWx1ZTogJ25hbWUnIH0sDQogICAgICAgICAgICAgICAgeyB0ZXh0OiAnVHlwZSBSZWZlcmVuY2XigIsnLCBzb3J0YWJsZTogZmFsc2UsIHZhbHVlOiAndHlwZXJlZicgfSwNCiAgICAgICAgICAgICAgICB7IHRleHQ6ICdJbnBsYWNlJywgc29ydGFibGU6IGZhbHNlLCB2YWx1ZTogJ2lucGxhY2UnIH0sDQogICAgICAgICAgICAgICAgeyB0ZXh0OiAnRGVzYycsIHNvcnRhYmxlOiBmYWxzZSwgdmFsdWU6ICdkZXNjJyB9DQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgc2VsZWN0RGVsZWN0SURURWxlbWVudEl0ZW06IFtdLA0KICAgICAgICAgICAgZGVmYXVsdElEVEVsZW1lbnRJdGVtOiB7IG5hbWU6ICcnLCB0eXBlcmVmOiBudWxsLCBpbnBsYWNlOiBudWxsLCBkZXNjOiAnJywgaWQ6ICcnIH0sDQogICAgICAgICAgICBlZGl0SURURWxlbWVudEl0ZW06IHsgbmFtZTogJycsIHR5cGVyZWY6IG51bGwsIGlucGxhY2U6IG51bGwsIGRlc2M6ICcnLCBpZDogJycgfSwNCiAgICAgICAgICAgIGNoYW5nZUxpbmVJbXA6IFtdLA0KICAgICAgICAgICAgY2hhbmdlTGluZUREUEM6IFtdLA0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkICgpIHsNCiAgICAgICAgaWYgKHRoaXMubWluaW1hcHRvb2xiYXIgJiYgdGhpcy56b29tdmFsdWUgPCB0aGlzLiRzZXRab29taW5FbGVtZW50KSB7DQogICAgICAgICAgICB0aGlzLmlzVG9vbHRpcCA9IGZhbHNlDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgc3VibWl0RGlhbG9nKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5wYXRoID0gZWxlbWVudA0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjaGFuZ2VQYXRoRWxlbWVudCcsIHt1dWlkOnRoaXMuZWxlbWVudC51dWlkLCBwYXRoOiB0aGlzLmVsZW1lbnQucGF0aCwgbmFtZTogdGhpcy5lbGVtZW50Lm5hbWV9ICkNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaXNpbnRvRXJyb3JMaXN0Jywge3V1aWQ6dGhpcy5lbGVtZW50LnV1aWQsIG5hbWU6dGhpcy5lbGVtZW50Lm5hbWUsIHBhdGg6dGhpcy5lbGVtZW50LnBhdGh9KQ0KICAgICAgICB9LA0KICAgICAgICBzZXRUb29sYmFyQ29sb3IoYWN0aXZlaWQpIA0KICAgICAgICB7DQogICAgICAgICAgICBpZih0aGlzLmVsZW1lbnQudXVpZCA9PSBhY3RpdmVpZCkgew0KICAgICAgICAgICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0gIiNGRjE0OTMiIA0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLmNvbG9yVG9vbGJhciA9ICIjNkE1QUNEIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXRUb29sYmFyQ29sb3JEZXRhaWxWaWV3KGlzZGV0YWlsKSB7DQogICAgICAgICAgICBpZih0aGlzLmVsZW1lbnQudXVpZCA9PSBpc2RldGFpbCkgew0KICAgICAgICAgICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0gIiNCMEUwRTYiIA0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVsZW1lbnQudXVpZCA9PSB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEKSB7DQogICAgICAgICAgICAgICAgdGhpcy5jb2xvclRvb2xiYXIgID0gIiNGRjE0OTMiDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0gIiM2QTVBQ0QiDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHNob3dJbXBsZW1lbnRhdGlvbkRhdGEoKSB7DQogICAgICAgICAgICB0aGlzLmlzZWxlbWVudE9wZW5DbG9zZSA9IHRoaXMuaXNlbGVtZW50T3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlDQogICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2RyYXdMaW5lVGl0bGVCYXInLCB0aGlzLmVsZW1lbnQudXVpZCwgdGhpcy5pc2VsZW1lbnRPcGVuQ2xvc2UpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBzaG93SW50cm9kdWN0aW9uICgpIHsNCiAgICAgICAgICAgIHRoaXMuaXNJbnRyb2R1Y3Rpb25PcGVuQ2xvc2UgPSB0aGlzLmlzSW50cm9kdWN0aW9uT3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlDQogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZHJhd0xpbmUnKQ0KICAgICAgICB9LA0KICAgICAgICBzaG93RERQQ0l0ZW0oKSB7DQogICAgICAgICAgICB0aGlzLmlzRERQQ09wZW5DbG9zZSA9IHRoaXMuaXNERFBDT3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlDQogICAgICAgICAgICAvLyDshKDsnYQg64uk7IucIOq3uOugpOykmOyVvCDtlZjquLAg65WM66y47JeQDQogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZHJhd0xpbmUnKQ0KICAgICAgICB9LA0KICAgICAgICBzaG93SURURWxlbWVudEl0ZW0oKSB7DQogICAgICAgICAgICB0aGlzLmlzSURURWxlbWVudE9wZW5DbG9zZSA9IHRoaXMuaXNJRFRFbGVtZW50T3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlDQogICAgICAgICAgICAvLyDshKDsnYQg64uk7IucIOq3uOugpOykmOyVvCDtlZjquLAg65WM66y47JeQDQogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZHJhd0xpbmUnKQ0KICAgICAgICB9LA0KICAgICAgICBpbnB1dEltcGxlbWVudGF0aW9uTmFtZSgpIHsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZWRpdEltcGxlbWVudGF0aW9uJywge2NvbXBvOiJOYW1lIiwgdXVpZDp0aGlzLmVsZW1lbnQudXVpZCwgbmFtZTp0aGlzLmVsZW1lbnQubmFtZX0gKQ0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjaGFuZ2VQYXRoRWxlbWVudCcsIHt1dWlkOnRoaXMuZWxlbWVudC51dWlkLCBwYXRoOiB0aGlzLmVsZW1lbnQucGF0aCwgbmFtZTogdGhpcy5lbGVtZW50Lm5hbWV9ICkNCiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQubmFtZSAhPSAnJykgew0KICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaXNpbnRvRXJyb3JMaXN0Jywge3V1aWQ6dGhpcy5lbGVtZW50LnV1aWQsIG5hbWU6dGhpcy5lbGVtZW50Lm5hbWUsIHBhdGg6dGhpcy5lbGVtZW50LnBhdGh9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBpbnB1dE5hbWVTcGFjZSgpIHsNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaXNpbnRvRXJyb3JMaXN0Jywge3V1aWQ6dGhpcy5lbGVtZW50LnV1aWQsIG5hbWVzcGFjZTp0aGlzLmVsZW1lbnQubmFtZXNwYWNlLCBwYXRoOnRoaXMuZWxlbWVudC5wYXRofSkNCiAgICAgICAgfSwNCiAgICAgICAgY2xlYXJUZW1wbGF0ZVR5cGUoKSB7DQogICAgICAgICAgICB0aGlzLmVsZW1lbnQudGVtcGxhdGV0eXBlID0gbnVsbA0KICAgICAgICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQrJy90ZW1wbGF0ZVR5cGUnKQ0KICAgICAgICAgICAgaWYgKGVuZExpbmUgIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgdGhpcy5kZWxldGVMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdGVtcGxhdGVUeXBlJykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgY2xlYXJUeXBlUmVmKCkgew0KICAgICAgICAgICAgdGhpcy5lbGVtZW50LnR5cGVyZWYgPSBudWxsDQogICAgICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL3R5cGVyZWYnKQ0KICAgICAgICAgICAgY29uc29sZS5sb2coZW5kTGluZSkNCiAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL3R5cGVyZWYnKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIGlzQ2hlY2tJbnRyb2R1Y3Rpb24oKSB7DQogICAgICAgICAgICBpZiAodGhpcy5pc2RlbGV0ZUludHJvZHVjdGlvbkl0ZW0gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgIHRoaXMuaXNkZWxldGVJbnRyb2R1Y3Rpb25JdGVtID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERlbGVjdEludHJvZHVjdGlvbkl0ZW0gPSBbXQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzZGVsZXRlSW50cm9kdWN0aW9uSXRlbSA9IHRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGVsZXRlSW50cm9kdWN0aW9uICgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzZGVsZXRlSW50cm9kdWN0aW9uSXRlbSA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRyYWNlID0gdGhpcy5lbGVtZW50LnRyYWNlLmZpbHRlcihpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3REZWxlY3RJbnRyb2R1Y3Rpb25JdGVtLmluZGV4T2YoaXRlbSkgPCAwIH0pDQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUludHJvZHVjdGlvbkl0ZW0gPSBmYWxzZQ0KICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0RGVsZWN0SW50cm9kdWN0aW9uSXRlbSA9IFtdDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIG9wZW5JbnRyb2R1Y3Rpb24gKGlkeCkgew0KICAgICAgICAgICAgdGhpcy5lZGl0SW50cm9kdWN0aW9uSXRlbS50cmFjZXJlZiA9IHRoaXMuZWxlbWVudC50cmFjZVtpZHhdLnRyYWNlcmVmDQogICAgICAgIH0sDQogICAgICAgIGFkZEludHJvZHVjdGlvbiAoKSB7DQogICAgICAgICAgICBsZXQgcmVzID0gdHJ1ZSwgbiA9IDANCiAgICAgICAgICAgIHdoaWxlIChyZXMpIHsNCiAgICAgICAgICAgICAgICBuKysNCiAgICAgICAgICAgICAgICByZXMgPSB0aGlzLmVsZW1lbnQudHJhY2Uuc29tZShpdGVtID0+IGl0ZW0uaWQgPT09IG4pDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmVkaXRJbnRyb2R1Y3Rpb25JdGVtLmlkID0gbg0KICAgICAgICAgICAgY29uc3QgYWRkT2JqID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5lZGl0SW50cm9kdWN0aW9uSXRlbSk7DQogICAgICAgICAgICB0aGlzLmVsZW1lbnQudHJhY2UucHVzaChhZGRPYmopOw0KICAgICAgICAgICAgdGhpcy5jYW5jZWxJbnRyb2R1Y3Rpb24oKQ0KICAgICAgICB9LA0KICAgICAgICBlZGl0SW50cm9kdWN0aW9uIChpZHgpIHsNCiAgICAgICAgICAgIHRoaXMuZWxlbWVudC50cmFjZVtpZHhdLnRyYWNlcmVmID0gdGhpcy5lZGl0SW50cm9kdWN0aW9uSXRlbS50cmFjZXJlZg0KICAgICAgICAgICAgdGhpcy5jYW5jZWxJbnRyb2R1Y3Rpb24oKQ0KICAgICAgICB9LA0KICAgICAgICBjYW5jZWxJbnRyb2R1Y3Rpb24gKCkgew0KICAgICAgICAgICAgdGhpcy5lZGl0SW50cm9kdWN0aW9uSXRlbS50cmFjZXJlZiA9ICcnDQogICAgICAgICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKQ0KICAgICAgICB9LA0KDQogICAgICAgIGlzQ2hlY2tERFBDKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNkZWxldGVERFBDSXRlbSA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUREUENJdGVtID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERlbGVjdEREUENJdGVtID0gW10NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUREUENJdGVtID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkZWxldGVERFBDKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNkZWxldGVERFBDSXRlbSA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgZm9yKGxldCBpPTA7IGk8dGhpcy5lbGVtZW50LmRkcGMubGVuZ3RoOyBpKyspew0KICAgICAgICAgICAgICAgICAgICB2YXIgZW5kTGluZUNvbSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNjb21wdS0nK2kpDQogICAgICAgICAgICAgICAgICAgIGlmKGVuZExpbmVDb20gIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjY29tcHUtJytpKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHZhciBlbmRMaW5lRGF0YSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNkYXRhLScraSkNCiAgICAgICAgICAgICAgICAgICAgaWYoZW5kTGluZURhdGEgIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjZGF0YS0nK2kpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYoZW5kTGluZUNvbSAhPSB1bmRlZmluZWQgfHwgZW5kTGluZURhdGEgIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpbmVERFBDLnB1c2goe2VuZExpbmVDb206ZW5kTGluZUNvbSwgZW5kTGluZURhdGE6ZW5kTGluZURhdGEsIGlkOiB0aGlzLmVsZW1lbnQuZGRwY1tpXS5pZH0pDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuZGRwYyA9IHRoaXMuZWxlbWVudC5kZHBjLmZpbHRlcihpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3REZWxlY3RERFBDSXRlbS5pbmRleE9mKGl0ZW0pIDwgMCB9KQ0KDQogICAgICAgICAgICAgICAgZm9yKGxldCBuPTA7IG48dGhpcy5lbGVtZW50LmRkcGMubGVuZ3RoOyBuKyspIHsNCiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBpZHg9MDsgaWR4PHRoaXMuY2hhbmdlTGluZUREUEMubGVuZ3RoOyBpZHgrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5kZHBjW25dLmlkID09IHRoaXMuY2hhbmdlTGluZUREUENbaWR4XS5pZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuZGRwY1tuXS5jb21wdW1ldGhvZCAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNjb21wdS0nK24sIHRoaXMuZWxlbWVudC51dWlkKycvRERQQycsIHRoaXMuY2hhbmdlTGluZUREUENbaWR4XS5lbmRMaW5lQ29tKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50LmRkcGNbbl0uZGF0YWNvbnN0ciAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNkYXRhLScrbiwgdGhpcy5lbGVtZW50LnV1aWQrJy9ERFBDJywgdGhpcy5jaGFuZ2VMaW5lRERQQ1tpZHhdLmVuZExpbmVEYXRhKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMuaXNkZWxldGVERFBDSXRlbSA9IGZhbHNlDQogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3REZWxlY3RERFBDSXRlbSA9IFtdDQogICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VMaW5lRERQQyA9IFtdDQogICAgICAgICAgICB9IA0KICAgICAgICB9LA0KICAgICAgICBvcGVuRERQQyhpZHgpIHsNCiAgICAgICAgICAgIHRoaXMuc2VsQ29tcHVNZXRob2QgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENvbXB1TWV0aG9kDQogICAgICAgICAgICB0aGlzLnNlbERhdGFDb25zdHIgPSAgdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXREYXRhQ29uc3RyDQoNCiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmNvbXB1bWV0aG9kICE9IG51bGwgKSB7DQogICAgICAgICAgICAgICAgdmFyIGVuZExpbmVDID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2NvbXB1LScraWR4KQ0KICAgICAgICAgICAgICAgIGlmIChlbmRMaW5lQyA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgZW5kTGluZUMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENvbXB1TWV0aG9kUGF0aCh0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmNvbXB1bWV0aG9kKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZCA9IHsgbmFtZSA6dGhpcy5lbGVtZW50LmRkcGNbaWR4XS5jb21wdW1ldGhvZCwgdXVpZDogZW5kTGluZUMgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5kZHBjW2lkeF0uZGF0YWNvbnN0ciAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgdmFyIGVuZExpbmVEID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2RhdGEtJytpZHgpDQogICAgICAgICAgICAgICAgaWYgKGVuZExpbmVEID09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICBlbmRMaW5lRCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RGF0YUNvbnN0clBhdGgodGhpcy5lbGVtZW50LmRkcGNbaWR4XS5kYXRhY29uc3RyKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyID0geyBuYW1lIDp0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmRhdGFjb25zdHIsIHV1aWQ6IGVuZExpbmVEIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgYWRkRERQQygpIHsNCiAgICAgICAgICAgIGxldCByZXMgPSB0cnVlLCBuID0gMA0KICAgICAgICAgICAgd2hpbGUgKHJlcykgew0KICAgICAgICAgICAgICAgIG4rKw0KICAgICAgICAgICAgICAgIHJlcyA9IHRoaXMuZWxlbWVudC5kZHBjLnNvbWUoaXRlbSA9PiBpdGVtLmlkID09PSBuKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5lZGl0RERQQ0l0ZW0uaWQgPSBuDQoNCiAgICAgICAgICAgIHZhciBkYXRhY291bnQgPSB0aGlzLmVsZW1lbnQuZGRwYy5sZW5ndGgNCg0KICAgICAgICAgICAgaWYoIHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm5ld0xpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjY29tcHUtJytkYXRhY291bnQsIHRoaXMuZWxlbWVudC51dWlkKycvRERQQycsIHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kLnV1aWQpDQogICAgICAgICAgICAgICAgdGhpcy5lZGl0RERQQ0l0ZW0uY29tcHVtZXRob2QgPSB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZC5uYW1lDQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiggdGhpcy5lZGl0RERQQ0l0ZW0uZGF0YWNvbnN0ciAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2RhdGEtJytkYXRhY291bnQsIHRoaXMuZWxlbWVudC51dWlkKycvRERQQycsIHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIudXVpZCkNCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyID0gdGhpcy5lZGl0RERQQ0l0ZW0uZGF0YWNvbnN0ci5uYW1lDQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb25zdCBhZGRPYmogPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmVkaXRERFBDSXRlbSkNCiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5kZHBjLnB1c2goYWRkT2JqKQ0KICAgICAgICAgICAgdGhpcy5jYW5jZWxERFBDKCkNCiAgICAgICAgfSwNCiAgICAgICAgZWRpdEREUEMoaWR4KSB7DQogICAgICAgICAgICB2YXIgZW5kY29tcHVMaW5lID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2NvbXB1LScraWR4KQ0KICAgICAgICAgICAgaWYgKGVuZGNvbXB1TGluZSAhPSB1bmRlZmluZWQgJiYgdGhpcy5lZGl0RERQQ0l0ZW0uY29tcHVtZXRob2QgPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNjb21wdS0nK2lkeCkNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmNvbXB1bWV0aG9kID0gbnVsbA0KICAgICAgICAgICAgfSBlbHNlIGlmIChlbmRjb21wdUxpbmUgIT0gdW5kZWZpbmVkICYmIGVuZGNvbXB1TGluZSAhPSB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZC51dWlkKSB7DQogICAgICAgICAgICAgICAgLy/quLDsobTqurwg7IKt7KCc7ZW07JW87ZWc64ukIHZ1ZXjsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIG1haW52aWV37JeQ7ISc64+EIOyCreygnO2VmOqzoCANCiAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjY29tcHUtJytpZHgpDQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2NvbXB1LScraWR4LCB0aGlzLmVsZW1lbnQudXVpZCsnL0REUEMnLCB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZC51dWlkKQ0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudC5kZHBjW2lkeF0uY29tcHVtZXRob2QgPSB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZC5uYW1lDQogICAgICAgICAgICB9IGVsc2UgaWYoZW5kY29tcHVMaW5lID09IHVuZGVmaW5lZCAmJiB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZCAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8gaW5wdXTsnLzroZwg65Ok7Ja07JmU7J2EIOuVjCB1dWlk6rCS7J20IOyXhuuKlCDqsr3smrDqsIAg7J6I64qU642wIGNvbXBvL2RhdGNvbiDrkZjspJEg7ZWY64KY66eMIGVkaXTtlZjrqbQg7ZWc7Kq97J20IHV1aWTqsJLsnbQg7JeG7Ja07IScIOyXkOufrOuCqA0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5ld0xpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjY29tcHUtJytpZHgsIHRoaXMuZWxlbWVudC51dWlkKycvRERQQycsIHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kLnV1aWQpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudC5kZHBjW2lkeF0uY29tcHVtZXRob2QgPSB0aGlzLmVkaXRERFBDSXRlbS5jb21wdW1ldGhvZC5uYW1lDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHZhciBlbmRkYXRhTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNkYXRhLScraWR4KQ0KICAgICAgICAgICAgY29uc29sZS5sb2coJ2VkaXRERFBDICAgICAgJysgZW5kZGF0YUxpbmUpDQogICAgICAgICAgICBpZiAoZW5kZGF0YUxpbmUgIT0gdW5kZWZpbmVkICYmIHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIgPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2RkcGNkYXRhLScraWR4KQ0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudC5kZHBjW2lkeF0uZGF0YWNvbnN0ciA9IG51bGwNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoZW5kZGF0YUxpbmUgIT0gdW5kZWZpbmVkICYmIGVuZGRhdGFMaW5lICE9IHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIudXVpZCkgew0KICAgICAgICAgICAgICAgIC8v6riw7KG06rq8IOyCreygnO2VtOyVvO2VnOuLpCB2dWV47JeQ7ISc64+EIOyCreygnO2VmOqzoCBtYWludmlld+yXkOyEnOuPhCDsgq3soJztlZjqs6AgDQogICAgICAgICAgICAgICAgdGhpcy5kZWxldGVMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2RhdGEtJytpZHgpDQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvZGRwY2RhdGEtJytpZHgsIHRoaXMuZWxlbWVudC51dWlkKycvRERQQycsIHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIudXVpZCkNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmRhdGFjb25zdHIgPSB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyLm5hbWUNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoZW5kZGF0YUxpbmUgPT0gdW5kZWZpbmVkICYmIHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIgIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5ld0xpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9kZHBjZGF0YS0nK2lkeCwgdGhpcy5lbGVtZW50LnV1aWQrJy9ERFBDJywgdGhpcy5lZGl0RERQQ0l0ZW0uZGF0YWNvbnN0ci51dWlkKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuZGRwY1tpZHhdLmRhdGFjb25zdHIgPSB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyLm5hbWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgdGhpcy5jYW5jZWxERFBDKCkNCiAgICAgICAgfSwNCiAgICAgICAgY2FuY2VsRERQQygpIHsNCiAgICAgICAgICAgIHRoaXMuZWRpdEREUENJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0RERQQ0l0ZW0pDQogICAgICAgICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKQ0KICAgICAgICB9LA0KICAgICAgICBzZXRDb21wdU1ldGhvZExpc3QoKSB7DQogICAgICAgICAgICB0aGlzLnNlbENvbXB1TWV0aG9kID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDb21wdU1ldGhvZA0KICAgICAgICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCkNCiAgICAgICAgfSwNCiAgICAgICAgc2V0RGF0YUNvbnN0ckxpc3QoKSB7DQogICAgICAgICAgICB0aGlzLnNlbERhdGFDb25zdHIgPSAgdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXREYXRhQ29uc3RyDQogICAgICAgICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKQ0KICAgICAgICB9LA0KICAgICAgICBuZXdDb21wdU1ldGhvZCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRYID0gQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKSkNCiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRZID0gQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKSkNCg0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50Q29tcHVNZWh0b2QnLCB7DQogICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUNvbXB1TWV0aG9kLCAgaW5wdXQ6IGZhbHNlLCBwYXRoOiAnJywNCiAgICAgICAgICAgICAgICAgICAgdG9wOiBlbGVtZW50WSwgbGVmdDogZWxlbWVudFgsIHppbmRleDogMTAsIGNhdGVnb3J5Om51bGwsIGF0dHJpYnV0ZU5hbWU6JycsIHNjYWxlczpbXSwgaWNvbjoibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwgdmFsaWRhdGlvbjogZmFsc2UNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2FkZC1lbGVtZW50JywgY29uc3RhbnQuQ29tcHVNZXRob2Rfc3RyKQ0KICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2FkZC1lbGVtZW50JywgY29uc3RhbnQuRGF0ZVR5cGVfc3RyKQ0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdlZGl0SW1wbGVtZW50YXRpb24nLCB7Y29tcG86InoiLCB1dWlkOnRoaXMuZWxlbWVudC51dWlkLCB6aW5kZXg6Mn0gKQ0KICAgICAgICB9LA0KICAgICAgICBuZXdEYXRhQ29uc3RyKCkgew0KICAgICAgICAgICAgY29uc3QgZWxlbWVudFggPSBBcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApKQ0KICAgICAgICAgICAgY29uc3QgZWxlbWVudFkgPSBBcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApKQ0KDQoNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudERhdGFDb25zdHInLCB7DQogICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZURhdGFDb25zdHIsIGlucHV0OiBmYWxzZSwgcGF0aDogJycsDQogICAgICAgICAgICAgICAgICAgIHRvcDogZWxlbWVudFksIGxlZnQ6IGVsZW1lbnRYLCB6aW5kZXg6IDEwLCBsb3dlcmxpbWl0Om51bGwsIHVwcGVybGltaXQ6bnVsbCwgaWNvbjoibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwgdmFsaWRhdGlvbjogZmFsc2UgfSkNCiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZGQtZWxlbWVudCcsIGNvbnN0YW50LkRhdGFDb25zdHJfc3RyKQ0KICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2FkZC1lbGVtZW50JywgY29uc3RhbnQuRGF0ZVR5cGVfc3RyKQ0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdlZGl0SW1wbGVtZW50YXRpb24nLCB7Y29tcG86InoiLCB1dWlkOnRoaXMuZWxlbWVudC51dWlkLCB6aW5kZXg6Mn0gKQ0KICAgICAgICB9LA0KICAgICAgICBzZXRDb21wdU1ldGhvZFNlbGVjdCgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzRWRpdGluZ0NvbXB1TWV0aG9kID09IHRydWUpIHsgDQogICAgICAgICAgICAgICAgLy8gbmV37JeQ7IScIOuTpOyWtOyZlOydhCDrlYwg7J206rKMIOutlOyngCDrs7Tqs6Dsi7bsnYTrlYwg7J206rG0IOyXsOqysO2VnCDsg4Htg5zqsIAg7JWE64uI6riwIOuVjOusuOyXkCBlbmR1dWlk66GcIOywvuydhOyImOqwgOyXhuuLpC4gDQogICAgICAgICAgICAgICAgLy8gZWRpdO2VoOuVjOuekSBuZXftlaDrlYzrnpEg7IOd6rCB7ZW067SQ7JW87ZWoDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kLnV1aWQgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXREZXRhaWxWaWV3Jywge3V1aWQ6IHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kLnV1aWQsIGVsZW1lbnQ6IGNvbnN0YW50LkNvbXB1TWV0aG9kX3N0cn0gKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5lZGl0RERQQ0l0ZW0uY29tcHVtZXRob2QudXVpZCt0aGlzLmxvY2F0aW9uKS5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJywgYmxvY2s6ICdzdGFydCcgfSkNCiAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhY3RpdmUtZWxlbWVudCcsIHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kLnV1aWQpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5zZXRDb21wdU1ldGhvZExpc3QoKQ0KICAgICAgICAgICAgICAgIHRoaXMuaXNFZGl0aW5nQ29tcHVNZXRob2QgPSBmYWxzZQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzRWRpdGluZ0NvbXB1TWV0aG9kID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXREYXRhQ29uc3RyU2VsZWN0KCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNFZGl0aW5nRGF0YUNvbnN0ciA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEREUENJdGVtLmRhdGFjb25zdHIgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5lZGl0RERQQ0l0ZW0uZGF0YWNvbnN0ci51dWlkICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0RGV0YWlsVmlldycsIHt1dWlkOiB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyLnV1aWQsIGVsZW1lbnQ6IGNvbnN0YW50LkRhdGFDb25zdHJfc3RyfSApDQogICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyLnV1aWQrdGhpcy5sb2NhdGlvbikuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnc3RhcnQnIH0pDQogICAgICAgICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnYWN0aXZlLWVsZW1lbnQnLCB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyLnV1aWQpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5zZXREYXRhQ29uc3RyTGlzdCgpDQogICAgICAgICAgICAgICAgdGhpcy5pc0VkaXRpbmdEYXRhQ29uc3RyID0gZmFsc2UNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc0VkaXRpbmdEYXRhQ29uc3RyID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBjbGVhckNvbXB1TWV0aG9kUmVmKCkgew0KICAgICAgICAgICAgdGhpcy5pc0VkaXRpbmdDb21wdU1ldGhvZCA9IHRydWUNCiAgICAgICAgICAgIHRoaXMuZWRpdEREUENJdGVtLmNvbXB1bWV0aG9kID0gbnVsbA0KICAgICAgICB9LA0KICAgICAgICBjbGVhckRhdGFDb25zdHJSZWYoKSB7DQogICAgICAgICAgICB0aGlzLmlzRWRpdGluZ0RhdGFDb25zdHIgPSB0cnVlDQogICAgICAgICAgICB0aGlzLmVkaXRERFBDSXRlbS5kYXRhY29uc3RyID0gbnVsbA0KICAgICAgICB9LA0KDQogICAgICAgIGlzQ2hlY2tJRFRFbGVtZW50KCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNkZWxldGVJRFRFbGVtZW50SXRlbSA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUlEVEVsZW1lbnRJdGVtID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERlbGVjdElEVEVsZW1lbnRJdGVtID0gW10NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUlEVEVsZW1lbnRJdGVtID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkZWxldGVJRFRFbGVtZW50KCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNkZWxldGVJRFRFbGVtZW50SXRlbSA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgZm9yKGxldCBpPTA7IGk8dGhpcy5lbGVtZW50LmlkdGVsZW1lbnQubGVuZ3RoOyBpKyspew0KICAgICAgICAgICAgICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2lkdGV0YWJsZS0nK2kpDQogICAgICAgICAgICAgICAgICAgIGlmKGVuZExpbmUgIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpbmVJbXAucHVzaCh7aWQ6dGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaV0uaWQsIGVuZExpbmU6ZW5kTGluZX0pDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUtJytpKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQuaWR0ZWxlbWVudC5maWx0ZXIoaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGVsZWN0SURURWxlbWVudEl0ZW0uaW5kZXhPZihpdGVtKSA8IDAgfSkNCg0KICAgICAgICAgICAgICAgIGZvcihsZXQgbj0wOyBuPHRoaXMuZWxlbWVudC5pZHRlbGVtZW50Lmxlbmd0aDsgbisrKSB7DQogICAgICAgICAgICAgICAgICAgIGZvcihsZXQgaWR4PTA7IGlkeDx0aGlzLmNoYW5nZUxpbmVJbXAubGVuZ3RoOyBpZHgrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5pZHRlbGVtZW50W25dLmlkID09IHRoaXMuY2hhbmdlTGluZUltcFtpZHhdLmlkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvaWR0ZXRhYmxlLScrbiwgdGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUnLCB0aGlzLmNoYW5nZUxpbmVJbXBbaWR4XS5lbmRMaW5lKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5pc2RlbGV0ZUlEVEVsZW1lbnRJdGVtID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERlbGVjdElEVEVsZW1lbnRJdGVtID0gW10NCiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpbmVJbXAgPSBbXQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBvcGVuSURURWxlbWVudChpZHgpIHsNCiAgICAgICAgICAgIHRoaXMuc2VsVGVtcGxhdGVUeXBlID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRJbXBsZW1lbnRhdGlvbkRhdGFUeXBlDQogICAgICAgICAgICB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS5uYW1lID0gdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5uYW1lDQogICAgICAgICAgICBpZiAoIHRoaXMuZWxlbWVudC5pZHRlbGVtZW50W2lkeF0udHlwZXJlZiAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUtJytpZHgpDQogICAgICAgICAgICAgICAgaWYgKGVuZExpbmUgPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEltcGxlbWVudGF0aW9uUGF0aCh0aGlzLmVsZW1lbnQuaWR0ZWxlbWVudFtpZHhdLnR5cGVyZWYpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLnR5cGVyZWYgPSB7IG5hbWU6IHRoaXMuZWxlbWVudC5pZHRlbGVtZW50W2lkeF0udHlwZXJlZiwgdXVpZDogZW5kTGluZSB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS5pbnBsYWNlID0gdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5pbnBsYWNlDQogICAgICAgICAgICB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS5kZXNjID0gdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5kZXNjDQogICAgICAgIH0sDQogICAgICAgIGFkZElEVEVsZW1lbnQoKSB7DQogICAgICAgICAgICBsZXQgcmVzID0gdHJ1ZSwgbiA9IDANCiAgICAgICAgICAgIHdoaWxlIChyZXMpIHsNCiAgICAgICAgICAgICAgICBuKysNCiAgICAgICAgICAgICAgICByZXMgPSB0aGlzLmVsZW1lbnQuaWR0ZWxlbWVudC5zb21lKGl0ZW0gPT4gaXRlbS5pZCA9PT0gbikNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLmlkID0gbg0KDQogICAgICAgICAgICBpZiggdGhpcy5lZGl0SURURWxlbWVudEl0ZW0udHlwZXJlZiAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgdmFyIGRhdGFjb3VudCA9IHRoaXMuZWxlbWVudC5pZHRlbGVtZW50Lmxlbmd0aA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2lkdGV0YWJsZS0nK2RhdGFjb3VudCwgdGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUnLCB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLnV1aWQpDQogICAgICAgICAgICAgICAgdGhpcy5lZGl0SURURWxlbWVudEl0ZW0udHlwZXJlZiA9IHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLnR5cGVyZWYubmFtZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc3QgYWRkT2JqID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5lZGl0SURURWxlbWVudEl0ZW0pOw0KICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnQucHVzaChhZGRPYmopOw0KICAgICAgICAgICAgdGhpcy5jYW5jZWxJRFRFbGVtZW50KCkNCiAgICAgICAgfSwNCiAgICAgICAgZWRpdElEVEVsZW1lbnQoaWR4KSB7DQogICAgICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2lkdGV0YWJsZS0nK2lkeCkNCiAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmID09IG51bGwpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUtJytpZHgpDQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS50eXBlcmVmID0gbnVsbA0KICAgICAgICAgICAgfSBlbHNlIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiBlbmRMaW5lICE9IHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLnR5cGVyZWYudXVpZCkgew0KICAgICAgICAgICAgICAgIC8v6riw7KG06rq8IOyCreygnO2VtOyVvO2VnOuLpCB2dWV47JeQ7ISc64+EIOyCreygnO2VmOqzoCBtYWludmlld+yXkOyEnOuPhCDsgq3soJztlZjqs6AgDQogICAgICAgICAgICAgICAgdGhpcy5kZWxldGVMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvaWR0ZXRhYmxlLScraWR4KQ0KICAgICAgICAgICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL2lkdGV0YWJsZS0nK2lkeCwgdGhpcy5lbGVtZW50LnV1aWQrJy9pZHRldGFibGUnLCB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLnV1aWQpDQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS50eXBlcmVmID0gdGhpcy5lZGl0SURURWxlbWVudEl0ZW0udHlwZXJlZi5uYW1lDQogICAgICAgICAgICB9ZWxzZSBpZiAoZW5kTGluZSA9PSB1bmRlZmluZWQgJiYgdGhpcy5lZGl0SURURWxlbWVudEl0ZW0udHlwZXJlZiAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvaWR0ZXRhYmxlLScraWR4LCB0aGlzLmVsZW1lbnQudXVpZCsnL2lkdGV0YWJsZScsIHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLnR5cGVyZWYudXVpZCkNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQuaWR0ZWxlbWVudFtpZHhdLnR5cGVyZWYgPSB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLm5hbWUNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5uYW1lID0gdGhpcy5lZGl0SURURWxlbWVudEl0ZW0ubmFtZQ0KICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5pbnBsYWNlID0gdGhpcy5lZGl0SURURWxlbWVudEl0ZW0uaW5wbGFjZQ0KICAgICAgICAgICAgdGhpcy5lbGVtZW50LmlkdGVsZW1lbnRbaWR4XS5kZXNjID0gdGhpcy5lZGl0SURURWxlbWVudEl0ZW0uZGVzYw0KICAgICAgICAgICAgdGhpcy5jYW5jZWxJRFRFbGVtZW50KCkNCiAgICAgICAgfSwNCiAgICAgICAgY2FuY2VsSURURWxlbWVudCgpIHsNCiAgICAgICAgICAgIHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0SURURWxlbWVudEl0ZW0pDQogICAgICAgICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKQ0KICAgICAgICB9LA0KICAgICAgICBzZXRJRFRFbGVtZW50U2VsZWN0KCkgew0KICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnc2V0SURURWxlbWVudFNlbGVjdCAgICcgKyB0aGlzLmlzRWRpdGluZ0lEVEVUeXBlUmVmKQ0KICAgICAgICAgICAgaWYgKHRoaXMuaXNFZGl0aW5nSURURVR5cGVSZWYgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgICBpZiAodGhpcy5lZGl0SURURWxlbWVudEl0ZW0udHlwZXJlZiAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLnV1aWQgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXREZXRhaWxWaWV3Jywge3V1aWQ6IHRoaXMuZWRpdElEVEVsZW1lbnRJdGVtLnR5cGVyZWYudXVpZCwgZWxlbWVudDogY29uc3RhbnQuSW1wbGVtZW50YXRpb25fc3RyfSApDQogICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLnV1aWQrdGhpcy5sb2NhdGlvbikuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnc3RhcnQnIH0pDQogICAgICAgICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnYWN0aXZlLWVsZW1lbnQnLCB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmLnV1aWQpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5zZXRUZW1wbGF0ZVR5cGVMaXN0KCkNCiAgICAgICAgICAgICAgICB0aGlzLmlzRWRpdGluZ0lEVEVUeXBlUmVmID0gZmFsc2UNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc0VkaXRpbmdJRFRFVHlwZVJlZiA9IHRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgY2xlYXJJRFRFVHlwZVJlZigpIHsNCiAgICAgICAgICAgIHRoaXMuaXNFZGl0aW5nSURURVR5cGVSZWYgPSB0cnVlDQogICAgICAgICAgICB0aGlzLmVkaXRJRFRFbGVtZW50SXRlbS50eXBlcmVmID0gbnVsbA0KICAgICAgICB9LA0KDQogICAgICAgIHNldFR5cGVSZWZTZWxlY3QoKSB7DQogICAgICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL3R5cGVyZWYnKQ0KICAgICAgICAgICAgaWYgKGVuZExpbmUgPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0SW1wbGVtZW50YXRpb25QYXRoKHRoaXMuZWxlbWVudC50eXBlcmVmKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGVuZExpbmUgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0RGV0YWlsVmlldycsIHt1dWlkOiBlbmRMaW5lLCBlbGVtZW50OiBjb25zdGFudC5JbXBsZW1lbnRhdGlvbl9zdHJ9ICkNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbmRMaW5lK3RoaXMubG9jYXRpb24pLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ3N0YXJ0JyB9KQ0KICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhY3RpdmUtZWxlbWVudCcsIGVuZExpbmUpDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHNldFRlbXBsYXRlVHlwZVNlbGVjdCgpIHsNCiAgICAgICAgICAgIHZhciBlbmRMaW5lID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdGVtcGxhdGVUeXBlJykNCiAgICAgICAgICAgIGlmIChlbmRMaW5lID09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEltcGxlbWVudGF0aW9uUGF0aCh0aGlzLmVsZW1lbnQudGVtcGxhdGV0eXBlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGVuZExpbmUgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0RGV0YWlsVmlldycsIHt1dWlkOiBlbmRMaW5lLCBlbGVtZW50OiBjb25zdGFudC5JbXBsZW1lbnRhdGlvbl9zdHJ9ICkNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbmRMaW5lK3RoaXMubG9jYXRpb24pLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ3N0YXJ0JyB9KQ0KICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhY3RpdmUtZWxlbWVudCcsIGVuZExpbmUpDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHNldFRlbXBsYXRlVHlwZUxpc3QoKSB7DQogICAgICAgICAgICB0aGlzLnNlbFRlbXBsYXRlVHlwZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0SW1wbGVtZW50YXRpb25EYXRhVHlwZQ0KICAgICAgICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCkNCiAgICAgICAgfSwNCiAgICAgICAgc2V0VGVtcGxhdGVUeXBlKGl0ZW0pew0KICAgICAgICAgICAgY29uc29sZS5sb2coaXRlbSkNCiAgICAgICAgICAgIGlmKCB0aGlzLmVsZW1lbnQudGVtcGxhdGV0eXBlICE9IGl0ZW0ubmFtZSkgew0KICAgICAgICAgICAgICAgIHZhciBlbmRMaW5lID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdGVtcGxhdGVUeXBlJykNCiAgICAgICAgICAgICAgICBpZiAoZW5kTGluZSAhPSB1bmRlZmluZWQgJiYgZW5kTGluZSAhPSBpdGVtLnV1aWQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/quLDsobTqurwg7IKt7KCc7ZW07JW87ZWc64ukIHZ1ZXjsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIG1haW52aWV37JeQ7ISc64+EIOyCreygnO2VmOqzoCANCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWxldGVMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdGVtcGxhdGVUeXBlJykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgLy/sg4jroZwg7LaU6rCA7ZW07KSA64ukDQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdGVtcGxhdGVUeXBlJywgdGhpcy5lbGVtZW50LnV1aWQrJy90ZW1wbGF0ZVR5cGUnLCBpdGVtLnV1aWQpDQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRlbXBsYXRldHlwZSA9IGl0ZW0ubmFtZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCkNCiAgICAgICAgfSwNCiAgICAgICAgc2V0VHlwZVJlZihpdGVtKXsNCiAgICAgICAgICAgIC8vY29uc29sZS5sb2coaXRlbSkNCiAgICAgICAgICAgIGlmKCB0aGlzLmVsZW1lbnQudHlwZXJlZiAhPSBpdGVtLm5hbWUpIHsNCiAgICAgICAgICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCsnL3R5cGVyZWYnKQ0KICAgICAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiBlbmRMaW5lICE9IGl0ZW0udXVpZCkgew0KICAgICAgICAgICAgICAgICAgICAvL+q4sOyhtOq6vCDsgq3soJztlbTslbztlZzri6QgdnVleOyXkOyEnOuPhCDsgq3soJztlZjqs6AgbWFpbnZpZXfsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIA0KICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQrJy90eXBlcmVmJykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgLy/sg4jroZwg7LaU6rCA7ZW07KSA64ukDQogICAgICAgICAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkKycvdHlwZXJlZicsIHRoaXMuZWxlbWVudC51dWlkKycvdHlwZXJlZicsIGl0ZW0udXVpZCkNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQudHlwZXJlZiA9IGl0ZW0ubmFtZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCkNCiAgICAgICAgfSwNCiAgICAgICAgbmV3VGVtcGxhdGVUeXBlKCkgew0KICAgICAgICAgICAgY29uc3QgZWxlbWVudFggPSBBcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApKQ0KICAgICAgICAgICAgY29uc3QgZWxlbWVudFkgPSBBcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApKQ0KDQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRJbXBsZW1lbnRhdGlvbicsIHsNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lSW1wbGVtZW50YXRpb24sICBpbnB1dDogZmFsc2UsIHBhdGg6ICcnLA0KICAgICAgICAgICAgICAgICAgICB0b3A6IGVsZW1lbnRZLCBsZWZ0OiBlbGVtZW50WCwgemluZGV4OiAxMCwgaWNvbjoibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwgdmFsaWRhdGlvbjogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5OicnLCBuYW1lc3BhY2U6JycsIGFycmF5c2l6ZTonJywgdHlwZWVtaXR0ZXI6JycsIHRyYWNlTmFtZTogJycsIHRyYWNlOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgdHlwZXJlZjogbnVsbCwgdGVtcGxhdGV0eXBlOm51bGwsIGRlc2M6JycsIGRkcGM6W10sIGlkdGVsZW1lbnQ6W10sDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZGQtZWxlbWVudCcsIGNvbnN0YW50LkltcGxlbWVudGF0aW9uX3N0cikNCiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZGQtZWxlbWVudCcsIGNvbnN0YW50LkRhdGVUeXBlX3N0cikNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZWRpdEltcGxlbWVudGF0aW9uJywge2NvbXBvOiJ6IiwgdXVpZDp0aGlzLmVsZW1lbnQudXVpZCwgemluZGV4OjJ9ICkNCiAgICAgICAgfSwNCiAgICAgICAgDQogICAgICAgIHNldGFjdGl2ZVVVSUQoKSB7DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldHV1aWQnLCB7dXVpZDogdGhpcy5lbGVtZW50LnV1aWR9ICkNCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZWRpdEltcGxlbWVudGF0aW9uJywge2NvbXBvOiJ6IiwgdXVpZDp0aGlzLmVsZW1lbnQudXVpZCwgemluZGV4OjEwfSApDQogICAgICAgIH0sDQogICAgICAgIGRlbGV0ZUxpbmUoZmluZUxpbmUpIHsNCiAgICAgICAgICAgIHZhciBsaW5lbnVtID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRjb25uZWN0TGluZU51bShmaW5lTGluZSkNCiAgICAgICAgICAgIC8vY29uc29sZS5sb2cobGluZW51bSkNCiAgICAgICAgICAgIGlmIChsaW5lbnVtICE9IC0xKSB7DQogICAgICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2RlbGV0ZS1saW5lJywgbGluZW51bSkNCiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2RlbGV0Q29ubmVjdGlvbmxpbmUnLCB7c3RhcnRudW06IGxpbmVudW19ICkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgbmV3TGluZShzdGFydExpbmUsIGRyYXdMaW5lLCBlbmRMaW5lKSB7DQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldENvbm5lY3Rpb25saW5lJywge3N0YXJ0OiBzdGFydExpbmUsIGVuZDogZW5kTGluZX0gKQ0KICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ25ldy1saW5lJywgZHJhd0xpbmUsIGVuZExpbmUpDQogICAgICAgIH0sDQogICAgfSwNCg0KfQ0K"},{"version":3,"sources":["implementationData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"implementationData.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=\"colorToolbar\" dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showImplementationData\">\r\n                                    <v-icon >{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Implementation Data Type</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Implementation Data Type</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-show=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputImplementationName' outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.category\" label=\"Category\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.namespace\" label=\"Name space\" @input='inputNameSpace' placeholder=\"String/String/,String/String/,...\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.arraysize\" label=\"Array Size\" placeholder=\"Int\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.typeemitter\" label=\"Type Emitter\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.typeref\" readonly @click=\"setTypeRefSelect()\" clearable @click:clear='clearTypeRef()' label=\"Type Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/typeref'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setTemplateTypeList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selTemplateType\" :key=\"i\" link @click=\"setTypeRef(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row>\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.templatetype\" readonly @click=\"setTemplateTypeSelect()\" clearable @click:clear='clearTemplateType()' label=\"Template Type\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/templateType'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setTemplateTypeList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selTemplateType\" :key=\"i\" link @click=\"setTemplateType(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-text-field v-model=\"element.desc\" label=\"Desc\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showIntroduction\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isIntroductionOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Introduction\r\n                                    <v-btn @click=\"isCheckIntroduction\" text x-small color=\"indigo\" v-if=\"isIntroductionOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isIntroductionOpenClose && isdeleteIntroductionItem\" @click=\"deleteIntroduction\" text x-small color=\"indigo\" >\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isIntroductionOpenClose\"> \r\n                                    <v-text-field v-model=\"element.traceName\" label=\"Trace Name\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                    <v-data-table v-model=\"selectDelectIntroductionItem\" :headers=\"headerIntroduction\" :items=\"element.trace\"  :items-per-page='20'\r\n                                            :show-select=\"isdeleteIntroductionItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteIntroductionItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openIntroduction(idx)\" @cancel=\"editIntroduction(idx)\" @save=\"cancelIntroduction\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editIntroductionItem.traceref\" label=\"Trace Ref\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addIntroduction()\" @save=\"cancelIntroduction\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editIntroductionItem.traceref\" label=\"Trace Ref\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/DDPC'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showDDPCItem\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isDDPCOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Data Def Props Conditional\r\n                                    <v-btn @click=\"isCheckDDPC\" text x-small color=\"indigo\" v-if=\"isDDPCOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn  v-if=\"isDDPCOpenClose && isdeleteDDPCItem\" @click=\"deleteDDPC\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isDDPCOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectDDPCItem\" :headers=\"headerDDPC\" :items=\"element.ddpc\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteDDPCItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteDDPCItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\" >\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <!-- <v-icon v-if=\"header.value == 'sort'\" small class=\"sortHandle\" >mdi-arrow-all</v-icon> -->\r\n                                                        <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openDDPC(idx)\" @cancel=\"editDDPC(idx)\" @save=\"cancelDDPC\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editDDPCItem.compumethod' label='Compu Method' :items='selCompuMethod' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingCompuMethod\" @click=\"setCompuMethodSelect()\" @blur=\"isEditingCompuMethod=true\" \r\n                                                                        clearable @click:clear='clearCompuMethodRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-autocomplete v-model='editDDPCItem.dataconstr' label='Data Constr' :items='selDataConstr' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingDataConstr\"  @click=\"setDataConstrSelect()\" @blur=\"isEditingDataConstr=true\" \r\n                                                                        clearable @click:clear='clearDataConstrRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addDDPC()\" @save=\"cancelDDPC\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editDDPCItem.compumethod' label='Compu Method' :items='selCompuMethod' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingCompuMethod\" @click=\"setCompuMethodSelect()\" @blur=\"isEditingCompuMethod=true\"\r\n                                                                        clearable @click:clear='clearCompuMethodRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newCompuMethod\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-autocomplete v-model='editDDPCItem.dataconstr' label='Data Constr' :items='selDataConstr' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingDataConstr\" @click=\"setDataConstrSelect()\" @blur=\"isEditingDataConstr=true\"\r\n                                                                        clearable @click:clear='clearDataConstrRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newDataConstr\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/idtetable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showIDTElementItem\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isIDTElementOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Implementation Data Type\r\n                                    <v-btn @click=\"isCheckIDTElement\" text x-small color=\"indigo\" v-if=\"isIDTElementOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isIDTElementOpenClose && isdeleteIDTElementItem\" @click=\"deleteIDTElement\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isIDTElementOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectIDTElementItem\" :headers=\"headerIDTElement\" :items=\"element.idtelement\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteIDTElementItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteIDTElementItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openIDTElement(idx)\" @cancel=\"editIDTElement(idx)\" @save=\"cancelIDTElement\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingIDTETypeRef\" @click=\"setIDTElementSelect()\" @blur=\"isEditingIDTETypeRef=true\" outlined dense style=\"height: 25px;\"\r\n                                                                        clearable @click:clear='clearIDTETypeRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\" value=\"editIDTElementItem.inplace\" :indeterminate=\"editIDTElementItem.inplace==null? true:false\" true-value=\"true\" false-value=\"false\" @click=\"setactiveUUID()\" style=\"height: 35px;\"></v-checkbox>\r\n                                                                <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" @click=\"setactiveUUID\" style=\"height: 35px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addIDTElement()\" @save=\"cancelIDTElement\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editIDTElementItem.name\" :rules=\"rules.name\" label=\"Name\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editIDTElementItem.typeref' label='Type Reference' :items='selTemplateType' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingIDTETypeRef\" @click=\"setIDTElementSelect()\" @blur=\"isEditingIDTETypeRef=true\" outlined dense style=\"height: 25px;\"\r\n                                                                        clearable @click:clear='clearIDTETypeRef'>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newTemplateType\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                                <v-checkbox v-model=\"editIDTElementItem.inplace\" label=\"Inplace\" value=\"editIDTElementItem.inplace\" :indeterminate=\"editIDTElementItem.inplace==null? true:false\" true-value=\"true\" false-value=\"false\" @click=\"setactiveUUID()\" style=\"height: 35px;\"></v-checkbox>\r\n                                                                <v-text-field v-model=\"editIDTElementItem.desc\" label=\"Desc\" @click=\"setactiveUUID\" style=\"height: 35px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-show=\"(!iselementOpenClose && zoomvalue > $setZoominElement) || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: { \r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isEditingCompuMethod: true,\r\n            isEditingDataConstr: true,\r\n            isDDPCOpenClose: true,\r\n\r\n            isIntroductionOpenClose: true,\r\n            isdeleteIntroductionItem: false,\r\n            headerIntroduction: [\r\n                { text: 'Trace Ref', align: 'start', sortable: false, value: 'traceref' },\r\n            ],\r\n            selectDelectIntroductionItem: [],\r\n            editIntroductionItem: {traceref: '', id: '' },\r\n\r\n            isdeleteDDPCItem: false,\r\n            headerDDPC: [\r\n                { text: 'Compu Method', align: 'start', sortable: false, value: 'compumethod', width: '180px' },\r\n                { text: 'Data Constr', sortable: false, value: 'dataconstr', width:'180px' },\r\n            ],\r\n            selectDelectDDPCItem: [],\r\n            defaultDDPCItem: { compumethod: null, dataconstr: null, id: '' },\r\n            editDDPCItem: { compumethod: null, dataconstr: null, id: '' },\r\n            selCompuMethod: this.$store.getters.getCompuMethod,\r\n            selDataConstr: this.$store.getters.getDataConstr,\r\n            selTemplateType: this.$store.getters.getImplementationDataType,\r\n\r\n            isIDTElementOpenClose: true,\r\n            isdeleteIDTElementItem: false,\r\n            isEditingIDTETypeRef: true,\r\n            headerIDTElement: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Type Reference​', sortable: false, value: 'typeref' },\r\n                { text: 'Inplace', sortable: false, value: 'inplace' },\r\n                { text: 'Desc', sortable: false, value: 'desc' }\r\n            ],\r\n            selectDelectIDTElementItem: [],\r\n            defaultIDTElementItem: { name: '', typeref: null, inplace: null, desc: '', id: '' },\r\n            editIDTElementItem: { name: '', typeref: null, inplace: null, desc: '', id: '' },\r\n            changeLineImp: [],\r\n            changeLineDDPC: [],\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showImplementationData() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showIntroduction () {\r\n            this.isIntroductionOpenClose = this.isIntroductionOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showDDPCItem() {\r\n            this.isDDPCOpenClose = this.isDDPCOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showIDTElementItem() {\r\n            this.isIDTElementOpenClose = this.isIDTElementOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        inputImplementationName() {\r\n            this.$store.commit('editImplementation', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n        inputNameSpace() {\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, namespace:this.element.namespace, path:this.element.path})\r\n        },\r\n        clearTemplateType() {\r\n            this.element.templatetype = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/templateType')\r\n            }\r\n        },\r\n        clearTypeRef() {\r\n            this.element.typeref = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n            console.log(endLine)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/typeref')\r\n            }\r\n        },\r\n\r\n        isCheckIntroduction() {\r\n            if (this.isdeleteIntroductionItem == true) {\r\n                this.isdeleteIntroductionItem = false\r\n                this.selectDelectIntroductionItem = []\r\n            } else {\r\n                this.isdeleteIntroductionItem = true\r\n            }\r\n        },\r\n        deleteIntroduction () {\r\n            if (this.isdeleteIntroductionItem == true) {\r\n                this.element.trace = this.element.trace.filter(item => {\r\n                         return this.selectDelectIntroductionItem.indexOf(item) < 0 })\r\n                this.isdeleteIntroductionItem = false\r\n                this.selectDelectIntroductionItem = []\r\n            }\r\n        },\r\n        openIntroduction (idx) {\r\n            this.editIntroductionItem.traceref = this.element.trace[idx].traceref\r\n        },\r\n        addIntroduction () {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.trace.some(item => item.id === n)\r\n            }\r\n            this.editIntroductionItem.id = n\r\n            const addObj = Object.assign({}, this.editIntroductionItem);\r\n            this.element.trace.push(addObj);\r\n            this.cancelIntroduction()\r\n        },\r\n        editIntroduction (idx) {\r\n            this.element.trace[idx].traceref = this.editIntroductionItem.traceref\r\n            this.cancelIntroduction()\r\n        },\r\n        cancelIntroduction () {\r\n            this.editIntroductionItem.traceref = ''\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        isCheckDDPC() {\r\n            if (this.isdeleteDDPCItem == true) {\r\n                this.isdeleteDDPCItem = false\r\n                this.selectDelectDDPCItem = []\r\n            } else {\r\n                this.isdeleteDDPCItem = true\r\n            }\r\n        },\r\n        deleteDDPC() {\r\n            if (this.isdeleteDDPCItem == true) {\r\n                for(let i=0; i<this.element.ddpc.length; i++){\r\n                    var endLineCom = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+i)\r\n                    if(endLineCom != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/ddpccompu-'+i)\r\n                    }\r\n                    var endLineData = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+i)\r\n                    if(endLineData != undefined) {\r\n                        this.deleteLine(this.element.uuid+'/ddpcdata-'+i)\r\n                    }\r\n                    if(endLineCom != undefined || endLineData != undefined) {\r\n                        this.changeLineDDPC.push({endLineCom:endLineCom, endLineData:endLineData, id: this.element.ddpc[i].id})\r\n                    }\r\n                }\r\n\r\n                this.element.ddpc = this.element.ddpc.filter(item => {\r\n                         return this.selectDelectDDPCItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.ddpc.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineDDPC.length; idx++) {\r\n                        if (this.element.ddpc[n].id == this.changeLineDDPC[idx].id) {\r\n                            if (this.element.ddpc[n].compumethod != null) {\r\n                                this.newLine(this.element.uuid+'/ddpccompu-'+n, this.element.uuid+'/DDPC', this.changeLineDDPC[idx].endLineCom)\r\n                            }\r\n                            if (this.element.ddpc[n].dataconstr != null) {\r\n                                this.newLine(this.element.uuid+'/ddpcdata-'+n, this.element.uuid+'/DDPC', this.changeLineDDPC[idx].endLineData)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteDDPCItem = false\r\n                this.selectDelectDDPCItem = []\r\n                this.changeLineDDPC = []\r\n            } \r\n        },\r\n        openDDPC(idx) {\r\n            this.selCompuMethod = this.$store.getters.getCompuMethod\r\n            this.selDataConstr =  this.$store.getters.getDataConstr\r\n\r\n            if (this.element.ddpc[idx].compumethod != null ) {\r\n                var endLineC = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+idx)\r\n                if (endLineC == undefined) {\r\n                    endLineC = this.$store.getters.getCompuMethodPath(this.element.ddpc[idx].compumethod)\r\n                }\r\n                this.editDDPCItem.compumethod = { name :this.element.ddpc[idx].compumethod, uuid: endLineC }\r\n            }\r\n            if (this.element.ddpc[idx].dataconstr != null) {\r\n                var endLineD = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+idx)\r\n                if (endLineD == undefined) {\r\n                    endLineD = this.$store.getters.getDataConstrPath(this.element.ddpc[idx].dataconstr)\r\n                }\r\n                this.editDDPCItem.dataconstr = { name :this.element.ddpc[idx].dataconstr, uuid: endLineD }\r\n            }\r\n        },\r\n        addDDPC() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.ddpc.some(item => item.id === n)\r\n            }\r\n            this.editDDPCItem.id = n\r\n\r\n            var datacount = this.element.ddpc.length\r\n\r\n            if( this.editDDPCItem.compumethod != null) {\r\n                this.newLine(this.element.uuid+'/ddpccompu-'+datacount, this.element.uuid+'/DDPC', this.editDDPCItem.compumethod.uuid)\r\n                this.editDDPCItem.compumethod = this.editDDPCItem.compumethod.name\r\n            }\r\n            if( this.editDDPCItem.dataconstr != null) {\r\n                this.newLine(this.element.uuid+'/ddpcdata-'+datacount, this.element.uuid+'/DDPC', this.editDDPCItem.dataconstr.uuid)\r\n                this.editDDPCItem.dataconstr = this.editDDPCItem.dataconstr.name\r\n            }\r\n            const addObj = Object.assign({}, this.editDDPCItem)\r\n            this.element.ddpc.push(addObj)\r\n            this.cancelDDPC()\r\n        },\r\n        editDDPC(idx) {\r\n            var endcompuLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpccompu-'+idx)\r\n            if (endcompuLine != undefined && this.editDDPCItem.compumethod == null) {\r\n                this.deleteLine(this.element.uuid+'/ddpccompu-'+idx)\r\n                this.element.ddpc[idx].compumethod = null\r\n            } else if (endcompuLine != undefined && endcompuLine != this.editDDPCItem.compumethod.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/ddpccompu-'+idx)\r\n                this.newLine(this.element.uuid+'/ddpccompu-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.compumethod.uuid)\r\n                this.element.ddpc[idx].compumethod = this.editDDPCItem.compumethod.name\r\n            } else if(endcompuLine == undefined && this.editDDPCItem.compumethod != null) {\r\n                if (this.editDDPCItem.compumethod != null) {\r\n                    // input으로 들어왔을 때 uuid값이 없는 경우가 있는데 compo/datcon 둘중 하나만 edit하면 한쪽이 uuid값이 없어서 에러남\r\n                    this.newLine(this.element.uuid+'/ddpccompu-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.compumethod.uuid)\r\n                }\r\n                this.element.ddpc[idx].compumethod = this.editDDPCItem.compumethod.name\r\n            }\r\n\r\n            var enddataLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/ddpcdata-'+idx)\r\n            console.log('editDDPC      '+ enddataLine)\r\n            if (enddataLine != undefined && this.editDDPCItem.dataconstr == null) {\r\n                this.deleteLine(this.element.uuid+'/ddpcdata-'+idx)\r\n                this.element.ddpc[idx].dataconstr = null\r\n            } else if (enddataLine != undefined && enddataLine != this.editDDPCItem.dataconstr.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/ddpcdata-'+idx)\r\n                this.newLine(this.element.uuid+'/ddpcdata-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.dataconstr.uuid)\r\n                this.element.ddpc[idx].dataconstr = this.editDDPCItem.dataconstr.name\r\n            } else if (enddataLine == undefined && this.editDDPCItem.dataconstr != undefined) {\r\n                if (this.editDDPCItem.dataconstr != null) {\r\n                    this.newLine(this.element.uuid+'/ddpcdata-'+idx, this.element.uuid+'/DDPC', this.editDDPCItem.dataconstr.uuid)\r\n                }\r\n                this.element.ddpc[idx].dataconstr = this.editDDPCItem.dataconstr.name\r\n            }\r\n            \r\n            this.cancelDDPC()\r\n        },\r\n        cancelDDPC() {\r\n            this.editDDPCItem = Object.assign({}, this.defaultDDPCItem)\r\n            this.setactiveUUID()\r\n        },\r\n        setCompuMethodList() {\r\n            this.selCompuMethod = this.$store.getters.getCompuMethod\r\n            this.setactiveUUID()\r\n        },\r\n        setDataConstrList() {\r\n            this.selDataConstr =  this.$store.getters.getDataConstr\r\n            this.setactiveUUID()\r\n        },\r\n        newCompuMethod() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementCompuMehtod', {\r\n                    name: this.$store.getters.getNameCompuMethod,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:null, attributeName:'', scales:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            EventBus.$emit('add-element', constant.CompuMethod_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        newDataConstr() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n\r\n            this.$store.commit('addElementDataConstr', {\r\n                    name: this.$store.getters.getNameDataConstr, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, lowerlimit:null, upperlimit:null, icon:\"mdi-clipboard-outline\", validation: false })\r\n            EventBus.$emit('add-element', constant.DataConstr_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setCompuMethodSelect() {\r\n            if (this.isEditingCompuMethod == true) { \r\n                // new에서 들어왔을 때 이게 뭔지 보고싶을때 이건 연결한 상태가 아니기 때문에 enduuid로 찾을수가없다. \r\n                // edit할때랑 new할때랑 생각해봐야함\r\n                if (this.editDDPCItem.compumethod != null) {\r\n                    if (this.editDDPCItem.compumethod.uuid != null) {\r\n                        this.$store.commit('setDetailView', {uuid: this.editDDPCItem.compumethod.uuid, element: constant.CompuMethod_str} )\r\n                        document.getElementById(this.editDDPCItem.compumethod.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        EventBus.$emit('active-element', this.editDDPCItem.compumethod.uuid)\r\n                    }\r\n                }\r\n                this.setCompuMethodList()\r\n                this.isEditingCompuMethod = false\r\n            } else {\r\n                this.isEditingCompuMethod = true\r\n            }\r\n        },\r\n        setDataConstrSelect() {\r\n            if (this.isEditingDataConstr == true) {\r\n                if (this.editDDPCItem.dataconstr != null) {\r\n                    if (this.editDDPCItem.dataconstr.uuid != null) {\r\n                        this.$store.commit('setDetailView', {uuid: this.editDDPCItem.dataconstr.uuid, element: constant.DataConstr_str} )\r\n                        document.getElementById(this.editDDPCItem.dataconstr.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        EventBus.$emit('active-element', this.editDDPCItem.dataconstr.uuid)\r\n                    }\r\n                }\r\n                this.setDataConstrList()\r\n                this.isEditingDataConstr = false\r\n            } else {\r\n                this.isEditingDataConstr = true\r\n            }\r\n        },\r\n        clearCompuMethodRef() {\r\n            this.isEditingCompuMethod = true\r\n            this.editDDPCItem.compumethod = null\r\n        },\r\n        clearDataConstrRef() {\r\n            this.isEditingDataConstr = true\r\n            this.editDDPCItem.dataconstr = null\r\n        },\r\n\r\n        isCheckIDTElement() {\r\n            if (this.isdeleteIDTElementItem == true) {\r\n                this.isdeleteIDTElementItem = false\r\n                this.selectDelectIDTElementItem = []\r\n            } else {\r\n                this.isdeleteIDTElementItem = true\r\n            }\r\n        },\r\n        deleteIDTElement() {\r\n            if (this.isdeleteIDTElementItem == true) {\r\n                for(let i=0; i<this.element.idtelement.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineImp.push({id:this.element.idtelement[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/idtetable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.idtelement = this.element.idtelement.filter(item => {\r\n                         return this.selectDelectIDTElementItem.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.idtelement.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineImp.length; idx++) {\r\n                        if (this.element.idtelement[n].id == this.changeLineImp[idx].id) {\r\n                            this.newLine(this.element.uuid+'/idtetable-'+n, this.element.uuid+'/idtetable', this.changeLineImp[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteIDTElementItem = false\r\n                this.selectDelectIDTElementItem = []\r\n                this.changeLineImp = []\r\n            }\r\n        },\r\n        openIDTElement(idx) {\r\n            this.selTemplateType = this.$store.getters.getImplementationDataType\r\n            this.editIDTElementItem.name = this.element.idtelement[idx].name\r\n            if ( this.element.idtelement[idx].typeref != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.idtelement[idx].typeref)\r\n                }\r\n                this.editIDTElementItem.typeref = { name: this.element.idtelement[idx].typeref, uuid: endLine }\r\n            }\r\n            this.editIDTElementItem.inplace = this.element.idtelement[idx].inplace\r\n            this.editIDTElementItem.desc = this.element.idtelement[idx].desc\r\n        },\r\n        addIDTElement() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.idtelement.some(item => item.id === n)\r\n            }\r\n            this.editIDTElementItem.id = n\r\n\r\n            if( this.editIDTElementItem.typeref != null) {\r\n                var datacount = this.element.idtelement.length\r\n                \r\n                this.newLine(this.element.uuid+'/idtetable-'+datacount, this.element.uuid+'/idtetable', this.editIDTElementItem.typeref.uuid)\r\n                this.editIDTElementItem.typeref = this.editIDTElementItem.typeref.name\r\n            }\r\n            const addObj = Object.assign({}, this.editIDTElementItem);\r\n            this.element.idtelement.push(addObj);\r\n            this.cancelIDTElement()\r\n        },\r\n        editIDTElement(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/idtetable-'+idx)\r\n            if (endLine != undefined && this.editIDTElementItem.typeref == null) {\r\n                this.deleteLine(this.element.uuid+'/idtetable-'+idx)\r\n                this.element.idtelement[idx].typeref = null\r\n            } else if (endLine != undefined && endLine != this.editIDTElementItem.typeref.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/idtetable-'+idx)\r\n                this.newLine(this.element.uuid+'/idtetable-'+idx, this.element.uuid+'/idtetable', this.editIDTElementItem.typeref.uuid)\r\n                this.element.idtelement[idx].typeref = this.editIDTElementItem.typeref.name\r\n            }else if (endLine == undefined && this.editIDTElementItem.typeref != null) {\r\n                this.newLine(this.element.uuid+'/idtetable-'+idx, this.element.uuid+'/idtetable', this.editIDTElementItem.typeref.uuid)\r\n                this.element.idtelement[idx].typeref = this.editIDTElementItem.typeref.name\r\n            }\r\n\r\n            this.element.idtelement[idx].name = this.editIDTElementItem.name\r\n            this.element.idtelement[idx].inplace = this.editIDTElementItem.inplace\r\n            this.element.idtelement[idx].desc = this.editIDTElementItem.desc\r\n            this.cancelIDTElement()\r\n        },\r\n        cancelIDTElement() {\r\n            this.editIDTElementItem = Object.assign({}, this.defaultIDTElementItem)\r\n            this.setactiveUUID()\r\n        },\r\n        setIDTElementSelect() {\r\n            //console.log('setIDTElementSelect   ' + this.isEditingIDTETypeRef)\r\n            if (this.isEditingIDTETypeRef == true) {\r\n                 if (this.editIDTElementItem.typeref != null) {\r\n                    if (this.editIDTElementItem.typeref.uuid != null) {\r\n                        this.$store.commit('setDetailView', {uuid: this.editIDTElementItem.typeref.uuid, element: constant.Implementation_str} )\r\n                        document.getElementById(this.editIDTElementItem.typeref.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                        EventBus.$emit('active-element', this.editIDTElementItem.typeref.uuid)\r\n                    }\r\n                }\r\n                this.setTemplateTypeList()\r\n                this.isEditingIDTETypeRef = false\r\n            } else {\r\n                this.isEditingIDTETypeRef = true\r\n            }\r\n        },\r\n        clearIDTETypeRef() {\r\n            this.isEditingIDTETypeRef = true\r\n            this.editIDTElementItem.typeref = null\r\n        },\r\n\r\n        setTypeRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getImplementationPath(this.element.typeref)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Implementation_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setTemplateTypeSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getImplementationPath(this.element.templatetype)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Implementation_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setTemplateTypeList() {\r\n            this.selTemplateType = this.$store.getters.getImplementationDataType\r\n            this.setactiveUUID()\r\n        },\r\n        setTemplateType(item){\r\n            console.log(item)\r\n            if( this.element.templatetype != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/templateType')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/templateType')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/templateType', this.element.uuid+'/templateType', item.uuid)\r\n                this.element.templatetype = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        setTypeRef(item){\r\n            //console.log(item)\r\n            if( this.element.typeref != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/typeref')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/typeref')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/typeref', this.element.uuid+'/typeref', item.uuid)\r\n                this.element.typeref = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newTemplateType() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementImplementation', {\r\n                    name: this.$store.getters.getNameImplementation,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', namespace:'', arraysize:'', typeemitter:'', traceName: '', trace: [],\r\n                    typeref: null, templatetype:null, desc:'', ddpc:[], idtelement:[],\r\n                })\r\n            EventBus.$emit('add-element', constant.Implementation_str)\r\n            EventBus.$emit('add-element', constant.DateType_str)\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        \r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editImplementation', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            //console.log(linenum)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n    },\r\n\r\n}\r\n</script>"]}]}