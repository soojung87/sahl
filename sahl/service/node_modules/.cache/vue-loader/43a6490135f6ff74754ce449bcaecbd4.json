{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\SWComponents.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\SWComponents.vue","mtime":1653549163381},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SWComponents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"SWComponents.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showSWComponent\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>SW Component Type</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>SW Component Type</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputSWComponentName' outlined dense></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showPort\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Port\r\n                        </div>\r\n                        <v-card-text v-if=\"isPortOpenClose\">\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/pporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showPPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isPPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    P Port Prototype\r\n                                    <v-btn @click=\"isPPortCheckbox\" text x-small color=\"indigo\" v-if=\"isPPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isPPortOpenClose && isdeletePPort\" @click=\"deletePPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isPPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectPPort\" :headers=\"headerPPort\" :items=\"element.pport\" items-per-page='50'\r\n                                            :show-select=\"isdeletePPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeletePPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openPPort(idx)\" @cancel=\"editPPort(idx)\" @save=\"cancelPPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPPortItem.interface' label='Provided Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPPort\"  @click=\"setPPortSelect()\" @blur=\"isEditingPPort=true\"\r\n                                                                        @click:clear='clearPportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addPPort()\" @save=\"cancelPPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPPortItem.interface' label='Provided Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPPort\"  @click=\"setPPortSelect()\" @blur=\"isEditingPPort=true\"\r\n                                                                        @click:clear='clearPportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/prporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showPRPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isPRPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    PR Port Prototype\r\n                                    <v-btn @click=\"isPRPortCheckbox\" text x-small color=\"indigo\" v-if=\"isPRPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isPRPortOpenClose && isdeletePRPort\" @click=\"deletePRPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isPRPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectPRPort\" :headers=\"headerPRPort\" :items=\"element.prport\" items-per-page='50'\r\n                                            :show-select=\"isdeletePRPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeletePRPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openPRPort(idx)\" @cancel=\"editPRPort(idx)\" @save=\"cancelPRPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPRPortItem.interface' label='Provided Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPRPort\"  @click=\"setPRPortSelect()\" @blur=\"isEditingPRPort=true\"\r\n                                                                        @click:clear='clearPRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addPRPort()\" @save=\"cancelPRPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPRPortItem.interface' label='Provided Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPRPort\"  @click=\"setPRPortSelect()\" @blur=\"isEditingPRPort=true\"\r\n                                                                        @click:clear='clearPRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/rporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showRPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isRPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    R Port Prototype\r\n                                    <v-btn @click=\"isRPortCheckbox\" text x-small color=\"indigo\" v-if=\"isRPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isRPortOpenClose && isdeleteRPort\" @click=\"deleteRPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isRPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectRPort\" :headers=\"headerRPort\" :items=\"element.rport\" items-per-page='50'\r\n                                            :show-select=\"isdeleteRPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteRPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openRPort(idx)\" @cancel=\"editRPort(idx)\" @save=\"cancelRPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editRPortItem.interface' label='Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingRPort\"  @click=\"setRPortSelect()\" @blur=\"isEditingRPort=true\"\r\n                                                                        @click:clear='clearRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addRPort()\" @save=\"cancelRPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editRPortItem.interface' label='Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingRPort\"  @click=\"setRPortSelect()\" @blur=\"isEditingRPort=true\"\r\n                                                                        @click:clear='clearRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isPortOpenClose: true,\r\n            isPPortOpenClose: true,\r\n            isPRPortOpenClose: true,\r\n            isRPortOpenClose: true,\r\n            isdeletePPort: false,\r\n            isdeletePRPort: false,\r\n            isdeleteRPort: false,\r\n            isEditingPPort: true,\r\n            isEditingPRPort: true,\r\n            isEditingRPort: true,\r\n            selectDelectPPort: [],\r\n            selectDelectPRPort: [],\r\n            selectDelectRPort: [],\r\n            headerPPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Provided Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            headerPRPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Provided Required Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            headerRPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Required Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            editPPortItem: { name: '', interface: null},\r\n            editPRPortItem: { name: '', interface: null},\r\n            editRPortItem: { name: '', interface: null},\r\n            defaultItem: { name:'', interface: null},\r\n            changeLinePPort : [],\r\n            changeLinePRPort : [],\r\n            changeLineRPort : [],\r\n\r\n            selServiceInterface: this.$store.getters.getServiceInterface,\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showSWComponent() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showPort() {\r\n            this.isPortOpenClose = this.isPortOpenClose ? false : true\r\n        },\r\n        showPPort() {\r\n            this.isPPortOpenClose = this.isPPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showPRPort() {\r\n            this.isPRPortOpenClose = this.isPRPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showRPort() {\r\n            this.isRPortOpenClose = this.isRPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        inputSWComponentName() {\r\n            this.$store.commit('editSWComponents', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isPPortCheckbox() {\r\n            if (this.isdeletePPort == true) {\r\n                this.selectDelectPPort = []\r\n                this.isdeletePPort = false\r\n            } else {\r\n                this.isdeletePPort = true\r\n            }\r\n        },\r\n        deletePPort() {\r\n            if (this.isdeletePPort == true) {\r\n                for(let i=0; i<this.element.pport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLinePPort.push({name:this.element.pport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/pporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'pPort', deletItemList: this.selectDelectPPort, path: this.element.path, name: this.element.name})\r\n                this.element.pport = this.element.pport.filter(item => {\r\n                         return this.selectDelectPPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.pport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLinePPort.length; idx++) {\r\n                        if (this.element.pport[n].name == this.changeLinePPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/pporttable-'+n, this.element.uuid+'/pporttable', this.changeLinePPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeletePPort = false\r\n                this.selectDelectPPort = []\r\n                this.changeLinePPort = []\r\n            } \r\n        },\r\n        openPPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editPPortItem.name = this.element.pport[idx].name\r\n            if ( this.element.pport[idx].interface != null) {\r\n                this.editPPortItem.interface = { name :this.element.pport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+idx) }\r\n            }\r\n        },\r\n        editPPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+idx)\r\n            if (endLine != undefined && this.editPPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/pporttable-'+idx)\r\n                this.element.pport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editPPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/pporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/pporttable-'+idx, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.element.pport[idx].interface = this.editPPortItem.interface.name\r\n            } else if (endLine == undefined && this.editPPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/pporttable-'+idx, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.element.pport[idx].interface = this.editPPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.pport[idx].name != this.editPPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'pPort', listname: this.editPPortItem.name} )\r\n            }\r\n\r\n            this.element.pport[idx].name = this.editPPortItem.name\r\n            this.cancelPPort()\r\n        },\r\n        cancelPPort() {\r\n            this.editPPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addPPort() {\r\n            if (this.editPPortItem.interface != null) {\r\n                var datacount = this.element.pport.length\r\n                this.newLine(this.element.uuid+'/pporttable-'+datacount, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.editPPortItem.interface = this.editPPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editPPortItem);\r\n            this.element.pport.push(addObj);\r\n            this.cancelPPort()\r\n        },\r\n        setPPortSelect() {\r\n            if (this.isEditingPPort == true) {\r\n                console.log('setPPortSelect  >>' + this.editPPortItem.interface)\r\n                if (this.editPPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editPPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingPPort = false\r\n            } else {\r\n                this.isEditingPPort = true\r\n            }\r\n        },\r\n        clearPportRef() {\r\n            this.isEditingPPort = true\r\n            this.editPPortItem.interface = null\r\n        },\r\n\r\n        isPRPortCheckbox() {\r\n            if (this.isdeletePRPort == true) {\r\n                this.selectDelectPRPort = []\r\n                this.isdeletePRPort = false\r\n            } else {\r\n                this.isdeletePRPort = true\r\n            }\r\n        },\r\n        deletePRPort() {\r\n            if (this.isdeletePRPort == true) {\r\n                for(let i=0; i<this.element.prport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLinePRPort.push({name:this.element.prport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/prporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'prPort', deletItemList: this.selectDelectPRPort, path: this.element.path, name: this.element.name})\r\n                this.element.prport = this.element.prport.filter(item => {\r\n                         return this.selectDelectPRPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.prport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLinePRPort.length; idx++) {\r\n                        if (this.element.prport[n].name == this.changeLinePRPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/prporttable-'+n, this.element.uuid+'/prporttable', this.changeLinePRPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeletePRPort = false\r\n                this.selectDelectPRPort = []\r\n                this.changeLinePRPort = []\r\n            } \r\n        },\r\n        openPRPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editPRPortItem.name = this.element.prport[idx].name\r\n            if ( this.element.prport[idx].interface != null) {\r\n                this.editPRPortItem.interface = { name :this.element.prport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+idx) }\r\n            }\r\n        },\r\n        editPRPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+idx)\r\n            if (endLine != undefined && this.editPRPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/prporttable-'+idx)\r\n                this.element.prport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editPRPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/prporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/prporttable-'+idx, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.element.prport[idx].interface = this.editPRPortItem.interface.name\r\n            } else if (endLine == undefined && this.editPRPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/prporttable-'+idx, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.element.prport[idx].interface = this.editPRPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.prport[idx].name != this.editPRPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'prPort', listname: this.editPRPortItem.name} )\r\n            }\r\n\r\n            this.element.prport[idx].name = this.editPRPortItem.name\r\n            this.cancelPRPort()\r\n        },\r\n        cancelPRPort() {\r\n            this.editPRPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addPRPort() {\r\n            if (this.editPRPortItem.interface != null) {\r\n                var datacount = this.element.prport.length\r\n                this.newLine(this.element.uuid+'/prporttable-'+datacount, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.editPRPortItem.interface = this.editPRPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editPRPortItem);\r\n            this.element.prport.push(addObj);\r\n            this.cancelPRPort()\r\n        },\r\n        setPRPortSelect() {\r\n            if (this.isEditingPRPort == true) {\r\n                if (this.editPRPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editPRPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingPRPort = false\r\n            } else {\r\n                this.isEditingPRPort = true\r\n            }\r\n        },\r\n        clearPRportRef() {\r\n            this.isEditingPRPort = true\r\n            this.editPRPortItem.interface = null\r\n        },\r\n\r\n        isRPortCheckbox() {\r\n            if (this.isdeleteRPort == true) {\r\n                this.selectDelectRPort = []\r\n                this.isdeleteRPort = false\r\n            } else {\r\n                this.isdeleteRPort = true\r\n            }\r\n        },\r\n        deleteRPort() {\r\n            if (this.isdeleteRPort == true) {\r\n                for(let i=0; i<this.element.rport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineRPort.push({name:this.element.rport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/rporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'rPort', deletItemList: this.selectDelectRPort, path: this.element.path, name: this.element.name})\r\n                this.element.rport = this.element.rport.filter(item => {\r\n                         return this.selectDelectRPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.rport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineRPort.length; idx++) {\r\n                        if (this.element.rport[n].name == this.changeLineRPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/rporttable-'+n, this.element.uuid+'/rporttable', this.changeLineRPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteRPort = false\r\n                this.selectDelectRPort = []\r\n                this.changeLineRPort = []\r\n            } \r\n        },\r\n        openRPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editRPortItem.name = this.element.rport[idx].name\r\n            if ( this.element.rport[idx].interface != null) {\r\n                this.editRPortItem.interface = { name :this.element.rport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+idx) }\r\n            }\r\n        },\r\n        editRPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+idx)\r\n            if (endLine != undefined && this.editRPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/rporttable-'+idx)\r\n                this.element.rport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editRPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/rporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/rporttable-'+idx, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.element.rport[idx].interface = this.editRPortItem.interface.name\r\n            } else if (endLine == undefined && this.editRPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/rporttable-'+idx, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.element.rport[idx].interface = this.editRPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.rport[idx].name != this.editRPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'rPort', listname: this.editRPortItem.name} )\r\n            }\r\n\r\n            this.element.rport[idx].name = this.editRPortItem.name\r\n            this.cancelRPort()\r\n        },\r\n        cancelRPort() {\r\n            this.editRPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addRPort() {\r\n            if( this.editRPortItem.interface != null) {\r\n                var datacount = this.element.rport.length\r\n                this.newLine(this.element.uuid+'/rporttable-'+datacount, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.editRPortItem.interface = this.editRPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editRPortItem);\r\n            this.element.rport.push(addObj);\r\n            this.cancelRPort()\r\n        },\r\n        setRPortSelect() {\r\n            if (this.isEditingRPort == true) {\r\n                if (this.editRPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editRPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingRPort = false\r\n            } else {\r\n                this.isEditingRPort = true\r\n            }\r\n        },\r\n        clearRportRef() {\r\n            this.isEditingRPort = true\r\n            this.editRPortItem.interface = null\r\n        },\r\n\r\n        setServiceInterfaceList() {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.setactiveUUID()\r\n        },\r\n        newServiceInterface() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * (1400 - 11)) + 10)\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n            this.$store.commit('addElementService', {\r\n                    name: this.$store.getters.getNameServiceInterface, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                    versionMaj:'', versionMin:'', namespace:'', events:[], fields:[], methods:[], isservice: '',\r\n                })\r\n            EventBus.$emit('add-element', constant.ServiceInterface_str)\r\n            EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            this.$store.commit('editSWComponents', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editSWComponents', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}