{"remainingRequest":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\RequiredSomeIP.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\RequiredSomeIP.vue","mtime":1651113579040},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RequiredSomeIP.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"RequiredSomeIP.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showRequiredSomeIP\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>Required SomeIP Service Instance</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Required SomeIP Service Instance</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-show=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputRequiredSomeIPName' outlined dense></v-text-field>\r\n                    <v-row>\r\n                        <v-col cols=\"10\">\r\n                            <v-text-field v-model=\"element.deployref\" readonly @click=\"setSIDeploymentSelect()\" clearable @click:clear='clearSIDeployment()' label=\"Service Interface Deployment Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col cols=\"2\">\r\n                            <v-menu>\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/requiredDeploy'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setSIDeploymentList()\">\r\n                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <v-list>\r\n                                    <v-list-item v-for=\"(item, i) in selSIDeployment\" :key=\"i\" link @click=\"setSIDeployment(item)\">\r\n                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                    </v-list-item>\r\n                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newSIDeployment\" >\r\n                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                    </v-btn>\r\n                                </v-list>\r\n                            </v-menu>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-text-field v-model=\"element.minorver\" label=\"Required Minor Version\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-text-field v-model=\"element.serviceInsid\" label=\"Required Service Instance ID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                    <v-row>\r\n                        <v-col cols=\"10\">\r\n                            <v-text-field v-model=\"element.someipclient\" readonly @click=\"setSomeIPClientSelect()\" clearable @click:clear='clearSomeIPClient()' label=\"SD Client Config Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                        </v-col>\r\n                        <v-col cols=\"2\">\r\n                            <v-menu>\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/requiredSomeIPC'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setSomeIPClientList()\">\r\n                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <v-list>\r\n                                    <v-list-item v-for=\"(item, i) in selSomeIPClient\" :key=\"i\" link @click=\"setSomeIPClient(item)\">\r\n                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                    </v-list-item>\r\n                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newSomeIPClient\" >\r\n                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                    </v-btn>\r\n                                </v-list>\r\n                            </v-menu>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-select v-model=\"element.version\" :items=\"enumVersion\" clearable label=\"Version Driven Find Behavior\" @click=\"setactiveUUID\" outlined dense style=\"height: 45px;\"></v-select>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" :id=\"element.uuid+'/requiredMethod'\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showMethodRef\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isMethodRefOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Method Request Propss\r\n                            <v-btn @click=\"isCheckMethodRef\" text x-small color=\"indigo\" v-if=\"isMethodRefOpenClose\">\r\n                                <v-icon>mdi-check</v-icon>\r\n                            </v-btn>\r\n                            <v-btn v-if=\"isMethodRefOpenClose && isdeleteMethodRef\" @click=\"deletMethodRef\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-card-text v-show=\"isMethodRefOpenClose\">\r\n                            <v-data-table v-model=\"selectMethodRef\" :headers=\"headerMethodRef\" :items=\"element.method\"\r\n                                    :show-select=\"isdeleteMethodRef\" item-key=\"method\" height=\"100px\" dense hide-default-footer >\r\n                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                </template>\r\n                                <template v-if=\"!isdeleteMethodRef\" v-slot:body=\"{ items, headers }\">\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openMethodRef(idx)\" @cancel=\"editMethodRef(idx)\" @save=\"cancelMethodRef\" large >\r\n                                                    {{item[header.value]}}\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editMethodItem.method' label='Method Reference' :items='selMethodref' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                    return-object :readonly=\"!isEditingMethod\" clearable @click=\"setMethodSelect()\" \r\n                                                                    @click:clear='clearMethodRef' @blur=\"isEditingMethod=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th colspan=\"3\">\r\n                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addMethodRef()\" @save=\"cancelMethodRef\"> \r\n                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                    <template v-slot:input>\r\n                                                        <br>\r\n                                                        <v-autocomplete v-model='editMethodItem.method' label='Method Reference' :items='selMethodref' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                    return-object :readonly=\"!isEditingMethod\" clearable @click=\"setMethodSelect()\" \r\n                                                                    @click:clear='clearMethodRef' @blur=\"isEditingMethod=true\" outlined dense style=\"height: 45px;\">\r\n                                                        </v-autocomplete>\r\n                                                    </template>\r\n                                                </v-edit-dialog>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </template>\r\n                            </v-data-table>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/requiredE'\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showRequiredEvent\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isRequiredEventOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            SomeIP Required Event Group\r\n                            <v-btn v-if=\"isRequiredEventOpenClose\" @click=\"addRequiredEvent\" text x-small color=\"indigo\">\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </div>\r\n                        <v-tabs v-model='eventGroupTab' v-show=\"isRequiredEventOpenClose\" show-arrows @change=\"changeEeventGroupTab()\">\r\n                            <v-tab v-for=\"(tab, idx) in element.requiredevent\" :key=\"idx\" @click=\"clickEeventGroupTab()\"> \r\n                                {{tab.name}}\r\n                                <v-btn text x-small @click=\"deleteEventGroup(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                        </v-tabs>\r\n                        <v-tabs-items v-model=\"eventGroupTab\" v-show=\"isRequiredEventOpenClose\">\r\n                            <v-tab-item v-for=\"(tab, idx) in element.requiredevent\" :key=\"idx\">\r\n                                <v-card flat>\r\n                                    <v-card-text>\r\n                                        <v-text-field v-model=\"tab.name\" label=\"name\" :rules=\"rules.name\" @input='inputEventGName(tab.name)' @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                                        <v-row style=\"height: 45px\">\r\n                                            <v-col cols=\"10\">\r\n                                                <v-text-field v-model=\"tab.eventG\" readonly @click=\"setEventGSelect(tab)\" clearable @click:clear='clearEventG(tab)' label=\"Event Group Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                            </v-col>\r\n                                            <v-col cols=\"2\">\r\n                                                <v-menu>\r\n                                                    <template v-slot:activator=\"{ on, attrs }\">\r\n                                                        <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/requiredEventG'+tab.name\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setEventGList()\">\r\n                                                            <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                        </v-btn>\r\n                                                    </template>\r\n                                                    <v-list >\r\n                                                        <v-list-item v-for=\"(item, i) in selEventG\" :key=\"i\" link @click=\"setEventG(item, tab)\">\r\n                                                            <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                        <v-list-item v-if=\"selEventG.length == 0\">\r\n                                                            <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                    </v-list>\r\n                                                </v-menu>\r\n                                            </v-col>\r\n                                        </v-row>\r\n                                        <v-row>\r\n                                            <v-col cols=\"10\">\r\n                                                <v-text-field v-model=\"tab.client\" readonly @click=\"setClientSelect(tab)\" clearable @click:clear='clearClient(tab)' label=\"SD Client Event Group Timing Config Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                            </v-col>\r\n                                            <v-col cols=\"2\">\r\n                                                <v-menu>\r\n                                                    <template v-slot:activator=\"{ on, attrs }\">\r\n                                                        <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/requiredClient'+tab.name\" icon v-bind=\"attrs\" v-on=\"on\" @click=\"setClientList()\">\r\n                                                            <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                        </v-btn>\r\n                                                    </template>\r\n                                                    <v-list>\r\n                                                        <v-list-item v-for=\"(item, i) in selClient\" :key=\"i\" link @click=\"setClient(item, tab)\">\r\n                                                            <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                        </v-list-item>\r\n                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newClient\" >\r\n                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                        </v-btn>\r\n                                                    </v-list>\r\n                                                </v-menu>\r\n                                            </v-col>\r\n                                        </v-row>\r\n                                    </v-card-text>\r\n                                </v-card>\r\n                            </v-tab-item>\r\n                        </v-tabs-items>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-show=\"!iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isMethodRefOpenClose: true,\r\n            isRequiredEventOpenClose: true,\r\n            selSIDeployment: this.$store.getters.getSIDeployment,\r\n            selSomeIPClient: this.$store.getters.getSomeIPClient,\r\n            enumVersion: ['MINIMUM-MINOR-VERSION',],\r\n\r\n            selectMethodRef: [],\r\n            headerMethodRef: [\r\n                { text: 'SomeIP Method Props', align: 'start', sortable: false, value: 'method' },\r\n            ],\r\n            editMethodItem: { method : null},\r\n            isdeleteMethodRef: false,\r\n            selMethodref: this.$store.getters.getDeploymentMethod,\r\n            isEditingMethod: true,\r\n            deleteMethodLine: [],\r\n\r\n            eventGroupTab: 0,\r\n            selEventG: this.$store.getters.getEventGroup,\r\n            selClient: this.$store.getters.getClient,\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name, req: true} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showRequiredSomeIP () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                if(this.iselementOpenClose) {\r\n                    if(this.element.requiredevent.length > 0) {\r\n                        if (this.isRequiredEventOpenClose) {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.eventGroupTab, this.element.requiredevent[this.eventGroupTab].name)\r\n                        } else {\r\n                            EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        showMethodRef() {\r\n            this.isMethodRefOpenClose = this.isMethodRefOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showRequiredEvent() {\r\n            this.isRequiredEventOpenClose = this.isRequiredEventOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            if(this.element.requiredevent.length > 0) {\r\n                this.$nextTick(() => {\r\n                    if(this.isRequiredEventOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.eventGroupTab, this.element.requiredevent[this.eventGroupTab].name)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                    EventBus.$emit('drawLine')\r\n                })\r\n            }\r\n        },\r\n        inputRequiredSomeIPName () {\r\n            this.$store.commit('editRequiredSomeIP', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name, req: true} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        clearSIDeployment() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredDeploy')\r\n            if (endLine != undefined) {\r\n                this.element.deployref = null\r\n                this.deleteLine(this.element.uuid+'/requiredDeploy')\r\n            }\r\n        },\r\n        setSIDeploymentSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredDeploy')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getServiceInterfaceDeploymentPath(this.element.deployref, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SomeIPServiceInterfaceDeployment_str} )\r\n            }\r\n        },\r\n        setSIDeploymentList() {\r\n            this.selSIDeployment = this.$store.getters.getSIDeployment\r\n            this.setactiveUUID()\r\n        },\r\n        setSIDeployment(item){\r\n            if( this.element.deployref != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredDeploy')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/requiredDeploy')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/requiredDeploy', this.element.uuid+'/requiredDeploy', item.uuid)\r\n                }\r\n                this.element.deployref = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newSIDeployment() {\r\n            this.$store.commit('addElementSomeIPService', {\r\n                name: this.$store.getters.getNameSomeIPService, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                service: null, majversion:'', minversion:'', id: '', eventG:null, eventD: [], methodD:[], fieldD:[],\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n            EventBus.$emit('add-element', constant.SomeIPServiceInterfaceDeployment_str)\r\n            this.$store.commit('editRequiredSomeIP', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearSomeIPClient() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredSomeIPC')\r\n            if (endLine != undefined) {\r\n                this.element.someipclient = null\r\n                this.deleteLine(this.element.uuid+'/requiredSomeIPC')\r\n            }\r\n        },\r\n        setSomeIPClientSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredSomeIPC')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getSomeIPClientPath(this.element.someipclient)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SomeIPClient_str} )\r\n            }\r\n        },\r\n        setSomeIPClientList() {\r\n            this.selSomeIPClient = this.$store.getters.getSomeIPClient\r\n            this.setactiveUUID()\r\n        },\r\n        setSomeIPClient(item){\r\n            if( this.element.someipclient != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredSomeIPC')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/requiredSomeIPC')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/requiredSomeIPC', this.element.uuid+'/requiredSomeIPC', item.uuid)\r\n                }\r\n                this.element.someipclient = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newSomeIPClient() {\r\n                this.$store.commit('addElementSomeIPClient', { \r\n                name: this.$store.getters.getNameSomeIPClient, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                findtime: '', inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '',\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n            EventBus.$emit('add-element', constant.SomeIPClient_str)\r\n            this.$store.commit('editRequiredSomeIP', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckMethodRef() {\r\n            if (this.isdeleteMethodRef == true) {\r\n                this.isdeleteMethodRef = false\r\n                this.selectMethodRef = []\r\n            } else {\r\n                this.isdeleteMethodRef = true\r\n            }\r\n        },\r\n        deletMethodRef() {\r\n            if (this.isdeleteMethodRef == true) {\r\n                for(let i=0; i<this.element.method.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredMethod-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteMethodLine.push({name:this.element.method[i].method, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/requiredMethod-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.method = this.element.method.filter(item => {\r\n                        return this.selectMethodRef.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.method.length; n++) {\r\n                    for(let idx=0; idx<this.deleteMethodLine.length; idx++) {\r\n                        if (this.element.method[n].method == this.deleteMethodLine[idx].name) {\r\n                            this.newLine(this.element.uuid+'/requiredMethod-'+n, this.element.uuid+'/requiredMethod', this.deleteMethodLine[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteMethodRef = false\r\n                this.selectMethodRef = []\r\n                this.deleteMethodLine = []\r\n            } \r\n        },\r\n        openMethodRef(idx) {\r\n            this.selMethodref = this.$store.getters.getDeploymentMethod\r\n\r\n            if ( this.element.method[idx].method != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredMethod-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getServiceInterfaceDeploymentPath(this.element.method[idx].method, 3)\r\n                }\r\n                this.editMethodItem.method = { name: this.element.method[idx].method, uuid: endLine }\r\n            }\r\n        },\r\n        editMethodRef(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredMethod-'+idx)\r\n            if (endLine != undefined && this.editMethodItem.method == null) {\r\n                this.deleteLine(this.element.uuid+'/requiredMethod-'+idx)\r\n                this.element.method[idx].method = null\r\n            } else if (endLine != undefined && endLine != this.editMethodItem.method.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/requiredMethod-'+idx)\r\n                this.newLine(this.element.uuid+'/requiredMethod-'+idx, this.element.uuid+'/requiredMethod', this.editMethodItem.method.uuid)\r\n                this.element.method[idx].method = this.editMethodItem.method.name\r\n            } else if (endLine == undefined && this.editMethodItem.method != null) {\r\n                this.newLine(this.element.uuid+'/requiredMethod-'+idx, this.element.uuid+'/requiredMethod', this.editMethodItem.method.uuid)\r\n                this.element.method[idx].method = this.editMethodItem.method.name\r\n            }\r\n            \r\n            this.cancelMethodRef()\r\n        },\r\n        cancelMethodRef() {\r\n            this.editMethodItem.method = null\r\n            this.setactiveUUID()\r\n        },\r\n        addMethodRef() {\r\n            if( this.editMethodItem.method != null) {\r\n                var datacount = this.element.method.length\r\n                this.newLine(this.element.uuid+'/requiredMethod-'+datacount, this.element.uuid+'/requiredMethod', this.editMethodItem.method.uuid)\r\n                this.editMethodItem.method = this.editMethodItem.method.name\r\n            }\r\n            const addObj = Object.assign({}, this.editMethodItem)\r\n            this.element.method.push(addObj);\r\n\r\n            this.cancelMethodRef()\r\n        },\r\n        setMethodSelect() {\r\n            if (this.isEditingMethod == true) {\r\n                if (this.editMethodItem.method != null && this.editMethodItem.method.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editMethodItem.method.uuid, element: constant.SomeIPServiceInterfaceDeployment_str} )\r\n                }\r\n                this.setMethodList()\r\n                this.isEditingMethod = false\r\n            } else {\r\n                this.isEditingMethod = true\r\n            }\r\n        },\r\n        setMethodList() {\r\n            this.selMethodref = this.$store.getters.getDeploymentMethod\r\n            this.setactiveUUID()\r\n        },\r\n        clearMethodRef() {\r\n            this.isEditingMethod = true\r\n            this.editMethodItem.method = null\r\n        },\r\n\r\n        addRequiredEvent() {\r\n            const editItem = { name: '', eventG: null, client: null}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'Event Group_' + n++;\r\n                res = this.element.requiredevent.some(ele => ele.name === addObj.name)\r\n            }\r\n            this.element.requiredevent.push(addObj)\r\n            this.eventGroupTab = this.element.requiredevent.length-1\r\n            EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n        },\r\n        clickEeventGroupTab() {},\r\n        changeEeventGroupTab() {\r\n            if(this.element.requiredevent.length > 0) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.eventGroupTab, this.element.requiredevent[this.eventGroupTab].name)}, 300);\r\n            }\r\n        },\r\n        deleteEventGroup(idx) {\r\n            //console.log('deleteEventGroup')\r\n            var endLine, endE, endC\r\n            if (this.element.requiredevent[idx].eventG != null) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredEventG-'+idx)\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/requiredEventG-'+idx)\r\n                }\r\n            }\r\n            if (this.element.requiredevent[idx].client != null) {\r\n                endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredClient-'+idx)\r\n                if (endLine != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/requiredClient-'+idx)\r\n                }\r\n            }\r\n            for(let i=idx+1; i<this.element.requiredevent.length; i++){\r\n                endE = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredEventG-'+i)\r\n                endC = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredClient-'+i)\r\n                if (endE != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/requiredEventG-'+i)\r\n                    this.newLine(this.element.uuid+'/requiredEventG-'+(i-1), this.element.uuid+'/requiredE', endE)\r\n                }\r\n                if (endC != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/requiredClient-'+i)\r\n                    this.newLine(this.element.uuid+'/requiredClient-'+(i-1), this.element.uuid+'/requiredE', endC)\r\n                }\r\n            }\r\n\r\n            this.element.requiredevent.splice(idx, 1)\r\n            this.changeEeventGroupTab()\r\n        },\r\n        clearEventG(item) {\r\n            item.eventG = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab)\r\n            }\r\n        },\r\n        setEventGSelect(item) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getServiceInterfaceDeploymentPath(item.eventG, 1)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SomeIPServiceInterfaceDeployment_str} )\r\n            }\r\n        },\r\n        setEventGList() {\r\n            this.selEventG =  this.$store.getters.getEventGroup\r\n            this.setactiveUUID()\r\n        },\r\n        setEventG(item, tab){\r\n            if( tab.eventG != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/requiredEventG-'+this.eventGroupTab, this.element.uuid+'/requiredEventG'+this.element.requiredevent[this.eventGroupTab].name, item.uuid)\r\n                }\r\n                tab.eventG = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        clearClient(item) {\r\n            item.client = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab)\r\n            }\r\n        },\r\n        setClientSelect(item) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getClientPath(item.client)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Client_str} )\r\n            }\r\n        },\r\n        setClientList() {\r\n            this.selClient =  this.$store.getters.getClient\r\n            this.setactiveUUID()\r\n        },\r\n        setClient(item, tab){\r\n            if( tab.client != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/requiredClient-'+this.eventGroupTab, this.element.uuid+'/requiredClient'+this.element.requiredevent[this.eventGroupTab].name, item.uuid)\r\n                }\r\n                tab.client = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newClient() {\r\n            this.$store.commit('addElementClient', { \r\n                name: this.$store.getters.getNameClient, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300 , zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                delay: '', max: '', timetolive: '', delaymax: '', delaymin:''\r\n            })\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            EventBus.$emit('add-element', constant.SomeIPEvents_str)\r\n            EventBus.$emit('add-element', constant.Client_str)\r\n            this.$store.commit('editRequiredSomeIP', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editRequiredSomeIP', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"]}]}