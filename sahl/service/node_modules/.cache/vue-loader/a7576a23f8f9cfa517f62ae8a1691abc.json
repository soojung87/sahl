{"remainingRequest":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\src\\components\\ModeDeclarationGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\src\\components\\ModeDeclarationGroup.vue","mtime":1625199869807},{"path":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\soojung\\source\\Vue\\mainedit(noMove)\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIi4uL21haW4uanMiDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgcGFuZWxNREdyb3VwOiBbXSwNCiAgICAgICAgICAgIHNlbGVjdGVkTURHcm91cEl0ZW06IFtdLA0KICAgICAgICAgICAgc2VsZWN0ZWRNb2RlRGVjbGFyYXRpb246W10sDQogICAgICAgICAgICBNREdyb3VwSXRlbTogWw0KICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQ0NVMjBfTWFjaGluZV9PVEFfTW9kZURlY2xhcmF0aW9uR3JvdXAnLA0KICAgICAgICAgICAgICAgICAgICBpbml0aWFsbW9kZTogJ09mZicsDQogICAgICAgICAgICAgICAgICAgIG1vZGVEZWNsYXJhdGlvbjogWyAnT2ZmJywgJ1J1bm5pbmcnLCAnVXBkYXRlJywgJ1ZlcmlmeSddLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdDQ1UyMF9NYWNoaW5lX01hY2hpbmVTdGF0ZV9Nb2RlRGVjbGFyYXRpb25Hcm91cCcsDQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxtb2RlOiAnUmVzdGFydCcsDQogICAgICAgICAgICAgICAgICAgIG1vZGVEZWNsYXJhdGlvbjogWyAnRGlhZ25vc3RpYycsICdPZmYnLCAnUmVzdGFydCcsICdSdW5uaW5nJywgJ1NodXRkb3duJywgJ1N0YXJ0dXAnLCAnVXBkYXRlJywgJ1ZlcmlmeSddLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdDQ1UyMF9NYWNoaW5lX05ldHdvcmtfU3RvcmFnZV9Nb2RlRGVjbGFyYXRpb25Hcm91cCcsDQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxtb2RlOiAnUnVubmluZycsDQogICAgICAgICAgICAgICAgICAgIG1vZGVEZWNsYXJhdGlvbjogWyAnT2ZmJywgJ1J1bm5pbmcnLCAnVXBkYXRlJywgJ1ZlcmlmeSddLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgZWRpdGVkTURHcm91cEl0ZW06IHsNCiAgICAgICAgICAgICAgICBuYW1lOiAnJywNCiAgICAgICAgICAgICAgICBpbml0aWFsbW9kZTogJycsDQogICAgICAgICAgICAgICAgbW9kZURlY2xhcmF0aW9uOiBbXSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBkZWZhdWx0TURHcm91cEl0ZW06IHsNCiAgICAgICAgICAgICAgICBuYW1lOiAnJywNCiAgICAgICAgICAgICAgICBpbml0aWFsbW9kZTogJycsDQogICAgICAgICAgICAgICAgbW9kZURlY2xhcmF0aW9uOiBbXSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBhZGRNREdyb3VwbW9kZURlY2xhcmF0aW9uOiAnJywNCiAgICAgICAgICAgIGlzZWxlbWVudGFkZDogZmFsc2UsDQogICAgICAgICAgICBpc01ER291cG5hbWVhZGQ6IGZhbHNlLA0KICAgICAgICAgICAgYWRkTW9kZURlY2xhcmF0aW9uTmFtZTogJycsDQogICAgICAgICAgICBpc1NlbGVjdE1vZGU6IGZhbHNlLA0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkICgpIHsNCiAgICAgICAgRXZlbnRCdXMuJG9uKCJvcGVuLW1vZGVEZWNsYXJhdGlvbiIsIChjbGlja3BhbmVsKSA9PiB7DQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IFt0aGlzLk1ER3JvdXBJdGVtLmZpbmRJbmRleChmaW5kbmFtZSA9PiBmaW5kbmFtZS5uYW1lID09IGNsaWNrcGFuZWwpXQ0KICAgICAgICB9KQ0KICAgICAgICBFdmVudEJ1cy4kb24oJ3NlbGVjdC1tb2RlZGVjbGFyYXRpb24nLCAoc2VsZWN0TW9kZSkgPT4gew0KICAgICAgICAgICAgdGhpcy5pc1NlbGVjdE1vZGUgPSBzZWxlY3RNb2RlDQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IFtdDQogICAgICAgIH0pDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIG9wZW5hbGxMaXN0ICgpIHsNCiAgICAgICAgICAgIHRoaXMucGFuZWxNREdyb3VwID0gQXJyYXkuZnJvbShBcnJheSh0aGlzLk1ER3JvdXBJdGVtLmxlbmd0aCkua2V5cygpKTsNCiAgICAgICAgfSwNCiAgICAgICAgY2xvc2VhbGxMaXN0ICgpIHsNCiAgICAgICAgICAgIHRoaXMucGFuZWxNREdyb3VwID0gW10NCiAgICAgICAgfSwNCiAgICAgICAgYWRkTURHcm91cCAoKSB7DQogICAgICAgICAgICBpZih0aGlzLmlzZWxlbWVudGFkZCA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgaWYodGhpcy5lZGl0ZWRNREdyb3VwSXRlbS5uYW1lICE9ICcnKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdGVkTURHcm91cEl0ZW0ubW9kZURlY2xhcmF0aW9uID0gdGhpcy5hZGRNREdyb3VwbW9kZURlY2xhcmF0aW9uLnNwbGl0KCIgIikNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5NREdyb3VwSXRlbS5wdXNoKHRoaXMuZWRpdGVkTURHcm91cEl0ZW0pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuaXNlbGVtZW50YWRkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgdGhpcy5lZGl0ZWRNREdyb3VwSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdE1ER3JvdXBJdGVtKQ0KICAgICAgICAgICAgICAgIHRoaXMuYWRkTURHcm91cG1vZGVEZWNsYXJhdGlvbiA9ICcnDQogICAgICAgICAgICB9IGVsc2V7DQogICAgICAgICAgICAgICAgdGhpcy5pc2VsZW1lbnRhZGQgPSB0cnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkZWxldGVNREdyb3VwSXRlbSAoaW5kZXgpIHsNCiAgICAgICAgICAgIHRoaXMuTURHcm91cEl0ZW0uc3BsaWNlKGluZGV4LDEpDQogICAgICAgIH0sDQogICAgICAgIGFkZE1vZGVEZWNsYXJhdGlvbk1vZGUgKGl0ZW0pIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzTURHb3VwbmFtZWFkZCA9PSB0cnVlKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuYWRkTW9kZURlY2xhcmF0aW9uTmFtZSAhPSAnJykgew0KICAgICAgICAgICAgICAgICAgICBpdGVtLm1vZGVEZWNsYXJhdGlvbi5wdXNoKHRoaXMuYWRkTW9kZURlY2xhcmF0aW9uTmFtZSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5pc01ER291cG5hbWVhZGQgPSBmYWxzZQ0KICAgICAgICAgICAgICAgIHRoaXMuYWRkTW9kZURlY2xhcmF0aW9uTmFtZSA9ICcnDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMuaXNNREdvdXBuYW1lYWRkID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkZWxldGVNb2RlRGVjbGFyYXRpb25Nb2RlIChpdGVtKSB7DQogICAgICAgICAgICBpdGVtLm1vZGVEZWNsYXJhdGlvbiA9IGl0ZW0ubW9kZURlY2xhcmF0aW9uLmZpbHRlcihpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRNb2RlRGVjbGFyYXRpb24uaW5kZXhPZihpdGVtKSA8IDAgfSkNCiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNb2RlRGVjbGFyYXRpb24gPSBbXQ0KICAgICAgICB9LA0KICAgICAgICBzZWxlY3RGdW5jdGlvblR5cGUgKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRNREdyb3VwSXRlbS5sZW5ndGggPiAxKSB7DQogICAgICAgICAgICAgICAgYWxlcnQgKCJvbmx5IHNlbGVjdCBvbmUiKSANCiAgICAgICAgICAgICAgICByZXR1cm4gDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIGlmICh0aGlzLnNlbGVjdGVkTURHcm91cEl0ZW0ubGVuZ3RoID09IDApIHsNCiAgICAgICAgICAgICAgICBhbGVydCgiY2hvb3NlIG9uZSBpdGVtIikNCiAgICAgICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCJzZWxlY3QtZnVuY3Rpb25Hcm91cHR5cGUiLCB0aGlzLnNlbGVjdGVkTURHcm91cEl0ZW0sIDMpOyAvLyBtYWludmlld+yXkOyEnCDtmZzshLHtmZTssL3snYQg67CU6r+U7KO866Ck6rOgIDPsnYQg64Sj7JeI7J2MIDPsnYAgTW9kZSBEZWNsYXJhdGlvbg0KICAgICAgICAgICAgdGhpcy5zZWxlY3RlZE1ER3JvdXBJdGVtID0gW10NCiAgICAgICAgICAgIHRoaXMucGFuZWxNREdyb3VwID0gW10NCiAgICAgICAgICAgIHRoaXMuaXNTZWxlY3RNb2RlID0gZmFsc2UNCiAgICAgICAgfSwNCiAgICAgICAgY2FuY2xlRnVuY3Rpb25UdXBlICgpIHsNCiAgICAgICAgICAgIHRoaXMuaXNTZWxlY3RNb2RlID0gZmFsc2UNCiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNREdyb3VwSXRlbSA9IFtdDQogICAgICAgICAgICB0aGlzLnBhbmVsTURHcm91cCA9IFtdDQogICAgICAgIH0sDQogICAgfQ0KfQ0K"},{"version":3,"sources":["ModeDeclarationGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModeDeclarationGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"modedeclarationgroup\">\r\n        <v-app style=\"height: 200px;\">\r\n            <v-container fluid>\r\n                <v-card outlined >\r\n                    <v-toolbar color=\"teal lighten-3\" dark hide-on-scroll dense>\r\n                        <v-toolbar-title>Mode Declaration Group</v-toolbar-title>\r\n                    </v-toolbar>\r\n                    <v-card-text>\r\n                        <v-row>\r\n                            <v-col>\r\n                                <v-btn text @click=\"addMDGroup\" x-small>\r\n                                    <v-icon>mdi-plus</v-icon>\r\n                                </v-btn>\r\n                            </v-col>\r\n                            <v-col>\r\n                                <v-btn @click=\"openallList\" x-small> all </v-btn>\r\n                                <v-btn @click=\"closeallList\" x-small>none</v-btn>\r\n                            </v-col>\r\n                        </v-row>\r\n                        <v-btn v-if=\"isSelectMode==true\" @click=\"selectFunctionType\" x-small> select </v-btn>\r\n                        <v-btn v-if=\"isSelectMode==true\" @click=\"cancleFunctionTupe\" x-small>cancle</v-btn>\r\n                        <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"editedMDGroupItem.name\" label=\"name\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                        <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"editedMDGroupItem.initialmode\" label=\"Initial Mode\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                        <v-text-field v-if=\"iselementadd==true\" type=\"text\" v-model=\"addMDGroupmodeDeclaration\" label=\"Mode Declaration namd\" placeholder=\"String String String...\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                        <v-expansion-panels v-model=\"panelMDGroup\" focusable multiple>\r\n                            <v-expansion-panel v-for=\"(item,i) in MDGroupItem\" :key=\"i\">\r\n                                <v-expansion-panel-header>\r\n                                    <div class=\"panel-header\">\r\n                                        <input v-if=\"isSelectMode==true\" type=\"checkbox\" v-model=\"selectedMDGroupItem\" :value=\"item.name\">\r\n                                        <v-btn color=\"blue darken-1\" text @click.native.stop=\"deleteMDGroupItem(i)\" x-small>\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                         <label> name </label>\r\n                                        <span>{{ item.name }}</span>\r\n                                    </div>\r\n                                    <template v-slot:actions>\r\n                                        <v-icon v-if=\"item.name == ''\" color=\"error\">mdi-alert-circle</v-icon>\r\n                                    </template>\r\n                                </v-expansion-panel-header>\r\n                                <v-expansion-panel-content>\r\n                                    <br>\r\n                                    <v-select v-model=\"item.initialmode\" :items=\"item.modeDeclaration\" label=\"Initial Mode\" dense outlined return-object></v-select>\r\n                                    <v-card outlined max-height=\"300px\">\r\n                                        <div class=\"subtitle-2\">Mode Declarations\r\n                                            <v-btn text @click=\"addModeDeclarationMode(item)\" x-small>\r\n                                                <v-icon>mdi-plus</v-icon>\r\n                                            </v-btn>\r\n                                            <v-btn @click=\"deleteModeDeclarationMode(item)\" text x-small>\r\n                                                <v-icon>mdi-minus</v-icon>\r\n                                            </v-btn>\r\n                                            <v-text-field v-if=\"isMDGoupnameadd==true\" type=\"text\" v-model=\"addModeDeclarationName\" label=\"add name\" placeholder=\"String\" outlined dense style=\"height: 45px;\"></v-text-field>\r\n                                             <v-list class=\"overflow-y-auto\" outlined height=\"100\" dense>\r\n                                                <v-list-item-group v-model=\"selectedModeDeclaration\" multiple>\r\n                                                    <v-list-item  v-for=\"(modeitem,i) in item.modeDeclaration\" :key=\"i\" :value=\"modeitem\" class=\"text-left\">\r\n                                                        <template v-slot:default=\"{ active }\">\r\n                                                            <v-list-item-content>\r\n                                                                <v-list-item-title v-text=\"modeitem\" ></v-list-item-title>\r\n                                                            </v-list-item-content>\r\n                                                            <v-list-item-action>\r\n                                                                <v-checkbox :input-value=\"active\" color=\"deep-purple accent-4\"></v-checkbox>\r\n                                                            </v-list-item-action>\r\n                                                        </template>\r\n                                                    </v-list-item>\r\n                                                </v-list-item-group>\r\n                                            </v-list>\r\n                                        </div>\r\n                                    </v-card>\r\n                                </v-expansion-panel-content>\r\n                            </v-expansion-panel>\r\n                        </v-expansion-panels>\r\n                    </v-card-text>\r\n                </v-card>\r\n            </v-container>\r\n        </v-app>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../main.js\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            panelMDGroup: [],\r\n            selectedMDGroupItem: [],\r\n            selectedModeDeclaration:[],\r\n            MDGroupItem: [\r\n                {   name: 'CCU20_Machine_OTA_ModeDeclarationGroup',\r\n                    initialmode: 'Off',\r\n                    modeDeclaration: [ 'Off', 'Running', 'Update', 'Verify'],\r\n                },\r\n                {   name: 'CCU20_Machine_MachineState_ModeDeclarationGroup',\r\n                    initialmode: 'Restart',\r\n                    modeDeclaration: [ 'Diagnostic', 'Off', 'Restart', 'Running', 'Shutdown', 'Startup', 'Update', 'Verify'],\r\n                },\r\n                {   name: 'CCU20_Machine_Network_Storage_ModeDeclarationGroup',\r\n                    initialmode: 'Running',\r\n                    modeDeclaration: [ 'Off', 'Running', 'Update', 'Verify'],\r\n                },\r\n            ],\r\n            editedMDGroupItem: {\r\n                name: '',\r\n                initialmode: '',\r\n                modeDeclaration: [],\r\n            },\r\n            defaultMDGroupItem: {\r\n                name: '',\r\n                initialmode: '',\r\n                modeDeclaration: [],\r\n            },\r\n            addMDGroupmodeDeclaration: '',\r\n            iselementadd: false,\r\n            isMDGoupnameadd: false,\r\n            addModeDeclarationName: '',\r\n            isSelectMode: false,\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on(\"open-modeDeclaration\", (clickpanel) => {\r\n            this.panelMDGroup = [this.MDGroupItem.findIndex(findname => findname.name == clickpanel)]\r\n        })\r\n        EventBus.$on('select-modedeclaration', (selectMode) => {\r\n            this.isSelectMode = selectMode\r\n            this.panelMDGroup = []\r\n        })\r\n    },\r\n    methods: {\r\n        openallList () {\r\n            this.panelMDGroup = Array.from(Array(this.MDGroupItem.length).keys());\r\n        },\r\n        closeallList () {\r\n            this.panelMDGroup = []\r\n        },\r\n        addMDGroup () {\r\n            if(this.iselementadd == true) {\r\n                if(this.editedMDGroupItem.name != '') {\r\n                    this.editedMDGroupItem.modeDeclaration = this.addMDGroupmodeDeclaration.split(\" \")\r\n                    this.MDGroupItem.push(this.editedMDGroupItem)\r\n                }\r\n                this.iselementadd = false;\r\n                this.editedMDGroupItem = Object.assign({}, this.defaultMDGroupItem)\r\n                this.addMDGroupmodeDeclaration = ''\r\n            } else{\r\n                this.iselementadd = true;\r\n            }\r\n        },\r\n        deleteMDGroupItem (index) {\r\n            this.MDGroupItem.splice(index,1)\r\n        },\r\n        addModeDeclarationMode (item) {\r\n            if (this.isMDGoupnameadd == true) {\r\n                if (this.addModeDeclarationName != '') {\r\n                    item.modeDeclaration.push(this.addModeDeclarationName)\r\n                }\r\n                this.isMDGoupnameadd = false\r\n                this.addModeDeclarationName = ''\r\n            } else {\r\n                this.isMDGoupnameadd = true\r\n            }\r\n        },\r\n        deleteModeDeclarationMode (item) {\r\n            item.modeDeclaration = item.modeDeclaration.filter(item => {\r\n                    return this.selectedModeDeclaration.indexOf(item) < 0 })\r\n            this.selectedModeDeclaration = []\r\n        },\r\n        selectFunctionType () {\r\n            if (this.selectedMDGroupItem.length > 1) {\r\n                alert (\"only select one\") \r\n                return \r\n            }\r\n            else if (this.selectedMDGroupItem.length == 0) {\r\n                alert(\"choose one item\")\r\n                return\r\n            }\r\n            EventBus.$emit(\"select-functionGrouptype\", this.selectedMDGroupItem, 3); // mainview에서 활성화창을 바꿔주려고 3을 넣었음 3은 Mode Declaration\r\n            this.selectedMDGroupItem = []\r\n            this.panelMDGroup = []\r\n            this.isSelectMode = false\r\n        },\r\n        cancleFunctionTupe () {\r\n            this.isSelectMode = false\r\n            this.selectedMDGroupItem = []\r\n            this.panelMDGroup = []\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.panel-header {\r\n  height: 18px;\r\n  width: 140px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 0 5px 0 5px;\r\n  text-decoration: none;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: rgb(0, 0, 0);\r\n}\r\n\r\n.panel-header label {\r\n  color: rgb(148, 144, 144);\r\n}\r\n\r\n.panel-header:hover {\r\n  overflow: visible;\r\n} \r\n\r\ndiv#modedeclarationgroup\r\n{\r\n  -ms-user-select: none; \r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n</style>\r\n"]}]}