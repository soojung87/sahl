{"remainingRequest":"D:\\service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\appbar.vue?vue&type=template&id=418c1362&","dependencies":[{"path":"D:\\service\\src\\components\\appbar.vue","mtime":1662598689086},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}