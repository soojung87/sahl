{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\ProcessToMachine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\ProcessToMachine.vue","mtime":1661757472798},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNvbnN0YW50IGZyb20gIi4uL3N0b3JlL2NvbnN0YW50cy5qcyI7CmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiLi4vbWFpbi5qcyI7CmltcG9ydCBkaWFsb2dQYXRoU2V0dGluZyBmcm9tICcuLi9jb21wb25lbnRzL2RpYWxvZ1BhdGhTZXR0aW5nLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydlbGVtZW50JywgJ2lzRGF0YWlsVmlldycsICdtaW5pbWFwdG9vbGJhcicsICdsb2NhdGlvbiddLAogIGNvbXBvbmVudHM6IHsKICAgIGRpYWxvZ1BhdGhTZXR0aW5nOiBkaWFsb2dQYXRoU2V0dGluZwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFjdGl2ZVVVSUQ6IGZ1bmN0aW9uIGFjdGl2ZVVVSUQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEOwogICAgfSwKICAgIGRldGFpbFZpZXdVVUlEOiBmdW5jdGlvbiBkZXRhaWxWaWV3VVVJRCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmRldGFpbFZpZXdVVUlEOwogICAgfSwKICAgIHNldHRpbmc6IGZ1bmN0aW9uIHNldHRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5nOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZVVVSUQ6IGZ1bmN0aW9uIGFjdGl2ZVVVSUQodmFsKSB7CiAgICAgIHRoaXMuc2V0VG9vbGJhckNvbG9yKHZhbCk7CiAgICB9LAogICAgZGV0YWlsVmlld1VVSUQ6IGZ1bmN0aW9uIGRldGFpbFZpZXdVVUlEKHZhbCkgewogICAgICB0aGlzLnNldFRvb2xiYXJDb2xvckRldGFpbFZpZXcodmFsKTsKICAgIH0sCiAgICBzZXR0aW5nOiBmdW5jdGlvbiBzZXR0aW5nKHZhbHVlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnpvb212YWx1ZSA9IHZhbHVlLnpvb21NYWluOwoKICAgICAgaWYgKHRoaXMuem9vbXZhbHVlIDwgdGhpcy4kc2V0Wm9vbWluVG9vbHRpcCkgewogICAgICAgIHRoaXMuaXNUb29sdGlwID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc1Rvb2x0aXAgPSB0aGlzLm1pbmltYXB0b29sYmFyOwoKICAgICAgICBpZiAodGhpcy56b29tdmFsdWUgPiB0aGlzLiRzZXRab29taW5MaW5lVGl0bGUgJiYgdGhpcy56b29tdmFsdWUgPCB0aGlzLiRzZXRab29taW5MaW5lU2V0dXBTdGFydCkgewogICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2RyYXdMaW5lVGl0bGVCYXInLCB0aGlzLmVsZW1lbnQudXVpZCwgZmFsc2UpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy56b29tdmFsdWUgPiB0aGlzLiRzZXRab29taW5MaW5lU2V0dXBTdGFydCAmJiB0aGlzLnpvb212YWx1ZSA8IHRoaXMuJHNldFpvb21pbkxpbmVTZXR1cEVuZCkgewogICAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZHJhd0xpbmVUaXRsZUJhcicsIF90aGlzLmVsZW1lbnQudXVpZCwgX3RoaXMuaXNlbGVtZW50T3BlbkNsb3NlKTsKCiAgICAgICAgICAgIGlmIChfdGhpcy5pc2VsZW1lbnRPcGVuQ2xvc2UgJiYgX3RoaXMubG9jYXRpb24gPT0gMSkgewogICAgICAgICAgICAgIGlmIChfdGhpcy5pc1Byb01hcHBpbmdPcGVuQ2xvc2UpIHsKICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdjaGFuZ2VMaW5lLXNvbWVpcFNlcnZpY2UnLCAnJywgX3RoaXMuZWxlbWVudC51dWlkLCBfdGhpcy5tYXBwaW5nVGFiLCBfdGhpcy5lbGVtZW50Lm1hcHBpbmdbX3RoaXMubWFwcGluZ1RhYl0uaWQpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnY2hhbmdlTGluZS1zb21laXBTZXJ2aWNlJywgJycsIF90aGlzLmVsZW1lbnQudXVpZCwgbnVsbCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnNldFRvb2xiYXJDb2xvcih0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBydWxlczogewogICAgICAgIG5hbWU6IFtmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICByZXR1cm4gKHZhbCB8fCAnJykubGVuZ3RoID4gMDsKICAgICAgICB9XQogICAgICB9LAogICAgICBkaWFsb2dQYXRoOiBmYWxzZSwKICAgICAgY29sb3JUb29sYmFyOiAiIzZBNUFDRCIsCiAgICAgIHpvb212YWx1ZTogdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZy56b29tTWFpbiwKICAgICAgaXNUb29sdGlwOiB0aGlzLm1pbmltYXB0b29sYmFyLAogICAgICBpc2VsZW1lbnRPcGVuQ2xvc2U6IHRoaXMubWluaW1hcHRvb2xiYXIsCiAgICAgIC8vdG9vbGJhcuunjCDrs7Tsl6zspITqsoPsnbTrg5Ag7JWE64uI64OQIOyEpOyglSB0cnVlOiDsoITssrQg64ukIOuztOyXrOykjCAvIGZhbHNlIDogdG9vbGJhcuunjCDrs7Tsl6zspIwKICAgICAgZGlhbG9nVGV4dDogZmFsc2UsCiAgICAgIGVkaXRBUlhNTDogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIG1hcHBpbmc6IFtdCiAgICAgIH0sCiAgICAgIGVkaXRUZXh0Q29uZmlnOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcHRtbU1hY2hpbmU6IG51bGwsCiAgICAgICAgcHRtbVByb2Nlc3M6IG51bGwsCiAgICAgICAgcnVub246IFtdLAogICAgICAgIGlkOiAnJwogICAgICB9LAogICAgICBlZGl0VGV4dFNoYWxsOiB7CiAgICAgICAgc2hhbGw6IG51bGwsCiAgICAgICAgaWQ6ICcnCiAgICAgIH0sCiAgICAgIGlzUHJvTWFwcGluZ09wZW5DbG9zZTogdHJ1ZSwKICAgICAgaXNSdW5Pbk9wZW5DbG9zZTogdHJ1ZSwKICAgICAgc2VsTWFjaGluZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRNYWNoaW5lLAogICAgICBzZWxQcm9jZXNzOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFByb2Nlc3MsCiAgICAgIG1hcHBpbmdUYWI6IG51bGwsCiAgICAgIGlzZGVsZXRlUnVuT246IGZhbHNlLAogICAgICBzZWxlY3REZWxlY3RSdW5PbjogW10sCiAgICAgIGhlYWRlclJ1bk9uOiBbewogICAgICAgIHRleHQ6ICdTaGFsbCBSdW4gT24gUmVmJywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICdzaGFsbCcKICAgICAgfV0sCiAgICAgIGVkaXRSdW5PbjogewogICAgICAgIHNoYWxsOiBudWxsLAogICAgICAgIGlkOiAnJwogICAgICB9LAogICAgICBpc0VkaXRpbmdSdW5PbjogdHJ1ZSwKICAgICAgc2VsUnVuT246IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TWFjaGluUHJvY2Vzc29yCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLm1pbmltYXB0b29sYmFyICYmIHRoaXMuem9vbXZhbHVlIDwgdGhpcy4kc2V0Wm9vbWluRWxlbWVudCkgewogICAgICB0aGlzLmlzVG9vbHRpcCA9IGZhbHNlOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0RGlhbG9nOiBmdW5jdGlvbiBzdWJtaXREaWFsb2coZWxlbWVudCkgewogICAgICB0aGlzLmVsZW1lbnQucGF0aCA9IGVsZW1lbnQ7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaXNpbnRvRXJyb3JMaXN0JywgewogICAgICAgIHV1aWQ6IHRoaXMuZWxlbWVudC51dWlkLAogICAgICAgIG5hbWU6IHRoaXMuZWxlbWVudC5uYW1lLAogICAgICAgIHBhdGg6IHRoaXMuZWxlbWVudC5wYXRoCiAgICAgIH0pOwogICAgfSwKICAgIHNldFRvb2xiYXJDb2xvcjogZnVuY3Rpb24gc2V0VG9vbGJhckNvbG9yKGFjdGl2ZWlkKSB7CiAgICAgIGlmICh0aGlzLmVsZW1lbnQudXVpZCA9PSBhY3RpdmVpZCkgewogICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0gIiNGRjE0OTMiOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY29sb3JUb29sYmFyID0gIiM2QTVBQ0QiOwogICAgICB9CiAgICB9LAogICAgc2V0VG9vbGJhckNvbG9yRGV0YWlsVmlldzogZnVuY3Rpb24gc2V0VG9vbGJhckNvbG9yRGV0YWlsVmlldyhpc2RldGFpbCkgewogICAgICBpZiAodGhpcy5lbGVtZW50LnV1aWQgPT0gaXNkZXRhaWwpIHsKICAgICAgICB0aGlzLmNvbG9yVG9vbGJhciA9ICIjQjBFMEU2IjsKICAgICAgfSBlbHNlIGlmICh0aGlzLmVsZW1lbnQudXVpZCA9PSB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEKSB7CiAgICAgICAgdGhpcy5jb2xvclRvb2xiYXIgPSAiI0ZGMTQ5MyI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jb2xvclRvb2xiYXIgPSAiIzZBNUFDRCI7CiAgICAgIH0KICAgIH0sCiAgICBzaG93UHJvY2Vzc3RvTWFjaGluZU1hcHBpbmdzZXQ6IGZ1bmN0aW9uIHNob3dQcm9jZXNzdG9NYWNoaW5lTWFwcGluZ3NldCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmlzZWxlbWVudE9wZW5DbG9zZSA9IHRoaXMuaXNlbGVtZW50T3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2RyYXdMaW5lVGl0bGVCYXInLCBfdGhpczIuZWxlbWVudC51dWlkLCBfdGhpczIuaXNlbGVtZW50T3BlbkNsb3NlKTsKCiAgICAgICAgaWYgKF90aGlzMi5pc2VsZW1lbnRPcGVuQ2xvc2UgJiYgX3RoaXMyLmxvY2F0aW9uID09IDEpIHsKICAgICAgICAgIGlmIChfdGhpczIuaXNQcm9NYXBwaW5nT3BlbkNsb3NlKSB7CiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdjaGFuZ2VMaW5lLXNvbWVpcFNlcnZpY2UnLCAnJywgX3RoaXMyLmVsZW1lbnQudXVpZCwgX3RoaXMyLm1hcHBpbmdUYWIsIF90aGlzMi5lbGVtZW50Lm1hcHBpbmdbX3RoaXMyLm1hcHBpbmdUYWJdLmlkKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdjaGFuZ2VMaW5lLXNvbWVpcFNlcnZpY2UnLCAnJywgX3RoaXMyLmVsZW1lbnQudXVpZCwgbnVsbCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBzaG93UHJvTWFwcGluZzogZnVuY3Rpb24gc2hvd1Byb01hcHBpbmcoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5pc1Byb01hcHBpbmdPcGVuQ2xvc2UgPSB0aGlzLmlzUHJvTWFwcGluZ09wZW5DbG9zZSA/IGZhbHNlIDogdHJ1ZTsKCiAgICAgIGlmICh0aGlzLmVsZW1lbnQubWFwcGluZy5sZW5ndGggPiAwICYmIHRoaXMubG9jYXRpb24gPT0gMSkgewogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChfdGhpczMuaXNQcm9NYXBwaW5nT3BlbkNsb3NlKSB7CiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdjaGFuZ2VMaW5lLXNvbWVpcFNlcnZpY2UnLCAnJywgX3RoaXMzLmVsZW1lbnQudXVpZCwgX3RoaXMzLm1hcHBpbmdUYWIsIF90aGlzMy5lbGVtZW50Lm1hcHBpbmdbX3RoaXMzLm1hcHBpbmdUYWJdLmlkKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdjaGFuZ2VMaW5lLXNvbWVpcFNlcnZpY2UnLCAnJywgX3RoaXMzLmVsZW1lbnQudXVpZCwgbnVsbCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzaG93UnVuT246IGZ1bmN0aW9uIHNob3dSdW5PbigpIHsKICAgICAgdGhpcy5pc1J1bk9uT3BlbkNsb3NlID0gdGhpcy5pc1J1bk9uT3BlbkNsb3NlID8gZmFsc2UgOiB0cnVlOwogICAgfSwKICAgIGlucHV0UHJvY2Vzc3RvTWFjaGluZU1hcHBpbmdzZXROYW1lOiBmdW5jdGlvbiBpbnB1dFByb2Nlc3N0b01hY2hpbmVNYXBwaW5nc2V0TmFtZSgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdlZGl0UHJvdG9NYWNoaW5lTWFwcGluZycsIHsKICAgICAgICBjb21wbzogIk5hbWUiLAogICAgICAgIHV1aWQ6IHRoaXMuZWxlbWVudC51dWlkLAogICAgICAgIG5hbWU6IHRoaXMuZWxlbWVudC5uYW1lCiAgICAgIH0pOyAvL3RoaXMuJHN0b3JlLmNvbW1pdCgnY2hhbmdlTmFtZUV4ZWN1dGFibGUnLCB7dXVpZDp0aGlzLmVsZW1lbnQudXVpZCwgbmFtZTp0aGlzLmVsZW1lbnQubmFtZX0gKQoKICAgICAgaWYgKHRoaXMuZWxlbWVudC5uYW1lICE9ICcnKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdpc2ludG9FcnJvckxpc3QnLCB7CiAgICAgICAgICB1dWlkOiB0aGlzLmVsZW1lbnQudXVpZCwKICAgICAgICAgIG5hbWU6IHRoaXMuZWxlbWVudC5uYW1lLAogICAgICAgICAgcGF0aDogdGhpcy5lbGVtZW50LnBhdGgKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNsZWFyTWFjaGluZVJlZjogZnVuY3Rpb24gY2xlYXJNYWNoaW5lUmVmKGlkeCkgewogICAgICB0aGlzLmVsZW1lbnQubWFwcGluZ1tpZHhdLnB0bW1NYWNoaW5lID0gbnVsbDsKICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbaWR4XS5pZCk7CgogICAgICBpZiAoZW5kTGluZSAhPSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLmRlbGV0ZUxpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbaWR4XS5pZCk7CiAgICAgIH0KICAgIH0sCiAgICBzZXRNYWNoaW5lUmVmU2VsZWN0OiBmdW5jdGlvbiBzZXRNYWNoaW5lUmVmU2VsZWN0KCkgewogICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvbWFjaGluZWZyb21wdG1tLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLmlkKTsKCiAgICAgIGlmIChlbmRMaW5lID09IHVuZGVmaW5lZCkgewogICAgICAgIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQYXRoKHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbU1hY2hpbmUsIDApOwogICAgICB9CgogICAgICBpZiAoZW5kTGluZSAhPSBudWxsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXREZXRhaWxWaWV3JywgewogICAgICAgICAgdXVpZDogZW5kTGluZSwKICAgICAgICAgIGVsZW1lbnQ6IGNvbnN0YW50Lk1hY2hpbmVfc3RyCiAgICAgICAgfSk7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZW5kTGluZSArIHRoaXMubG9jYXRpb24pLnNjcm9sbEludG9WaWV3KHsKICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJywKICAgICAgICAgIGJsb2NrOiAnc3RhcnQnCiAgICAgICAgfSk7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2FjdGl2ZS1lbGVtZW50JywgZW5kTGluZSk7CiAgICAgIH0KICAgIH0sCiAgICBzZXRNYWNoaW5lTGlzdDogZnVuY3Rpb24gc2V0TWFjaGluZUxpc3QoKSB7CiAgICAgIHRoaXMuc2VsTWFjaGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TWFjaGluZTsKICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCk7CiAgICB9LAogICAgc2V0TWFjaGluZTogZnVuY3Rpb24gc2V0TWFjaGluZShpdGVtKSB7CiAgICAgIGNvbnNvbGUubG9nKCcvLy8gJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbU1hY2hpbmUpOwoKICAgICAgaWYgKHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbU1hY2hpbmUgIT0gaXRlbS5uYW1lKSB7CiAgICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCk7CgogICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiBlbmRMaW5lICE9IGl0ZW0udXVpZCkgewogICAgICAgICAgLy/quLDsobTqurwg7IKt7KCc7ZW07JW87ZWc64ukIHZ1ZXjsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIG1haW52aWV37JeQ7ISc64+EIOyCreygnO2VmOqzoCAKICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvbWFjaGluZWZyb21wdG1tLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLmlkKTsKICAgICAgICB9IC8v7IOI66GcIOy2lOqwgO2VtOykgOuLpAoKCiAgICAgICAgaWYgKGVuZExpbmUgIT0gaXRlbS51dWlkKSB7CiAgICAgICAgICB0aGlzLm5ld0xpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCwgdGhpcy5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCwgaXRlbS51dWlkKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbU1hY2hpbmUgPSBpdGVtLm5hbWU7CiAgICAgIH0KCiAgICAgIHRoaXMuc2V0YWN0aXZlVVVJRCgpOwogICAgfSwKICAgIG5ld01hY2hpbmU6IGZ1bmN0aW9uIG5ld01hY2hpbmUoKSB7CiAgICAgIHZhciBlbGVtZW50WCA9IEFycmF5LmZyb20oewogICAgICAgIGxlbmd0aDogNAogICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApOwogICAgICB9KTsKICAgICAgdmFyIGVsZW1lbnRZID0gQXJyYXkuZnJvbSh7CiAgICAgICAgbGVuZ3RoOiA0CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwMCk7CiAgICAgIH0pOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNYWNoaW5lJywgewogICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1hY2hpbmUsCiAgICAgICAgcGF0aDogJycsCiAgICAgICAgdG9wOiBlbGVtZW50WSwKICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgIG1hY2hpbmVkZXNpZ246IG51bGwsCiAgICAgICAgdGltZW91dDogJycsCiAgICAgICAgaHdlbGVtZW50OiBbXSwKICAgICAgICBleGVjdXRhYmxlOiBudWxsLAogICAgICAgIGFkbWluOiAnJywKICAgICAgICBmdW5jdGlvbmdyb3VwOiBbXSwKICAgICAgICBlbnZpcm9uOiBbXSwKICAgICAgICBwcm9jZXNzb3I6IFtdLAogICAgICAgIG1vZHVsZWluc3RhbnQ6IFtdLAogICAgICAgIHVjbTogW10sCiAgICAgICAgaWFtOiBbXSwKICAgICAgICBjcnlwdG86IFtdLAogICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgIHZhbGlkYXRpb246IGZhbHNlCiAgICAgIH0pOwogICAgICBFdmVudEJ1cy4kZW1pdCgnYWRkLWVsZW1lbnQnLCBjb25zdGFudC5NYWNoaW5lX3N0cik7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZGQtZWxlbWVudCcsIGNvbnN0YW50Lk1hY2hpbmVzX3N0cik7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZWRpdFByb3RvTWFjaGluZU1hcHBpbmcnLCB7CiAgICAgICAgY29tcG86ICJ6IiwKICAgICAgICB1dWlkOiB0aGlzLmVsZW1lbnQudXVpZCwKICAgICAgICB6aW5kZXg6IDIKICAgICAgfSk7CiAgICB9LAogICAgY2xlYXJQcm9jZXNzUmVmOiBmdW5jdGlvbiBjbGVhclByb2Nlc3NSZWYoaWR4KSB7CiAgICAgIHRoaXMuZWxlbWVudC5tYXBwaW5nW2lkeF0ucHRtbVByb2Nlc3MgPSBudWxsOwogICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcHJvY2Vzc2Zyb21wdG1tLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1tpZHhdLmlkKTsKCiAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCkgewogICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcHJvY2Vzc2Zyb21wdG1tLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1tpZHhdLmlkKTsKICAgICAgfQogICAgfSwKICAgIHNldFByb2Nlc3NSZWZTZWxlY3Q6IGZ1bmN0aW9uIHNldFByb2Nlc3NSZWZTZWxlY3QoKSB7CiAgICAgIHZhciBlbmRMaW5lID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkICsgJy9wcm9jZXNzZnJvbXB0bW0tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQpOwoKICAgICAgaWYgKGVuZExpbmUgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UHJvY2Vzc1BhdGgodGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5wdG1tUHJvY2Vzcyk7CiAgICAgIH0KCiAgICAgIGlmIChlbmRMaW5lICE9IG51bGwpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldERldGFpbFZpZXcnLCB7CiAgICAgICAgICB1dWlkOiBlbmRMaW5lLAogICAgICAgICAgZWxlbWVudDogY29uc3RhbnQuUHJvY2Vzc19zdHIKICAgICAgICB9KTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbmRMaW5lICsgdGhpcy5sb2NhdGlvbikuc2Nyb2xsSW50b1ZpZXcoewogICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLAogICAgICAgICAgYmxvY2s6ICdzdGFydCcKICAgICAgICB9KTsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgnYWN0aXZlLWVsZW1lbnQnLCBlbmRMaW5lKTsKICAgICAgfQogICAgfSwKICAgIHNldFByb2Nlc3NMaXN0OiBmdW5jdGlvbiBzZXRQcm9jZXNzTGlzdCgpIHsKICAgICAgdGhpcy5zZWxQcm9jZXNzID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRQcm9jZXNzOwogICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKTsKICAgIH0sCiAgICBzZXRQcm9jZXNzOiBmdW5jdGlvbiBzZXRQcm9jZXNzKGl0ZW0pIHsKICAgICAgaWYgKHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbVByb2Nlc3MgIT0gaXRlbS5uYW1lKSB7CiAgICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL3Byb2Nlc3Nmcm9tcHRtbS0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCk7CgogICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiBlbmRMaW5lICE9IGl0ZW0udXVpZCkgewogICAgICAgICAgLy/quLDsobTqurwg7IKt7KCc7ZW07JW87ZWc64ukIHZ1ZXjsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIG1haW52aWV37JeQ7ISc64+EIOyCreygnO2VmOqzoCAKICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcHJvY2Vzc2Zyb21wdG1tLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLmlkKTsKICAgICAgICB9IC8v7IOI66GcIOy2lOqwgO2VtOykgOuLpAoKCiAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkICsgJy9wcm9jZXNzZnJvbXB0bW0tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQsIHRoaXMuZWxlbWVudC51dWlkICsgJy9wcm9jZXNzZnJvbXB0bW0tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQsIGl0ZW0udXVpZCk7CiAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5wdG1tUHJvY2VzcyA9IGl0ZW0ubmFtZTsKICAgICAgfQoKICAgICAgdGhpcy5zZXRhY3RpdmVVVUlEKCk7CiAgICB9LAogICAgbmV3UHJvY2VzczogZnVuY3Rpb24gbmV3UHJvY2VzcygpIHsKICAgICAgdmFyIGVsZW1lbnRYID0gQXJyYXkuZnJvbSh7CiAgICAgICAgbGVuZ3RoOiA0CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwMCk7CiAgICAgIH0pOwogICAgICB2YXIgZWxlbWVudFkgPSBBcnJheS5mcm9tKHsKICAgICAgICBsZW5ndGg6IDQKICAgICAgfSwgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKTsKICAgICAgfSk7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFByb2Nlc3MnLCB7CiAgICAgICAgLy9wcm9kZXNpZ24sIGRldGVybWluLCBleGVjdXQsIG1hY2hpbmV0eXBlICDripQgbnVsbO2VtOykmOyVvO2VnOuLpC4gY2xlYXJhYmxl7ZWY66m0IOqwkuydtCBudWxs67OA7ZWY6riwIOuVjOusuOyXkCAKICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQcm9jZXNzLAogICAgICAgIHBhdGg6ICcnLAogICAgICAgIHRvcDogZWxlbWVudFksCiAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgemluZGV4OiAxMCwKICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICBsb2dMZXZlbDogbnVsbCwKICAgICAgICBsb2dQYXRoOiAnJywKICAgICAgICBsb2dQcm9EZXNjOiAnJywKICAgICAgICBsb2dQcm9JRDogJycsCiAgICAgICAgcmVzdGFydDogJycsCiAgICAgICAgcHJlTWFwcGluZzogbnVsbCwKICAgICAgICBsb2dNb2RlOiBbXSwKICAgICAgICBwcm9kZXNpZ246IG51bGwsCiAgICAgICAgZGV0ZXJtaW46IG51bGwsCiAgICAgICAgZXhlY3V0OiBudWxsLAogICAgICAgIG1hY2hpbm5hbWU6ICcnLAogICAgICAgIG1hY2hpbmV0eXBlOiBudWxsLAogICAgICAgIGRlcGVuZGVudDogW10KICAgICAgfSk7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCdhZGQtZWxlbWVudCcsIGNvbnN0YW50LlByb2Nlc3Nfc3RyKTsKICAgICAgRXZlbnRCdXMuJGVtaXQoJ2FkZC1lbGVtZW50JywgY29uc3RhbnQuQWRhcHRpdmVBcHBsaWNhdGlvbl9zdHIpOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2VkaXRQcm90b01hY2hpbmVNYXBwaW5nJywgewogICAgICAgIGNvbXBvOiAieiIsCiAgICAgICAgdXVpZDogdGhpcy5lbGVtZW50LnV1aWQsCiAgICAgICAgemluZGV4OiAyCiAgICAgIH0pOwogICAgfSwKICAgIGFkZFByb01hcHBpbmc6IGZ1bmN0aW9uIGFkZFByb01hcHBpbmcoKSB7CiAgICAgIHZhciBlZGl0SXRlbSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBwdG1tTWFjaGluZTogbnVsbCwKICAgICAgICBwdG1tUHJvY2VzczogbnVsbCwKICAgICAgICBydW5vbjogW10sCiAgICAgICAgaWQ6ICcnCiAgICAgIH07CiAgICAgIHZhciBhZGRPYmogPSBuZXcgT2JqZWN0KGVkaXRJdGVtKTsKICAgICAgdmFyIHJlcyA9IHRydWUsCiAgICAgICAgICBuID0gMDsKCiAgICAgIHdoaWxlIChyZXMpIHsKICAgICAgICBhZGRPYmoubmFtZSA9ICdQcm9jZXNzVG9NYWNoaW5lTWFwXycgKyBuKys7CiAgICAgICAgcmVzID0gdGhpcy5lbGVtZW50Lm1hcHBpbmcuc29tZShmdW5jdGlvbiAoZWxlKSB7CiAgICAgICAgICByZXR1cm4gZWxlLm5hbWUgPT09IGFkZE9iai5uYW1lOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBhZGRPYmouaWQgPSBuOwogICAgICB0aGlzLmVsZW1lbnQubWFwcGluZy5wdXNoKGFkZE9iaik7CiAgICAgIHRoaXMubWFwcGluZ1RhYiA9IHRoaXMuZWxlbWVudC5tYXBwaW5nLmxlbmd0aCAtIDE7CgogICAgICBpZiAodGhpcy5sb2NhdGlvbiA9PSAxKSB7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2NoYW5nZUxpbmUtc29tZWlwU2VydmljZScsICcnLCB0aGlzLmVsZW1lbnQudXVpZCwgbnVsbCk7CiAgICAgIH0KICAgIH0sCiAgICBjbGlja1Byb01hcHBpbmd0YWI6IGZ1bmN0aW9uIGNsaWNrUHJvTWFwcGluZ3RhYigpIHsKICAgICAgdGhpcy5pc2RlbGV0ZVJ1bk9uID0gZmFsc2U7CiAgICAgIHRoaXMuc2VsZWN0RGVsZWN0UnVuT24gPSBbXTsKICAgIH0sCiAgICBjaGFuZ2VQcm9NYXBwaW5nVGFiOiBmdW5jdGlvbiBjaGFuZ2VQcm9NYXBwaW5nVGFiKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmVsZW1lbnQubWFwcGluZy5sZW5ndGggPiAwICYmIHRoaXMubG9jYXRpb24gPT0gMSAmJiB0aGlzLm1hcHBpbmdUYWIgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnY2hhbmdlTGluZS1zb21laXBTZXJ2aWNlJywgJycsIF90aGlzNC5lbGVtZW50LnV1aWQsIF90aGlzNC5tYXBwaW5nVGFiLCBfdGhpczQuZWxlbWVudC5tYXBwaW5nW190aGlzNC5tYXBwaW5nVGFiXS5pZCk7CiAgICAgICAgfSwgMzAwKTsKICAgICAgfQogICAgfSwKICAgIGRlbGV0ZVByb01hcHBpbmc6IGZ1bmN0aW9uIGRlbGV0ZVByb01hcHBpbmcoaWR4KSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlUmVmVGFibGUnLCB7CiAgICAgICAgZGVsZXRlTmFtZTogJ3Byb01hcHBpbmcnLAogICAgICAgIGRlbGV0ZVRhYjogdHJ1ZSwKICAgICAgICB0YWJOYW1lOiB0aGlzLmVsZW1lbnQubWFwcGluZ1tpZHhdLm5hbWUsCiAgICAgICAgcGF0aDogdGhpcy5lbGVtZW50LnBhdGgsCiAgICAgICAgbmFtZTogdGhpcy5lbGVtZW50Lm5hbWUKICAgICAgfSk7CgogICAgICBpZiAodGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5wdG1tTWFjaGluZSAhPSBudWxsKSB7CiAgICAgICAgdGhpcy5jbGVhck1hY2hpbmVSZWYoaWR4KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucHRtbVByb2Nlc3MgIT0gbnVsbCkgewogICAgICAgIHRoaXMuY2xlYXJQcm9jZXNzUmVmKGlkeCk7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5lbGVtZW50Lm1hcHBpbmdbaWR4XS5ydW5vbi5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBlbmRMaW5lQ29uID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbaWR4XS5ydW5vbltpXS5pZCArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW2lkeF0uaWQpOwoKICAgICAgICBpZiAoZW5kTGluZUNvbiAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW2lkeF0ucnVub25baV0uaWQgKyAnLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1tpZHhdLmlkKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuZWxlbWVudC5tYXBwaW5nLnNwbGljZShpZHgsIDEpOwogICAgfSwKICAgIGlzQ2hlY2tSdW5PbjogZnVuY3Rpb24gaXNDaGVja1J1bk9uKCkgewogICAgICBpZiAodGhpcy5pc2RlbGV0ZVJ1bk9uID09IHRydWUpIHsKICAgICAgICB0aGlzLmlzZGVsZXRlUnVuT24gPSBmYWxzZTsKICAgICAgICB0aGlzLnNlbGVjdERlbGVjdFJ1bk9uID0gW107CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc2RlbGV0ZVJ1bk9uID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIGRlbGV0ZVJ1bk9uOiBmdW5jdGlvbiBkZWxldGVSdW5PbigpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5pc2RlbGV0ZVJ1bk9uID09IHRydWUpIHsKICAgICAgICB0aGlzLnNlbGVjdERlbGVjdFJ1bk9uLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXM1LmVsZW1lbnQubWFwcGluZ1tfdGhpczUubWFwcGluZ1RhYl0ucnVub24ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGVsZW1lbnQuaWQgPT0gX3RoaXM1LmVsZW1lbnQubWFwcGluZ1tfdGhpczUubWFwcGluZ1RhYl0ucnVub25baV0uaWQpIHsKICAgICAgICAgICAgICB2YXIgZW5kTGluZSA9IF90aGlzNS4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKF90aGlzNS5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBfdGhpczUuZWxlbWVudC5tYXBwaW5nW190aGlzNS5tYXBwaW5nVGFiXS5ydW5vbltpXS5pZCArICctJyArIF90aGlzNS5lbGVtZW50Lm1hcHBpbmdbX3RoaXM1Lm1hcHBpbmdUYWJdLmlkKTsKCiAgICAgICAgICAgICAgaWYgKGVuZExpbmUgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICBfdGhpczUuZGVsZXRlTGluZShfdGhpczUuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgX3RoaXM1LmVsZW1lbnQubWFwcGluZ1tfdGhpczUubWFwcGluZ1RhYl0ucnVub25baV0uaWQgKyAnLScgKyBfdGhpczUuZWxlbWVudC5tYXBwaW5nW190aGlzNS5tYXBwaW5nVGFiXS5pZCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbiA9IHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub24uZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXM1LnNlbGVjdERlbGVjdFJ1bk9uLmluZGV4T2YoaXRlbSkgPCAwOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuaXNkZWxldGVSdW5PbiA9IGZhbHNlOwogICAgICAgIHRoaXMuc2VsZWN0RGVsZWN0UnVuT24gPSBbXTsKICAgICAgfQogICAgfSwKICAgIG9wZW5SdW5PbjogZnVuY3Rpb24gb3BlblJ1bk9uKGlkeCkgewogICAgICB0aGlzLnNlbFJ1bk9uID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRNYWNoaW5Qcm9jZXNzb3I7CgogICAgICBpZiAodGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLnNoYWxsICE9IG51bGwpIHsKICAgICAgICB2YXIgZW5kTGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5pZCArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQpOwoKICAgICAgICBpZiAoZW5kTGluZSA9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQcm9jZXNzb3JQYXRoKHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5zaGFsbCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmVkaXRSdW5Pbi5zaGFsbCA9IHsKICAgICAgICAgIG5hbWU6IHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5zaGFsbCwKICAgICAgICAgIHV1aWQ6IGVuZExpbmUKICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgZWRpdFJ1bk9uSXRlbTogZnVuY3Rpb24gZWRpdFJ1bk9uSXRlbShpZHgpIHsKICAgICAgdmFyIGVuZExpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUodGhpcy5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLnJ1bm9uW2lkeF0uaWQgKyAnLScgKyB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLmlkKTsKCiAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVkaXRSdW5Pbi5zaGFsbCA9PSBudWxsKSB7CiAgICAgICAgdGhpcy5kZWxldGVMaW5lKHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLmlkICsgJy0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCk7CiAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLnNoYWxsID0gbnVsbDsKICAgICAgfSBlbHNlIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCAmJiBlbmRMaW5lICE9IHRoaXMuZWRpdFJ1bk9uLnNoYWxsLnV1aWQpIHsKICAgICAgICAvL+q4sOyhtOq6vCDsgq3soJztlbTslbztlZzri6QgdnVleOyXkOyEnOuPhCDsgq3soJztlZjqs6AgbWFpbnZpZXfsl5DshJzrj4Qg7IKt7KCc7ZWY6rOgIAogICAgICAgIHRoaXMuZGVsZXRlTGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5pZCArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQpOwogICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5pZCArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQsIHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCwgdGhpcy5lZGl0UnVuT24uc2hhbGwudXVpZCk7CiAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLnNoYWxsID0gdGhpcy5lZGl0UnVuT24uc2hhbGwubmFtZTsKICAgICAgfSBlbHNlIGlmIChlbmRMaW5lID09IHVuZGVmaW5lZCAmJiB0aGlzLmVkaXRSdW5Pbi5zaGFsbCAhPSBudWxsICYmIHRoaXMuZWRpdFJ1bk9uLnNoYWxsLnV1aWQgIT0gbnVsbCkgewogICAgICAgIHRoaXMubmV3TGluZSh0aGlzLmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub25baWR4XS5pZCArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQsIHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCwgdGhpcy5lZGl0UnVuT24uc2hhbGwudXVpZCk7CiAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLnNoYWxsID0gdGhpcy5lZGl0UnVuT24uc2hhbGwubmFtZTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmVkaXRSdW5Pbi5zaGFsbCAhPSBudWxsICYmIGVuZExpbmUgPT0gdGhpcy5lZGl0UnVuT24ubWV0aG9kLnV1aWQgJiYgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5ydW5vbltpZHhdLnNoYWxsICE9IHRoaXMuZWRpdFJ1bk9uLnNoYWxsLm5hbWUpIHsKICAgICAgICB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLnJ1bm9uW2lkeF0uc2hhbGwgPSB0aGlzLmVkaXRSdW5Pbi5zaGFsbC5uYW1lOwogICAgICB9CgogICAgICB0aGlzLmNhbmNlbFJ1bk9uKCk7CiAgICB9LAogICAgY2FuY2VsUnVuT246IGZ1bmN0aW9uIGNhbmNlbFJ1bk9uKCkgewogICAgICB0aGlzLmVkaXRSdW5PbiA9IHsKICAgICAgICBzaGFsbDogbnVsbAogICAgICB9OwogICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKTsKICAgIH0sCiAgICBhZGRSdW5PbjogZnVuY3Rpb24gYWRkUnVuT24oKSB7CiAgICAgIHZhciByZXMgPSB0cnVlLAogICAgICAgICAgbiA9IDA7CgogICAgICB3aGlsZSAocmVzKSB7CiAgICAgICAgbisrOwogICAgICAgIHJlcyA9IHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0ucnVub24uc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IG47CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuZWRpdFJ1bk9uLmlkID0gbjsKCiAgICAgIGlmICh0aGlzLmVkaXRSdW5Pbi5zaGFsbCAhPSBudWxsKSB7CiAgICAgICAgdGhpcy5uZXdMaW5lKHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgbiArICctJyArIHRoaXMuZWxlbWVudC5tYXBwaW5nW3RoaXMubWFwcGluZ1RhYl0uaWQsIHRoaXMuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgdGhpcy5lbGVtZW50Lm1hcHBpbmdbdGhpcy5tYXBwaW5nVGFiXS5pZCwgdGhpcy5lZGl0UnVuT24uc2hhbGwudXVpZCk7CiAgICAgICAgdGhpcy5lZGl0UnVuT24uc2hhbGwgPSB0aGlzLmVkaXRSdW5Pbi5zaGFsbC5uYW1lOwogICAgICB9CgogICAgICB2YXIgYWRkT2JqID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5lZGl0UnVuT24pOwogICAgICB0aGlzLmVsZW1lbnQubWFwcGluZ1t0aGlzLm1hcHBpbmdUYWJdLnJ1bm9uLnB1c2goYWRkT2JqKTsKICAgICAgdGhpcy5jYW5jZWxSdW5PbigpOwogICAgfSwKICAgIHNldFJ1bk9uU2VsZWN0OiBmdW5jdGlvbiBzZXRSdW5PblNlbGVjdCgpIHsKICAgICAgaWYgKHRoaXMuaXNFZGl0aW5nUnVuT24gPT0gdHJ1ZSkgewogICAgICAgIGlmICh0aGlzLmVkaXRSdW5Pbi5zaGFsbCAhPSBudWxsICYmIHRoaXMuZWRpdFJ1bk9uLnNoYWxsLnV1aWQgIT0gbnVsbCkgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXREZXRhaWxWaWV3JywgewogICAgICAgICAgICB1dWlkOiB0aGlzLmVkaXRSdW5Pbi5zaGFsbC51dWlkLAogICAgICAgICAgICBlbGVtZW50OiBjb25zdGFudC5NYWNoaW5lX3N0cgogICAgICAgICAgfSk7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVkaXRSdW5Pbi5zaGFsbC51dWlkICsgdGhpcy5sb2NhdGlvbikuc2Nyb2xsSW50b1ZpZXcoewogICAgICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCcsCiAgICAgICAgICAgIGJsb2NrOiAnc3RhcnQnCiAgICAgICAgICB9KTsKICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdhY3RpdmUtZWxlbWVudCcsIHRoaXMuZWRpdFJ1bk9uLnNoYWxsLnV1aWQpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5zZXRFdmVudExpc3QoKTsKICAgICAgICB0aGlzLmlzRWRpdGluZ1J1bk9uID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc0VkaXRpbmdSdW5PbiA9IHRydWU7CiAgICAgIH0KICAgIH0sCiAgICBzZXRFdmVudExpc3Q6IGZ1bmN0aW9uIHNldEV2ZW50TGlzdCgpIHsKICAgICAgdGhpcy5zZWxSdW5PbiA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TWFjaGluUHJvY2Vzc29yOwogICAgICB0aGlzLnNldGFjdGl2ZVVVSUQoKTsKICAgIH0sCiAgICBjbGVhclJ1bk9uOiBmdW5jdGlvbiBjbGVhclJ1bk9uKCkgewogICAgICB0aGlzLmlzRWRpdGluZ1J1bk9uID0gdHJ1ZTsKICAgICAgdGhpcy5lZGl0UnVuT24uc2hhbGwgPSBudWxsOwogICAgfSwKICAgIHNldGFjdGl2ZVVVSUQ6IGZ1bmN0aW9uIHNldGFjdGl2ZVVVSUQoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0dXVpZCcsIHsKICAgICAgICB1dWlkOiB0aGlzLmVsZW1lbnQudXVpZAogICAgICB9KTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdlZGl0UHJvdG9NYWNoaW5lTWFwcGluZycsIHsKICAgICAgICBjb21wbzogInoiLAogICAgICAgIHV1aWQ6IHRoaXMuZWxlbWVudC51dWlkLAogICAgICAgIHppbmRleDogMTAKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlTGluZTogZnVuY3Rpb24gZGVsZXRlTGluZShmaW5lTGluZSkgewogICAgICB2YXIgbGluZW51bSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Y29ubmVjdExpbmVOdW0oZmluZUxpbmUpOwoKICAgICAgaWYgKGxpbmVudW0gIT0gLTEpIHsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZGVsZXRlLWxpbmUnLCBsaW5lbnVtKTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2RlbGV0Q29ubmVjdGlvbmxpbmUnLCB7CiAgICAgICAgICBzdGFydG51bTogbGluZW51bQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgbmV3TGluZTogZnVuY3Rpb24gbmV3TGluZShzdGFydExpbmUsIGRyYXdMaW5lLCBlbmRMaW5lKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0Q29ubmVjdGlvbmxpbmUnLCB7CiAgICAgICAgc3RhcnQ6IHN0YXJ0TGluZSwKICAgICAgICBlbmQ6IGVuZExpbmUKICAgICAgfSk7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCduZXctbGluZScsIGRyYXdMaW5lLCBlbmRMaW5lKTsKICAgIH0sCiAgICB2aWV3QVJYTUw6IGZ1bmN0aW9uIHZpZXdBUlhNTCgpIHsKICAgICAgdGhpcy5lZGl0QVJYTUwubmFtZSA9IHRoaXMuZWxlbWVudC5uYW1lOwogICAgICB0aGlzLmVkaXRBUlhNTC5tYXBwaW5nID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmVsZW1lbnQubWFwcGluZykpOwogICAgICB0aGlzLmRpYWxvZ1RleHQgPSB0cnVlOwogICAgfSwKICAgIHNhdmVBUlhNTDogZnVuY3Rpb24gc2F2ZUFSWE1MKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmVsZW1lbnQubmFtZSAhPSB0aGlzLmVkaXRBUlhNTC5uYW1lKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdlZGl0UHJvdG9NYWNoaW5lTWFwcGluZycsIHsKICAgICAgICAgIGNvbXBvOiAiTmFtZSIsCiAgICAgICAgICB1dWlkOiB0aGlzLmVsZW1lbnQudXVpZCwKICAgICAgICAgIG5hbWU6IHRoaXMuZWRpdEFSWE1MLm5hbWUKICAgICAgICB9KTsKCiAgICAgICAgaWYgKHRoaXMuZWRpdEFSWE1MLm5hbWUgIT0gJycpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaXNpbnRvRXJyb3JMaXN0JywgewogICAgICAgICAgICB1dWlkOiB0aGlzLmVsZW1lbnQudXVpZCwKICAgICAgICAgICAgbmFtZTogdGhpcy5lZGl0QVJYTUwubmFtZSwKICAgICAgICAgICAgcGF0aDogdGhpcy5lbGVtZW50LnBhdGgKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5lbGVtZW50Lm5hbWUgPSB0aGlzLmVkaXRBUlhNTC5uYW1lOwogICAgICB2YXIgZW5kTGluZSA9IG51bGwsCiAgICAgICAgICBjaGFuZ0VuZExpbmUgPSBudWxsOwoKICAgICAgaWYgKHRoaXMuZWRpdEFSWE1MLm1hcHBpbmcubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuZWRpdEFSWE1MLm1hcHBpbmcuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgdmFyIGlzSGF2ZVRhYmxlID0gZmFsc2UsCiAgICAgICAgICAgICAgaWR4SGF2ZVRhYmxlID0gMDsKCiAgICAgICAgICBfdGhpczYuZWxlbWVudC5tYXBwaW5nLmZvckVhY2goZnVuY3Rpb24gKGVsZSwgZSkgewogICAgICAgICAgICBpZiAoZWxlLmlkID09IGl0ZW0uaWQpIHsKICAgICAgICAgICAgICBpc0hhdmVUYWJsZSA9IHRydWU7CiAgICAgICAgICAgICAgaWR4SGF2ZVRhYmxlID0gZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CgogICAgICAgICAgaWYgKGlzSGF2ZVRhYmxlKSB7CiAgICAgICAgICAgIGlmIChpdGVtLnB0bW1NYWNoaW5lICE9IF90aGlzNi5lbGVtZW50Lm1hcHBpbmdbaWR4SGF2ZVRhYmxlXS5wdG1tTWFjaGluZSkgewogICAgICAgICAgICAgIGVuZExpbmUgPSBfdGhpczYuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9tYWNoaW5lZnJvbXB0bW0tJyArIF90aGlzNi5lbGVtZW50Lm1hcHBpbmdbaWR4SGF2ZVRhYmxlXS5pZCk7CgogICAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgX3RoaXM2LmRlbGV0ZUxpbmUoX3RoaXM2LmVsZW1lbnQudXVpZCArICcvbWFjaGluZWZyb21wdG1tLScgKyBfdGhpczYuZWxlbWVudC5tYXBwaW5nW2lkeEhhdmVUYWJsZV0uaWQpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2hhbmdFbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQYXRoKGl0ZW0ucHRtbU1hY2hpbmUsIDApOwoKICAgICAgICAgICAgICBpZiAoY2hhbmdFbmRMaW5lICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIF90aGlzNi5uZXdMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgaXRlbS5pZCwgX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcHJvTWFwcGluZycsIGNoYW5nRW5kTGluZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXRlbS5wdG1tUHJvY2VzcyAhPSBfdGhpczYuZWxlbWVudC5tYXBwaW5nW2lkeEhhdmVUYWJsZV0ucHRtbVByb2Nlc3MpIHsKICAgICAgICAgICAgICBlbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldENoYW5nZUVuZExpbmUoX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcHJvY2Vzc2Zyb21wdG1tLScgKyBfdGhpczYuZWxlbWVudC5tYXBwaW5nW2lkeEhhdmVUYWJsZV0uaWQpOwoKICAgICAgICAgICAgICBpZiAoZW5kTGluZSAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3Byb2Nlc3Nmcm9tcHRtbS0nICsgX3RoaXM2LmVsZW1lbnQubWFwcGluZ1tpZHhIYXZlVGFibGVdLmlkKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNoYW5nRW5kTGluZSA9IF90aGlzNi4kc3RvcmUuZ2V0dGVycy5nZXRQcm9jZXNzUGF0aChpdGVtLnB0bW1Qcm9jZXNzKTsKCiAgICAgICAgICAgICAgaWYgKGNoYW5nRW5kTGluZSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBfdGhpczYubmV3TGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9wcm9jZXNzZnJvbXB0bW0tJyArIGl0ZW0uaWQsIF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3Byb01hcHBpbmcnLCBjaGFuZ0VuZExpbmUpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGl0ZW0ucnVub24ubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgIGl0ZW0ucnVub24uZm9yRWFjaChmdW5jdGlvbiAocnVuKSB7CiAgICAgICAgICAgICAgICB2YXIgaXNUYWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIF90aGlzNi5lbGVtZW50Lm1hcHBpbmdbaWR4SGF2ZVRhYmxlXS5ydW5vbi5mb3JFYWNoKGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgICAgICAgICAgaWYgKHJ1bi5pZCA9PSBlbGUuaWQgJiYgcnVuLnNoYWxsID09IGVsZS5zaGFsbCkgewogICAgICAgICAgICAgICAgICAgIGlzVGFibGUgPSB0cnVlOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAoIWlzVGFibGUpIHsKICAgICAgICAgICAgICAgICAgZW5kTGluZSA9IF90aGlzNi4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBydW4uaWQgKyAnLScgKyBpdGVtLmlkKTsKCiAgICAgICAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBydW4uaWQgKyAnLScgKyBpdGVtLmlkKTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgY2hhbmdFbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQcm9jZXNzb3JQYXRoKHJ1bi5zaGFsbCk7CgogICAgICAgICAgICAgICAgICBpZiAoY2hhbmdFbmRMaW5lICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczYubmV3TGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgcnVuLmlkICsgJy0nICsgaXRlbS5pZCwgX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIGl0ZW0uaWQsIGNoYW5nRW5kTGluZSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgX3RoaXM2LmVsZW1lbnQubWFwcGluZ1tpZHhIYXZlVGFibGVdLnJ1bm9uLmZvckVhY2goZnVuY3Rpb24gKGVsZSkgewogICAgICAgICAgICAgICAgdmFyIGlzVGFibGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGl0ZW0ucnVub24uZm9yRWFjaChmdW5jdGlvbiAoZWRpdCkgewogICAgICAgICAgICAgICAgICBpZiAoZWRpdC5pZCA9PSBlbGUuaWQpIHsKICAgICAgICAgICAgICAgICAgICBpc1RhYmxlID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKCFpc1RhYmxlKSB7CiAgICAgICAgICAgICAgICAgIGVuZExpbmUgPSBfdGhpczYuJHN0b3JlLmdldHRlcnMuZ2V0Q2hhbmdlRW5kTGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgZWxlLmlkICsgJy0nICsgaXRlbS5pZCk7CgogICAgICAgICAgICAgICAgICBpZiAoZW5kTGluZSAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczYuZGVsZXRlTGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgZWxlLmlkICsgJy0nICsgaXRlbS5pZCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBpZiAoX3RoaXM2LmVsZW1lbnQubWFwcGluZ1tpZHhIYXZlVGFibGVdLnJ1bm9uLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIF90aGlzNi5lbGVtZW50Lm1hcHBpbmdbaWR4SGF2ZVRhYmxlXS5ydW5vbi5mb3JFYWNoKGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgICAgICAgICAgZW5kTGluZSA9IF90aGlzNi4kc3RvcmUuZ2V0dGVycy5nZXRDaGFuZ2VFbmRMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBlbGUuaWQgKyAnLScgKyBpdGVtLmlkKTsKCiAgICAgICAgICAgICAgICAgIGlmIChlbmRMaW5lICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBlbGUuaWQgKyAnLScgKyBpdGVtLmlkKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoaXRlbS5wdG1tTWFjaGluZSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgY2hhbmdFbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQYXRoKGl0ZW0ucHRtbU1hY2hpbmUsIDApOwoKICAgICAgICAgICAgICBpZiAoY2hhbmdFbmRMaW5lICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIF90aGlzNi5uZXdMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgaXRlbS5pZCwgX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcHJvTWFwcGluZycsIGNoYW5nRW5kTGluZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXRlbS5wdG1tUHJvY2VzcyAhPSBudWxsKSB7CiAgICAgICAgICAgICAgY2hhbmdFbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldFByb2Nlc3NQYXRoKGl0ZW0ucHRtbVByb2Nlc3MpOwoKICAgICAgICAgICAgICBpZiAoY2hhbmdFbmRMaW5lICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIF90aGlzNi5uZXdMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3Byb2Nlc3Nmcm9tcHRtbS0nICsgaXRlbS5pZCwgX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcHJvTWFwcGluZycsIGNoYW5nRW5kTGluZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXRlbS5ydW5vbi5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgaXRlbS5ydW5vbi5mb3JFYWNoKGZ1bmN0aW9uIChydW4pIHsKICAgICAgICAgICAgICAgIGlmIChydW4uc2hhbGwgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICB2YXIgY2hhbmdFbmRMaW5lID0gX3RoaXM2LiRzdG9yZS5nZXR0ZXJzLmdldE1hY2hpbmVQcm9jZXNzb3JQYXRoKHJ1bi5zaGFsbCk7CgogICAgICAgICAgICAgICAgICBpZiAoY2hhbmdFbmRMaW5lICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczYubmV3TGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9ydW5Pbi0nICsgcnVuLmlkICsgJy0nICsgaXRlbS5pZCwgX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIGl0ZW0uaWQsIGNoYW5nRW5kTGluZSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMuZWxlbWVudC5tYXBwaW5nLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHZhciBpc0hhdmVUYWJsZSA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzNi5lZGl0QVJYTUwubWFwcGluZy5mb3JFYWNoKGZ1bmN0aW9uIChlZGl0KSB7CiAgICAgICAgICAgIGlmIChlZGl0LmlkID09IGl0ZW0uaWQpIHsKICAgICAgICAgICAgICBpc0hhdmVUYWJsZSA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwoKICAgICAgICAgIGlmICghaXNIYXZlVGFibGUpIHsKICAgICAgICAgICAgaWYgKGl0ZW0ucHRtbU1hY2hpbmUgIT0gbnVsbCkgewogICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL21hY2hpbmVmcm9tcHRtbS0nICsgaXRlbS5pZCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpdGVtLnB0bW1Qcm9jZXNzICE9IG51bGwpIHsKICAgICAgICAgICAgICBfdGhpczYuZGVsZXRlTGluZShfdGhpczYuZWxlbWVudC51dWlkICsgJy9wcm9jZXNzZnJvbXB0bW0tJyArIGl0ZW0uaWQpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXRlbS5ydW5vbi5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgaXRlbS5ydW5vbi5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zaGFsbCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3J1bk9uLScgKyBkYXRhLmlkICsgJy0nICsgaXRlbS5pZCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodGhpcy5lbGVtZW50Lm1hcHBpbmcubGVuZ3RoID4gMCkgewogICAgICAgICAgdGhpcy5lbGVtZW50Lm1hcHBpbmcuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBpZiAoaXRlbS5wdG1tTWFjaGluZSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgX3RoaXM2LmRlbGV0ZUxpbmUoX3RoaXM2LmVsZW1lbnQudXVpZCArICcvbWFjaGluZWZyb21wdG1tLScgKyBpdGVtLmlkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGl0ZW0ucHRtbVByb2Nlc3MgIT0gbnVsbCkgewogICAgICAgICAgICAgIF90aGlzNi5kZWxldGVMaW5lKF90aGlzNi5lbGVtZW50LnV1aWQgKyAnL3Byb2Nlc3Nmcm9tcHRtbS0nICsgaXRlbS5pZCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpdGVtLnJ1bm9uLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICBpdGVtLnJ1bm9uLmZvckVhY2goZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgIGlmIChkYXRhLnNoYWxsICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM2LmRlbGV0ZUxpbmUoX3RoaXM2LmVsZW1lbnQudXVpZCArICcvcnVuT24tJyArIGRhdGEuaWQgKyAnLScgKyBpdGVtLmlkKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLmVsZW1lbnQubWFwcGluZyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5lZGl0QVJYTUwubWFwcGluZykpOwogICAgICB0aGlzLmNhbmNlbEFSWE1MKCk7CiAgICB9LAogICAgY2FuY2VsQVJYTUw6IGZ1bmN0aW9uIGNhbmNlbEFSWE1MKCkgewogICAgICB0aGlzLmVkaXRBUlhNTCA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBtYXBwaW5nOiBbXQogICAgICB9OwogICAgICB0aGlzLmVkaXRUZXh0SXRlbSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBwdG1tTWFjaGluZTogbnVsbCwKICAgICAgICBwdG1tUHJvY2VzczogbnVsbCwKICAgICAgICBydW5vbjogW10sCiAgICAgICAgaWQ6ICcnCiAgICAgIH07CiAgICAgIHRoaXMuZWRpdFRleHRTaGFsbCA9IHsKICAgICAgICBzaGFsbDogbnVsbCwKICAgICAgICBpZDogJycKICAgICAgfTsKICAgICAgdGhpcy5kaWFsb2dUZXh0ID0gZmFsc2U7CiAgICB9LAogICAgbmV3VGV4dFRvTWFjaGluZTogZnVuY3Rpb24gbmV3VGV4dFRvTWFjaGluZSgpIHsKICAgICAgdGhpcy5lZGl0VGV4dEl0ZW0gPSB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcHRtbU1hY2hpbmU6IG51bGwsCiAgICAgICAgcHRtbVByb2Nlc3M6IG51bGwsCiAgICAgICAgcnVub246IFtdLAogICAgICAgIGlkOiAnJwogICAgICB9OwogICAgICB2YXIgcmVzID0gdHJ1ZSwKICAgICAgICAgIG4gPSAwOwoKICAgICAgd2hpbGUgKHJlcykgewogICAgICAgIHRoaXMuZWRpdFRleHRJdGVtLm5hbWUgPSAnUHJvY2Vzc1RvTWFjaGluZU1hcF8nICsgbisrOwogICAgICAgIHJlcyA9IHRoaXMuZWRpdEFSWE1MLm1hcHBpbmcuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IG47CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuZWRpdFRleHRJdGVtLmlkID0gbjsKICAgICAgdmFyIGFkZE9iaiA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZWRpdFRleHRJdGVtKTsKICAgICAgdGhpcy5lZGl0QVJYTUwubWFwcGluZy5wdXNoKGFkZE9iaik7CiAgICB9LAogICAgZGVsZXRUZXh0VG9NYWNoaW5lOiBmdW5jdGlvbiBkZWxldFRleHRUb01hY2hpbmUoaWR4KSB7CiAgICAgIHRoaXMuZWRpdEFSWE1MLm1hcHBpbmcuc3BsaWNlKGlkeCwgMSk7CiAgICB9LAogICAgbmV3VGV4dFNoYWxsOiBmdW5jdGlvbiBuZXdUZXh0U2hhbGwoaWR4TWFwcGluZykgewogICAgICB0aGlzLmVkaXRUZXh0U2hhbGwgPSB7CiAgICAgICAgc2hhbGw6IG51bGwsCiAgICAgICAgaWQ6ICcnCiAgICAgIH07CiAgICAgIHZhciByZXMgPSB0cnVlLAogICAgICAgICAgbiA9IDA7CgogICAgICB3aGlsZSAocmVzKSB7CiAgICAgICAgbisrOwogICAgICAgIHJlcyA9IHRoaXMuZWRpdEFSWE1MLm1hcHBpbmdbaWR4TWFwcGluZ10ucnVub24uc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IG47CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuZWRpdFRleHRTaGFsbC5pZCA9IG47CiAgICAgIHZhciBhZGRPYmogPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmVkaXRUZXh0U2hhbGwpOwogICAgICB0aGlzLmVkaXRBUlhNTC5tYXBwaW5nW2lkeE1hcHBpbmddLnJ1bm9uLnB1c2goYWRkT2JqKTsKICAgIH0sCiAgICBkZWxldFRleHRTaGFsbDogZnVuY3Rpb24gZGVsZXRUZXh0U2hhbGwoaWR4U2hhbGwsIGlkeE1hcHBpbmcpIHsKICAgICAgdGhpcy5lZGl0QVJYTUwubWFwcGluZ1tpZHhNYXBwaW5nXS5ydW5vbi5zcGxpY2UoaWR4U2hhbGwsIDEpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ProcessToMachine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showProcesstoMachineMappingset\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click=\"viewARXML\">\r\n                                <v-icon> mdi-format-text</v-icon>\r\n                            </v-btn>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-show=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputProcesstoMachineMappingsetName' outlined dense></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/proMapping'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showProMapping\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isProMappingOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Process To Machine Mappings\r\n                                    <v-btn v-if=\"isProMappingOpenClose\" @click=\"addProMapping()\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-plus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-show=\"isProMappingOpenClose\">\r\n                                    <v-tabs v-model='mappingTab' height=\"30px\" show-arrows @change=\"changeProMappingTab()\">\r\n                                        <v-tab v-for=\"(tab, idx) in element.mapping\" :key=\"idx\" @click=\"clickProMappingtab()\"> \r\n                                            {{tab.name}}\r\n                                            <v-btn text x-small @click=\"deleteProMapping(idx)\"><v-icon x-small>mdi-close</v-icon></v-btn></v-tab>\r\n                                    </v-tabs>\r\n                                    <v-tabs-items v-model=\"mappingTab\">\r\n                                        <v-tab-item v-for=\"(tab, idx) in element.mapping\" :key=\"idx\">\r\n                                            <v-card flat>\r\n                                                <v-card-text>\r\n                                                    <v-text-field v-model=\"tab.name\" :rules=\"rules.name\" label=\"Name\" @input=\"inputProMappingName(tab.name)\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                    <v-row style=\"height: 45px\">\r\n                                                        <v-col cols=\"10\">\r\n                                                            <v-text-field v-model=\"tab.ptmmMachine\" readonly @click=\"setMachineRefSelect()\" clearable @click:clear='clearMachineRef(idx)' label=\"Machine Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        </v-col>\r\n                                                        <v-col cols=\"2\">\r\n                                                            <v-menu>\r\n                                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/machinefromptmm-'+tab.id\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setMachineList()\">\r\n                                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                    </v-btn>\r\n                                                                </template>\r\n                                                                <v-list>\r\n                                                                    <v-list-item v-for=\"(item, i) in selMachine\" :key=\"i\" link @click=\"setMachine(item)\">\r\n                                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachine\" >\r\n                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                    </v-btn>\r\n                                                                </v-list>\r\n                                                            </v-menu>\r\n                                                        </v-col>\r\n                                                    </v-row>\r\n                                                    <v-row>\r\n                                                        <v-col cols=\"10\">\r\n                                                            <v-text-field v-model=\"tab.ptmmProcess\" readonly @click=\"setProcessRefSelect()\" clearable @click:clear='clearProcessRef(idx)' label=\"Process Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                        </v-col>\r\n                                                        <v-col cols=\"2\">\r\n                                                            <v-menu>\r\n                                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processfromptmm-'+tab.id\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                                    </v-btn>\r\n                                                                </template>\r\n                                                                <v-list>\r\n                                                                    <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcess(item)\">\r\n                                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                                    </v-list-item>\r\n                                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\" >\r\n                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                    </v-btn>\r\n                                                                </v-list>\r\n                                                            </v-menu>\r\n                                                        </v-col>\r\n                                                    </v-row>\r\n                                                    <v-card outlined class=\"mx-auto\">\r\n                                                        <div class=\"subtitle-2\" style=\"height:20px\" :id=\"element.uuid+'/runOn-'+tab.id\">\r\n                                                            <v-hover v-slot=\"{ hover }\">\r\n                                                                <v-btn text @click=\"showRunOn\" x-small color=\"indigo\">\r\n                                                                    <v-icon>{{ isRunOnOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                                                </v-btn>\r\n                                                            </v-hover>\r\n                                                            Shall Run On Refs\r\n                                                            <v-btn @click=\"isCheckRunOn\" text x-small color=\"indigo\" v-if=\"isRunOnOpenClose\">\r\n                                                                <v-icon>mdi-check</v-icon>\r\n                                                            </v-btn>\r\n                                                            <v-btn v-if=\"isRunOnOpenClose && isdeleteRunOn\" @click=\"deleteRunOn\" text x-small color=\"indigo\">\r\n                                                                <v-icon>mdi-minus</v-icon>\r\n                                                            </v-btn>\r\n                                                        </div>\r\n                                                        <v-card-text v-show=\"isRunOnOpenClose\">\r\n                                                            <v-data-table v-model=\"selectDelectRunOn\" :headers=\"headerRunOn\" :items=\"tab.runon\" :items-per-page='20'\r\n                                                                    :show-select=\"isdeleteRunOn\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                                                <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                                                    <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                                                </template>\r\n                                                                <template v-if=\"!isdeleteRunOn\" v-slot:body=\"{ items, headers }\">\r\n                                                                    <tbody>\r\n                                                                        <tr v-for=\"(item,num) in items\" :key=\"num\">\r\n                                                                            <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                                                <v-edit-dialog persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openRunOn(num)\" @cancel=\"editRunOnItem(num)\" @save=\"cancelRunOn()\" large >\r\n                                                                                    {{item[header.value]}}\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-model='editRunOn.shall' label='Shall Run On Reference' :items='selRunOn' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingRunOn\" clearable @click=\"setRunOnSelect()\" \r\n                                                                                            @click:clear='clearRunOn' @blur=\"isEditingRunOn=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <th colspan=\"3\">\r\n                                                                                <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addRunOn()\" @save=\"cancelRunOn\"> \r\n                                                                                    <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                                                    </v-btn>\r\n                                                                                    <template v-slot:input>\r\n                                                                                        <br>\r\n                                                                                        <v-autocomplete v-model='editRunOn.shall' label='Shall Run On Reference' :items='selRunOn' item-text='name' item-value=\"name\" class=\"lable-placeholer-color\"\r\n                                                                                            return-object :readonly=\"!isEditingRunOn\" clearable @click=\"setRunOnSelect()\" \r\n                                                                                            @click:clear='clearRunOn' @blur=\"isEditingRunOn=true\" outlined dense style=\"height: 45px;\">\r\n                                                                                        </v-autocomplete>\r\n                                                                                    </template>\r\n                                                                                </v-edit-dialog>\r\n                                                                            </th>\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                </template>\r\n                                                            </v-data-table>\r\n                                                        </v-card-text>\r\n                                                    </v-card>\r\n                                                </v-card-text>\r\n                                            </v-card>\r\n                                        </v-tab-item>\r\n                                    </v-tabs-items>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-show=\"(!iselementOpenClose && zoomvalue > $setZoominElement) || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n            <v-dialog v-model=\"dialogText\" persistent width=\"800\">\r\n                <v-card >\r\n                    <v-card-title class=\"text-h6 green accent-1\"> Edit Text </v-card-title>\r\n                    <v-card-text>\r\n                        <br>\r\n                        <v-row style=\"height: 30px;\">\r\n                            <label style=\"padding:10px;\">&#60;SHORT-NAME&#62;</label>\r\n                            <v-text-field v-model=\"editARXML.name\" placeholder=\"String\" style=\"height: 15px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                            <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                        </v-row>\r\n                        <v-row style=\"height: 50px;\">\r\n                            <label style=\"padding:10px;\">&#60;PROCESS-TO-MACHINE-MAPPINGS&#62;</label>\r\n                            <v-btn style=\"margin: 3px 0px 0px -10px\" @click=\"newTextToMachine()\" icon color=\"teal darken\" x-samll dark>\r\n                                <v-icon dense dark>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                        <div class=\"text-editDialog\" style=\"height: 400px;\">\r\n                            <v-row v-for=\"(item, i) in editARXML.mapping\" :key=\"i\" style=\"height: 280px;\">\r\n                                <div>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <v-btn style=\"margin: 15px -20px 0px 20px\" @click=\"deletTextToMachine(i)\" text x-small color=\"indigo\">\r\n                                            <v-icon>mdi-minus</v-icon>\r\n                                        </v-btn>\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 10px;\">&#60;PROCESS-TO-MACHINE-MAPPING&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;SHORT-NAME&#62;</label>\r\n                                        <v-text-field v-model=\"item.name\" placeholder=\"String\" style=\"width:400px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;SHORT-NAME&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 25px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;MACHINE-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.ptmmMachine\" placeholder=\"Path\"  class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;MACHINE-REF&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 15px;margin:0px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 80px;\">&#60;PROCESS-REF&#62;</label>\r\n                                        <v-text-field v-model=\"item.ptmmProcess\" placeholder=\"Path\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                        <label style=\"padding:10px;\">&#60;&#47;PROCESS-REF&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 50px;\">\r\n                                        <label style=\"padding:10px;margin-left:90px;\">&#60;SHALL-RUN-ON-REFS&#62;</label>\r\n                                        <v-btn @click=\"newTextShall(i)\" icon color=\"teal darken\" x-samll dark>\r\n                                            <v-icon dense dark>mdi-plus</v-icon>\r\n                                        </v-btn>\r\n                                    </v-row>\r\n                                    <div class=\"text-Inner-editDialog\" style=\"height: 120px;\">\r\n                                        <v-row v-for=\"(run, r) in item.runon\" :key=\"r\" style=\"height: 30px;\">\r\n                                            <div>\r\n                                                <br>\r\n                                                <v-row style=\"height: 25px;margin:0px;\">\r\n                                                    <v-btn style=\"margin: 13px -80px 0px 80px\" @click=\"deletTextShall(r,i)\" text x-small color=\"indigo\">\r\n                                                        <v-icon>mdi-minus</v-icon>\r\n                                                    </v-btn>\r\n                                                    <label style=\"padding:10px;margin:2px 0px 2px 70px;\"> &#60;SHALL-RUN-ON-REF&#62;</label>\r\n                                                    <v-text-field v-model=\"run.shall\" placeholder=\"Path\" style=\"width:300px;\" class=\"lable-placeholer-color\" dense></v-text-field>\r\n                                                    <label style=\"padding:10px;\">&#60;&#47;SHALL-RUN-ON-REF&#62;</label>\r\n                                                </v-row>\r\n                                            </div>\r\n                                        </v-row>\r\n                                    </div> \r\n                                    <v-row style=\"height: 30px;\">\r\n                                        <label style=\"padding:10px;margin:2px 0px 2px 90px;\">&#60;&#47;SHALL-RUN-ON-REFS&#62;</label>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 30px;margin:0px;\">\r\n                                            <label style=\"padding:10px;margin-left:55px;\">&#60;&#47;PROCESS-TO-MACHINE-MAPPING&#62;</label>\r\n                                    </v-row>\r\n                                </div>\r\n                            </v-row>\r\n                        </div>\r\n                        <v-row>\r\n                            <label style=\"padding:10px;\">&#60;&#47;PROCESS-TO-MACHINE-MAPPINGS&#62;</label>\r\n                        </v-row>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text  @click=\"saveARXML()\" >\r\n                            Save\r\n                        </v-btn>\r\n                        <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"green darken-1\" text @click=\"cancelARXML()\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n                if (this.zoomvalue  > this.$setZoominLineTitle && this.zoomvalue < this.$setZoominLineSetupStart) {\r\n                    EventBus.$emit('drawLineTitleBar', this.element.uuid, false)\r\n                } else if (this.zoomvalue > this.$setZoominLineSetupStart && this.zoomvalue < this.$setZoominLineSetupEnd) {\r\n                    this.$nextTick(() => {\r\n                        EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                        if(this.iselementOpenClose && this.location == 1) {\r\n                            if (this.isProMappingOpenClose) {\r\n                                EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)\r\n                            } else {\r\n                                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogText: false,\r\n            editARXML: {name:'', mapping: []},\r\n            editTextConfig: {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''},\r\n            editTextShall: { shall: null, id: ''},\r\n            isProMappingOpenClose: true,\r\n            isRunOnOpenClose: true,\r\n            selMachine: this.$store.getters.getMachine,\r\n            selProcess: this.$store.getters.getProcess,\r\n\r\n            mappingTab: null,\r\n            isdeleteRunOn: false,\r\n            selectDelectRunOn: [],\r\n            headerRunOn: [\r\n                { text: 'Shall Run On Ref', sortable: false, value: 'shall' },\r\n            ],\r\n            editRunOn: { shall: null, id: ''},\r\n            isEditingRunOn: true,\r\n            selRunOn: this.$store.getters.getMachinProcessor,\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showProcesstoMachineMappingset() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n                if(this.iselementOpenClose && this.location == 1) {\r\n                    if (this.isProMappingOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        showProMapping() {\r\n            this.isProMappingOpenClose = this.isProMappingOpenClose ? false : true\r\n            if(this.element.mapping.length > 0 && this.location == 1) {\r\n                this.$nextTick(() => {\r\n                    if(this.isProMappingOpenClose) {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)\r\n                    } else {\r\n                        EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        showRunOn() {\r\n            this.isRunOnOpenClose = this.isRunOnOpenClose ? false : true\r\n        },\r\n        inputProcesstoMachineMappingsetName() {\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            //this.$store.commit('changeNameExecutable', {uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        }, \r\n\r\n        clearMachineRef(idx) {\r\n            this.element.mapping[idx].ptmmMachine = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/machinefromptmm-' + this.element.mapping[idx].id)\r\n            }\r\n        },\r\n        setMachineRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getMachinePath(this.element.mapping[this.mappingTab].ptmmMachine, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setMachineList() {\r\n            this.selMachine = this.$store.getters.getMachine\r\n            this.setactiveUUID()\r\n        },\r\n        setMachine(item) {\r\n            console.log('/// '+ this.element.mapping[this.mappingTab].ptmmMachine)\r\n            if( this.element.mapping[this.mappingTab].ptmmMachine != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[this.mappingTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[this.mappingTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/machinefromptmm-'+this.element.mapping[this.mappingTab].id, item.uuid)\r\n                }\r\n                this.element.mapping[this.mappingTab].ptmmMachine = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newMachine() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementMachine', {\r\n                name: this.$store.getters.getNameMachine, path: '',\r\n                top: elementY, left: elementX, zindex: 10, machinedesign:null, timeout:'', hwelement:[], executable:null, admin: '',\r\n                functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.Machine_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        clearProcessRef(idx) {\r\n            this.element.mapping[idx].ptmmProcess = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[idx].id)\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[idx].id)\r\n            }\r\n        },\r\n        setProcessRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getProcessPath(this.element.mapping[this.mappingTab].ptmmProcess)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Process_str} )\r\n                document.getElementById(endLine+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                EventBus.$emit('active-element', endLine)\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        setProcess(item) {\r\n            if( this.element.mapping[this.mappingTab].ptmmProcess != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id)\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/processfromptmm-'+this.element.mapping[this.mappingTab].id, item.uuid)\r\n                this.element.mapping[this.mappingTab].ptmmProcess = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameProcess, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        addProMapping() {\r\n            const editItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            const addObj = new Object(editItem)\r\n            let res = true, n = 0\r\n\r\n            while (res) {\r\n                addObj.name = 'ProcessToMachineMap_' + n++;\r\n                res = this.element.mapping.some(ele => ele.name === addObj.name)\r\n            }\r\n            addObj.id = n\r\n            this.element.mapping.push(addObj)\r\n            this.mappingTab = this.element.mapping.length-1\r\n            if(this.location == 1) {\r\n                EventBus.$emit('changeLine-someipService', '', this.element.uuid, null)\r\n            }\r\n        },\r\n        clickProMappingtab() {\r\n            this.isdeleteRunOn = false\r\n            this.selectDelectRunOn = []\r\n        },\r\n        changeProMappingTab() {\r\n            if(this.element.mapping.length > 0 && this.location == 1 && this.mappingTab != undefined) {\r\n                setTimeout(() => {EventBus.$emit('changeLine-someipService', '', this.element.uuid, this.mappingTab, this.element.mapping[this.mappingTab].id)}, 300);\r\n            }\r\n        },\r\n        deleteProMapping(idx) {\r\n            this.$store.commit('deleteRefTable', {deleteName:'proMapping', deleteTab: true, tabName: this.element.mapping[idx].name, path: this.element.path, name: this.element.name})\r\n\r\n            if (this.element.mapping[this.mappingTab].ptmmMachine != null) {\r\n                this.clearMachineRef(idx)\r\n            }\r\n            if (this.element.mapping[this.mappingTab].ptmmProcess != null) {\r\n                this.clearProcessRef(idx)\r\n            }\r\n            for(let i=0; i<this.element.mapping[idx].runon.length; i++){\r\n                var endLineCon = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[idx].runon[i].id+'-'+this.element.mapping[idx].id)\r\n                if(endLineCon != undefined) {\r\n                    this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[idx].runon[i].id+'-'+this.element.mapping[idx].id)\r\n                }\r\n            }\r\n\r\n            this.element.mapping.splice(idx, 1)\r\n        },\r\n        isCheckRunOn() {\r\n            if (this.isdeleteRunOn == true) {\r\n                this.isdeleteRunOn = false\r\n                this.selectDelectRunOn = []\r\n            } else {\r\n                this.isdeleteRunOn = true\r\n            }\r\n        },\r\n        deleteRunOn() {\r\n            if (this.isdeleteRunOn == true) {\r\n                this.selectDelectRunOn.forEach(element => {\r\n                    for(let i=0; i<this.element.mapping[this.mappingTab].runon.length; i++){\r\n                        if (element.id == this.element.mapping[this.mappingTab].runon[i].id) {\r\n                            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[i].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                            if(endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[i].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                this.element.mapping[this.mappingTab].runon = this.element.mapping[this.mappingTab].runon.filter(item => {\r\n                        return this.selectDelectRunOn.indexOf(item) < 0 })\r\n\r\n                this.isdeleteRunOn = false\r\n                this.selectDelectRunOn = []\r\n            } \r\n        },\r\n        openRunOn(idx) { \r\n            this.selRunOn = this.$store.getters.getMachinProcessor\r\n\r\n            if ( this.element.mapping[this.mappingTab].runon[idx].shall != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getMachineProcessorPath(this.element.mapping[this.mappingTab].runon[idx].shall)\r\n                }\r\n                this.editRunOn.shall = { name: this.element.mapping[this.mappingTab].runon[idx].shall, uuid: endLine}\r\n            }\r\n        },\r\n        editRunOnItem(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n            if (endLine != undefined && this.editRunOn.shall == null) {\r\n                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = null\r\n            } else if (endLine != undefined && endLine != this.editRunOn.shall.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id)\r\n                this.newLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, this.editRunOn.shall.uuid)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            } else if (endLine == undefined && this.editRunOn.shall != null && this.editRunOn.shall.uuid != null) {\r\n                this.newLine(this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].runon[idx].id+'-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, this.editRunOn.shall.uuid)\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            } else if (this.editRunOn.shall != null && endLine == this.editRunOn.method.uuid && this.element.mapping[this.mappingTab].runon[idx].shall != this.editRunOn.shall.name) {\r\n                this.element.mapping[this.mappingTab].runon[idx].shall = this.editRunOn.shall.name\r\n            }\r\n\r\n            this.cancelRunOn()\r\n        },\r\n        cancelRunOn() {\r\n            this.editRunOn = {shall: null}\r\n            this.setactiveUUID()\r\n        },\r\n        addRunOn() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.mapping[this.mappingTab].runon.some(item => item.id === n)\r\n            }\r\n            this.editRunOn.id = n\r\n\r\n            if( this.editRunOn.shall != null) {\r\n                this.newLine(this.element.uuid+'/runOn-'+n+'-'+this.element.mapping[this.mappingTab].id, this.element.uuid+'/runOn-'+this.element.mapping[this.mappingTab].id, this.editRunOn.shall.uuid)\r\n                this.editRunOn.shall = this.editRunOn.shall.name\r\n            }\r\n\r\n            const addObj = Object.assign({}, this.editRunOn)\r\n            this.element.mapping[this.mappingTab].runon.push(addObj);\r\n            this.cancelRunOn()\r\n        },\r\n        setRunOnSelect() {\r\n            if (this.isEditingRunOn == true) {\r\n                if (this.editRunOn.shall != null && this.editRunOn.shall.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editRunOn.shall.uuid, element: constant.Machine_str} )\r\n                    document.getElementById(this.editRunOn.shall.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editRunOn.shall.uuid)\r\n                }\r\n                this.setEventList()\r\n                this.isEditingRunOn = false\r\n            } else {\r\n                this.isEditingRunOn = true\r\n            }\r\n        },\r\n        setEventList() {\r\n            this.selRunOn = this.$store.getters.getMachinProcessor\r\n            this.setactiveUUID()\r\n        },\r\n        clearRunOn() {\r\n            this.isEditingRunOn = true\r\n            this.editRunOn.shall = null\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n        viewARXML() {\r\n            this.editARXML.name = this.element.name\r\n            this.editARXML.mapping = JSON.parse(JSON.stringify(this.element.mapping))\r\n            this.dialogText= true\r\n        },\r\n        saveARXML() {\r\n            if (this.element.name != this.editARXML.name) {\r\n                this.$store.commit('editProtoMachineMapping', {compo:\"Name\", uuid:this.element.uuid, name:this.editARXML.name} )\r\n                if (this.editARXML.name != '') {\r\n                    this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.editARXML.name, path:this.element.path})\r\n                }\r\n            }\r\n            this.element.name = this.editARXML.name\r\n\r\n            var endLine = null, changEndLine = null\r\n            if (this.editARXML.mapping.length > 0) {\r\n                this.editARXML.mapping.forEach( item => {\r\n                    var isHaveTable = false, idxHaveTable = 0\r\n                    this.element.mapping.forEach((ele,e) => {\r\n                        if (ele.id == item.id) {\r\n                            isHaveTable = true\r\n                            idxHaveTable = e\r\n                        }\r\n                    })\r\n                    if (isHaveTable) {\r\n                        if (item.ptmmMachine != this.element.mapping[idxHaveTable].ptmmMachine) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/machinefromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getMachinePath(item.ptmmMachine, 0)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/machinefromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine)\r\n                            }\r\n                        }\r\n                        if (item.ptmmProcess != this.element.mapping[idxHaveTable].ptmmProcess) {\r\n                            endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            if (endLine != undefined) {\r\n                                this.deleteLine(this.element.uuid+'/processfromptmm-'+ this.element.mapping[idxHaveTable].id)\r\n                            }\r\n                            changEndLine = this.$store.getters.getProcessPath(item.ptmmProcess)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/processfromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine)\r\n                            }\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(run => {\r\n                                var isTable = false\r\n                                this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    if (run.id == ele.id && run.shall == ele.shall) {\r\n                                        isTable = true\r\n                                    }\r\n                                })\r\n                                if (!isTable) {\r\n                                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id)\r\n                                    if (endLine != undefined) {\r\n                                        this.deleteLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id)\r\n                                    }\r\n                                    changEndLine = this.$store.getters.getMachineProcessorPath(run.shall)\r\n                                    if (changEndLine != null) {\r\n                                        this.newLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id, this.element.uuid+'/runOn-'+item.id, changEndLine)\r\n                                    }\r\n                                }\r\n                            })\r\n                            this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    var isTable = false\r\n                                    item.runon.forEach(edit => {\r\n                                        if (edit.id == ele.id) {\r\n                                            isTable = true\r\n                                        }\r\n                                    })\r\n                                    if (!isTable) {\r\n                                        endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                        if (endLine != undefined) {\r\n                                            this.deleteLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                        }\r\n                                    }\r\n                                })\r\n                        } else {\r\n                            if (this.element.mapping[idxHaveTable].runon.length > 0) {\r\n                                this.element.mapping[idxHaveTable].runon.forEach(ele => {\r\n                                    endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                    if (endLine != undefined) {\r\n                                        this.deleteLine(this.element.uuid+'/runOn-'+ele.id+'-'+item.id)\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (item.ptmmMachine != null) {\r\n                            changEndLine = this.$store.getters.getMachinePath(item.ptmmMachine, 0)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/machinefromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine)\r\n                            }   \r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            changEndLine = this.$store.getters.getProcessPath(item.ptmmProcess)\r\n                            if (changEndLine != null) {\r\n                                this.newLine(this.element.uuid+'/processfromptmm-'+item.id, this.element.uuid+'/proMapping', changEndLine)\r\n                            }   \r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(run => {\r\n                                if (run.shall != null) {\r\n                                    var changEndLine = this.$store.getters.getMachineProcessorPath(run.shall)\r\n                                    if (changEndLine != null) {\r\n                                        this.newLine(this.element.uuid+'/runOn-'+run.id+'-'+item.id, this.element.uuid+'/runOn-'+item.id, changEndLine)\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n                this.element.mapping.forEach(item => {\r\n                    var isHaveTable = false\r\n                    this.editARXML.mapping.forEach(edit => {\r\n                        if (edit.id == item.id) {\r\n                            isHaveTable = true\r\n                        }\r\n                    })\r\n                    if (!isHaveTable) {\r\n                        if (item.ptmmMachine != null) {\r\n                            this.deleteLine(this.element.uuid+'/machinefromptmm-'+ item.id)\r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            this.deleteLine(this.element.uuid+'/processfromptmm-'+ item.id)\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(data => {\r\n                                if (data.shall != null) {\r\n                                    this.deleteLine(this.element.uuid+'/runOn-'+data.id+'-'+item.id)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                if (this.element.mapping.length > 0) {\r\n                    this.element.mapping.forEach(item => {\r\n                        if (item.ptmmMachine != null) {\r\n                            this.deleteLine(this.element.uuid+'/machinefromptmm-'+ item.id)\r\n                        }\r\n                        if (item.ptmmProcess != null) {\r\n                            this.deleteLine(this.element.uuid+'/processfromptmm-'+ item.id)\r\n                        }\r\n                        if (item.runon.length > 0) {\r\n                            item.runon.forEach(data => {\r\n                                if (data.shall != null) {\r\n                                    this.deleteLine(this.element.uuid+'/runOn-'+data.id+'-'+item.id)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            this.element.mapping = JSON.parse(JSON.stringify(this.editARXML.mapping))\r\n            this.cancelARXML()\r\n        },\r\n        cancelARXML() {\r\n            this.editARXML = {name:'', mapping: []}\r\n            this.editTextItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            this.editTextShall = { shall: null, id: ''}\r\n            this.dialogText = false\r\n        },\r\n        newTextToMachine() {\r\n            this.editTextItem = {name: '', ptmmMachine: null, ptmmProcess: null, runon: [], id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                this.editTextItem.name = 'ProcessToMachineMap_' + n++;\r\n                res = this.editARXML.mapping.some(item => item.id === n)\r\n            }\r\n            this.editTextItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextItem)\r\n            this.editARXML.mapping.push(addObj);\r\n        },\r\n        deletTextToMachine(idx) {\r\n            this.editARXML.mapping.splice(idx,1)\r\n        },\r\n        newTextShall(idxMapping) {\r\n            this.editTextShall = { shall: null, id: ''}\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.editARXML.mapping[idxMapping].runon.some(item => item.id === n)\r\n            }\r\n            this.editTextShall.id = n\r\n\r\n            const addObj = Object.assign({}, this.editTextShall)\r\n            this.editARXML.mapping[idxMapping].runon.push(addObj);\r\n        },\r\n        deletTextShall(idxShall, idxMapping) {\r\n            this.editARXML.mapping[idxMapping].runon.splice(idxShall,1)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}