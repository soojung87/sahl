{"remainingRequest":"D:\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\service\\src\\components\\navigatorbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\service\\src\\components\\navigatorbar.vue","mtime":1667543940208},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnLi4vbWFpbic7CmltcG9ydCBjb25zdGFudCBmcm9tICIuLi9zdG9yZS9jb25zdGFudHMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIFNBSExQcm9qZWN0OiBmdW5jdGlvbiBTQUhMUHJvamVjdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLlNBSExQcm9qZWN0OwogICAgfSwKICAgIG9wZW5Qcm9qZWN0SW5kZXg6IGZ1bmN0aW9uIG9wZW5Qcm9qZWN0SW5kZXgoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5vcGVuUHJvamVjdEluZGV4OwogICAgfSwKICAgIG5hdmlnYXRvckxpc3Q6IGZ1bmN0aW9uIG5hdmlnYXRvckxpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5uYXZpZ2F0b3JMaXN0OwogICAgfSwKICAgIGFjdGl2ZVVVSUQ6IGZ1bmN0aW9uIGFjdGl2ZVVVSUQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEOwogICAgfSwKICAgIGlzbWFrZVByb2plY3Q6IGZ1bmN0aW9uIGlzbWFrZVByb2plY3QoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5pc21ha2VQcm9qZWN0OwogICAgfSwKICAgIGVsZW1lbnRMZWZ0OiBmdW5jdGlvbiBlbGVtZW50TGVmdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVsZW1lbnRMZWZ0OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZVVVSUQ6IGZ1bmN0aW9uIGFjdGl2ZVVVSUQodmFsKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ2FjdGl2ZVVVSUQqKiogJysgdmFsKQogICAgICBpZiAodGhpcy5pc0NyZWF0RWxlbWVudE1haW4pIHsKICAgICAgICB0aGlzLmlzQ3JlYXRFbGVtZW50TWFpbiA9IGZhbHNlOwogICAgICAgIHRoaXMuYWN0aXZlbm9kZSA9IFtdOwogICAgICAgIHRoaXMuYWN0aXZlbm9kZS5wdXNoKHZhbCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jaGVja1ZhbGlkYXRpb24odmFsKTsKICAgICAgfQogICAgfSwKICAgIGlzbWFrZVByb2plY3Q6IGZ1bmN0aW9uIGlzbWFrZVByb2plY3QodmFsKSB7CiAgICAgIGlmICghdmFsKSB7CiAgICAgICAgdGhpcy5vcGVuSWRzID0gW107CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiB7CiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW2Z1bmN0aW9uICh2YWwpIHsKICAgICAgICAgIHJldHVybiAodmFsIHx8ICcnKS5sZW5ndGggPiAwOwogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIHNob3dNZW51OiBmYWxzZSwKICAgICAgeDogMCwKICAgICAgeTogMCwKICAgICAgb3Blbmxpc3Q6IHRydWUsCiAgICAgIGlzbWVudTogMCwKICAgICAgYWN0aXZlbm9kZTogW10sCiAgICAgIG9wZW5JZHM6IFtdLAogICAgICBkaWFsb2dEZWxldGVQcm9qZWN0OiBmYWxzZSwKICAgICAgc3RyRGVsZXRlOiBudWxsLAogICAgICBkZWxldEFjdGl2ZTogZmFsc2UsCiAgICAgIC8vIG1haW5pdmlld+yXkOyEnCBhY3RpdmXsi5ztgqjtm4Qg64uo7LaV7YKk66GcIGVsZW1lbnQgZGVsZXRl7ZWY66m0IGRlYWN0aXZl7ZWY66m07IScIGFjdGl2ZW5vZGXqsJLsnbQgbnVsbOuhnCDrsJTrgJwKICAgICAgcmVuYW1lOiB7CiAgICAgICAgaWQ6IDAsCiAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICBwYXJlbnQ6IG51bGwKICAgICAgfSwKICAgICAgaXNDcmVhdEVsZW1lbnRNYWluOiBmYWxzZSwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgbWVudUVsZW1lbnRpdGVtczogWy8vIHsgdGl0bGU6ICdSZW5hbWUnLCBtZW51QWN0aW9uOiBhY3Rpb24gPT4geyB0aGlzLnJlbmFtZUVsZW1lbnQoYWN0aW9uKSB9IH0sCiAgICAgIHsKICAgICAgICB0aXRsZTogJ0RlbGV0ZScsCiAgICAgICAgbWVudUFjdGlvbjogZnVuY3Rpb24gbWVudUFjdGlvbihhY3Rpb24pIHsKICAgICAgICAgIF90aGlzLmRlbGV0ZUVsZW1lbnQoYWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ0NvcHkgJiBQYXN0ZScsCiAgICAgICAgbWVudUFjdGlvbjogZnVuY3Rpb24gbWVudUFjdGlvbihhY3Rpb24pIHsKICAgICAgICAgIF90aGlzLmNvcHlFbGVtZW50KGFjdGlvbik7CiAgICAgICAgfQogICAgICB9XSwKICAgICAgbWVudUZpcnN0aXRlbXM6IFt7CiAgICAgICAgdGl0bGU6ICdOZXcnLAogICAgICAgIG1lbnVBY3Rpb246IGZ1bmN0aW9uIG1lbnVBY3Rpb24oYWN0aW9uKSB7CiAgICAgICAgICBfdGhpcy5uZXdHcm91cEVsZW1lbnQoYWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ09wZW4nLAogICAgICAgIG1lbnVBY3Rpb246IGZ1bmN0aW9uIG1lbnVBY3Rpb24oYWN0aW9uKSB7CiAgICAgICAgICBfdGhpcy5vcGVuRWxlbWVudChhY3Rpb24pOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAnQ2xvc2UnLAogICAgICAgIG1lbnVBY3Rpb246IGZ1bmN0aW9uIG1lbnVBY3Rpb24oYWN0aW9uKSB7CiAgICAgICAgICBfdGhpcy5jbG9zZUVsZW1lbnQoYWN0aW9uKTsKICAgICAgICB9CiAgICAgIH1dLAogICAgICBtZW51aXRlbXM6IFt7CiAgICAgICAgdGl0bGU6ICdOZXcnLAogICAgICAgIG1lbnVBY3Rpb246IGZ1bmN0aW9uIG1lbnVBY3Rpb24oYWN0aW9uKSB7CiAgICAgICAgICBfdGhpcy5uZXdFbGVtZW50KGFjdGlvbik7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICdPcGVuJywKICAgICAgICBtZW51QWN0aW9uOiBmdW5jdGlvbiBtZW51QWN0aW9uKGFjdGlvbikgewogICAgICAgICAgX3RoaXMub3BlbkVsZW1lbnQoYWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ0Nsb3NlJywKICAgICAgICBtZW51QWN0aW9uOiBmdW5jdGlvbiBtZW51QWN0aW9uKGFjdGlvbikgewogICAgICAgICAgX3RoaXMuY2xvc2VFbGVtZW50KGFjdGlvbik7CiAgICAgICAgfQogICAgICB9XSwKICAgICAgbWVudVByb2plY3RpdGVtczogW3sKICAgICAgICB0aXRsZTogJ09wZW4gQWxsJywKICAgICAgICBtZW51QWN0aW9uOiBmdW5jdGlvbiBtZW51QWN0aW9uKGFjdGlvbikgewogICAgICAgICAgX3RoaXMub3BlbkFsbChhY3Rpb24pOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAnQ2xvc2UgQWxsJywKICAgICAgICBtZW51QWN0aW9uOiBmdW5jdGlvbiBtZW51QWN0aW9uKGFjdGlvbikgewogICAgICAgICAgX3RoaXMuY2xvc2VBbGwoYWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ0RlbGV0ZSBQcm9qZWN0JywKICAgICAgICBtZW51QWN0aW9uOiBmdW5jdGlvbiBtZW51QWN0aW9uKGFjdGlvbikgewogICAgICAgICAgX3RoaXMuZGVsZXRlUHJvamVjdChhY3Rpb24pOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAnU2F2ZScsCiAgICAgICAgbWVudUFjdGlvbjogZnVuY3Rpb24gbWVudUFjdGlvbihhY3Rpb24pIHsKICAgICAgICAgIF90aGlzLnNhdmVFbGVtZW50KGFjdGlvbik7CiAgICAgICAgfQogICAgICB9XQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBFdmVudEJ1cy4kb24oJ2FkZC1lbGVtZW50JywgZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgaWYgKCFfdGhpczIub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0gPT09IGVsZW1lbnQ7CiAgICAgIH0pKSB7CiAgICAgICAgX3RoaXMyLm9wZW5JZHMucHVzaChlbGVtZW50KTsKICAgICAgfQogICAgfSk7CiAgICBFdmVudEJ1cy4kb24oJ2FjdGl2ZS1lbGVtZW50JywgZnVuY3Rpb24gKHV1aWQpIHsKICAgICAgaWYgKCFfdGhpczIuZGVsZXRBY3RpdmUpIHsKICAgICAgICBfdGhpczIuYWN0aXZlbm9kZSA9IFtdOwoKICAgICAgICBpZiAodXVpZCAhPSBudWxsKSB7CiAgICAgICAgICBfdGhpczIuYWN0aXZlbm9kZS5wdXNoKHV1aWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgICBFdmVudEJ1cy4kb24oJ25ldy1maWxlJywgZnVuY3Rpb24gKCkgewogICAgICBfdGhpczIubmV3RWxlbWVudCgpOwogICAgfSk7CiAgICBFdmVudEJ1cy4kb24oJ2RlbGV0ZS1maWxlJywgZnVuY3Rpb24gKCkgewogICAgICBfdGhpczIuaXNtZW51ID0gMjsKICAgICAgX3RoaXMyLmRlbGV0QWN0aXZlID0gdHJ1ZTsKCiAgICAgIF90aGlzMi5kZWxldGVFbGVtZW50KCk7CiAgICB9KTsKICAgIEV2ZW50QnVzLiRvbignZGVsZXRlLXByb2plY3QnLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzMi5pc21lbnUgPSAwOwoKICAgICAgX3RoaXMyLmRlbGV0ZVByb2plY3QoKTsKICAgIH0pOwogICAgRXZlbnRCdXMuJG9uKCdjb3B5LWZpbGUnLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzMi5jb3B5RWxlbWVudCgpOwogICAgfSk7CiAgICBFdmVudEJ1cy4kb24oJ29wZW5BbGwtTGlzdCcsIGZ1bmN0aW9uICh1dWlkKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvcGVuQWxsLUxpc3QnKTsKCiAgICAgIGlmICh1dWlkICE9IG51bGwpIHsKICAgICAgICBfdGhpczIuaXNMb2FkaW5nID0gdHJ1ZTsKCiAgICAgICAgX3RoaXMyLmFjdGl2ZW5vZGUucHVzaCh1dWlkKTsKICAgICAgfQoKICAgICAgX3RoaXMyLm9wZW5BbGwoKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgc2hvdzogZnVuY3Rpb24gc2hvdyhlLCBpc3Byb2plY3RtZW51KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSAhPSBudWxsIHx8IGlzcHJvamVjdG1lbnUgPT0gMCkgewogICAgICAgIHRoaXMuaXNtZW51ID0gMzsKCiAgICAgICAgaWYgKGlzcHJvamVjdG1lbnUgPT0gMCkgewogICAgICAgICAgdGhpcy5pc21lbnUgPSBpc3Byb2plY3RtZW51OwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdLmluZGV4T2YoJy0nKSAhPSAtMSkgewogICAgICAgICAgdGhpcy5pc21lbnUgPSAyOwogICAgICAgIH0gZWxzZSBpZiAoISh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuRGF0ZVR5cGVfc3RyIHx8IHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5TZXJ2aWNlX3N0ciB8fCB0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuQWRhcHRpdmVBcHBsaWNhdGlvbl9zdHIgfHwgdGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50Lk1hY2hpbmVzX3N0ciB8fCB0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUGxhdGZvcm1fc3RyIHx8IHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5QRVJfc3RyIHx8IHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5QSE1fc3RyIHx8IHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5OTV9zdHIgfHwgdGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkxvZ19zdHIgfHwgdGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LklBTV9zdHIgfHwgdGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlVDTV9zdHIpKSB7CiAgICAgICAgICB0aGlzLmlzbWVudSA9IGlzcHJvamVjdG1lbnU7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnNob3dNZW51ID0gZmFsc2U7CiAgICAgICAgdGhpcy54ID0gZS5jbGllbnRYOwogICAgICAgIHRoaXMueSA9IGUuY2xpZW50WTsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuc2hvd01lbnUgPSB0cnVlOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgb3Blbk5vZGU6IGZ1bmN0aW9uIG9wZW5Ob2RlKCkgey8vYWxlcnQodGhpcy5vcGVuSWRzKQogICAgfSwKICAgIG5ld0VsZW1lbnQ6IGZ1bmN0aW9uIG5ld0VsZW1lbnQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSAhPSBudWxsICYmIHRoaXMuYWN0aXZlbm9kZVswXS5pbmRleE9mKCctJykgPT09IC0xKSB7CiAgICAgICAgdGhpcy5pc0NyZWF0RWxlbWVudE1haW4gPSB0cnVlOwogICAgICAgIHZhciBlbGVtZW50WCA9IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFggKyB0aGlzLiRzdG9yZS5zdGF0ZS5lbGVtZW50TGVmdDsgLy8tNTUwLy9BcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IC01NTApLy9BcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMCkpIAogICAgICAgIC8vY29uc3QgZWxlbWVudFkgPSAtNTAvL0FycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gLTUwKS8vQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MDApKQoKICAgICAgICBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkNvbXB1TWV0aG9kX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50Q29tcHVNZWh0b2QnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUNvbXB1TWV0aG9kLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBjYXRlZ29yeTogJycsCiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6ICcnLAogICAgICAgICAgICBzY2FsZXM6IFtdLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkRhdGFDb25zdHJfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnREYXRhQ29uc3RyJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVEYXRhQ29uc3RyLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBsb3dlcmxpbWl0OiAnJywKICAgICAgICAgICAgdXBwZXJsaW1pdDogJycsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuU1dCYXNlVHlwZV9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFNXQmFzZVR5cGUnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVNXQmFzZVR5cGUsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGNhdGVnb3J5OiAnJywKICAgICAgICAgICAgZW5jb2Rpbmc6ICcnLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkFwcGxpY2F0aW9uQXJyYXlfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRBcHBsaWNhdGlvbkFycmF5JywgewogICAgICAgICAgICAvLyBlbGVoYW5kbGluZywgZWxlc2VtYW50aWNzIOuKlCBzZWxlY3TrnbzshJwg7LSI6riw6rCS7J20IG51bGzsnbTri6QuCiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUFwcGxpY2F0aW9uQXJyYXksCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgY2F0ZWdvcnk6ICcnLAogICAgICAgICAgICBkeW5hbWljQXJyeVNpemU6ICcnLAogICAgICAgICAgICBlbGVuYW1lOiAnJywKICAgICAgICAgICAgZWxlaGFuZGxpbmc6IG51bGwsCiAgICAgICAgICAgIGVsZXNlbWFudGljczogbnVsbCwKICAgICAgICAgICAgZWxlbWF4bnVtYmVyOiAnJwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuSW1wbGVtZW50YXRpb25fc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRJbXBsZW1lbnRhdGlvbicsIHsKICAgICAgICAgICAgLy90eXBlcmVmLCB0ZW1wbGF0ZXR5cGUgIOuKlCBudWxs7ZW07KSY7JW87ZWc64ukLiBjbGVhcmFibGXtlZjrqbQg6rCS7J20IG51bGzrs4DtlZjquLAg65WM66y47JeQIAogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVJbXBsZW1lbnRhdGlvbiwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBjYXRlZ29yeTogJycsCiAgICAgICAgICAgIG5hbWVzcGFjZTogJycsCiAgICAgICAgICAgIGFycmF5c2l6ZTogJycsCiAgICAgICAgICAgIHR5cGVlbWl0dGVyOiAnJywKICAgICAgICAgICAgdHlwZXJlZjogbnVsbCwKICAgICAgICAgICAgdGVtcGxhdGV0eXBlOiBbXSwKICAgICAgICAgICAgZGVzYzogJycsCiAgICAgICAgICAgIHRyYWNlTmFtZTogJycsCiAgICAgICAgICAgIHRyYWNlOiBbXSwKICAgICAgICAgICAgZGRwYzogW10sCiAgICAgICAgICAgIGlkdGVsZW1lbnQ6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5NYWNoaW5lX3N0cikgewogICAgICAgICAgLyp2YXIgbmFtZU1hY2hpbmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVNYWNoaW5lDQogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TW9kZURlY2xhcmF0aW9uR3JvdXAnLCB7DQogICAgICAgICAgICAgIG5hbWU6IG5hbWVNYWNoaW5lKydfTWFjaGluZVN0YXRlX01vZGVEZWNsYXJhdGlvbkdyb3VwJywgcGF0aDogJycsIGlzVmlzaWJsZSA6IGZhbHNlLA0KICAgICAgICAgICAgICB0b3A6IEFycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwMCkpLCBsZWZ0OiBBcnJheS5mcm9tKHtsZW5ndGg6NH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwMDApKSwgDQogICAgICAgICAgICAgIHppbmRleDogMTAsIG1vZGVkZWNsYXJhdGlvbjpbe25hbWU6ICdPZmYnLCB2YWx1ZTogJyd9LHtuYW1lOiAnU3RhcnR1cCcsIFZhbHVlOiAnJ30se25hbWU6ICdSdW5uaW5nJywgVmFsdWU6ICcnfSx7bmFtZTogJ1NodXRkb3duJywgVmFsdWU6ICcnfV0sIGluaXRtb2RlOidPZmYnLCBpY29uOiJtZGktY2xpcGJvYXJkLW91dGxpbmUiLCB2YWxpZGF0aW9uOiBmYWxzZQ0KICAgICAgICAgIH0pDQogICAgICAgICAgaWYoIXRoaXMub3Blbklkcy5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gY29uc3RhbnQuTW9kZURlY2xhcmF0aW9uR3JvdXBfc3RyKSl7DQogICAgICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50Lk1vZGVEZWNsYXJhdGlvbkdyb3VwX3N0cikNCiAgICAgICAgICB9DQogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TWFjaGluZScsIHsNCiAgICAgICAgICAgICAgbmFtZTogbmFtZU1hY2hpbmUsIHBhdGg6ICcnLCBpc1Zpc2libGUgOiBmYWxzZSwNCiAgICAgICAgICAgICAgdG9wOiBlbGVtZW50WSwgbGVmdDogZWxlbWVudFgsIHppbmRleDogMTAsIGljb246Im1kaS1jbGlwYm9hcmQtb3V0bGluZSIsIHZhbGlkYXRpb246IGZhbHNlLA0KICAgICAgICAgICAgICBtYWNoaW5lZGVzaWduOm51bGwsIGVudGVyVGltZW91dDonJywgZXhpdFRpbWVvdXQ6JycsIGh3ZWxlbWVudDpbXSwgZXhlY3V0YWJsZTpudWxsLCBhZG1pbjogJycsDQogICAgICAgICAgICAgIGZ1bmN0aW9uZ3JvdXA6W3tuYW1lOidNYWNoaW5lU3RhdGUnLCB0eXBlOicvJytuYW1lTWFjaGluZSsnX01hY2hpbmVTdGF0ZV9Nb2RlRGVjbGFyYXRpb25Hcm91cCd9XSwgZW52aXJvbjogW10sIHByb2Nlc3NvcjogW10sIG1vZHVsZWluc3RhbnQ6IFtdLCB1Y206IFtdLCBpYW06IFtdLCBjcnlwdG86IFtdDQogICAgICAgICAgfSkqLwogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TWFjaGluZScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lTWFjaGluZSwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBtYWNoaW5lZGVzaWduOiBudWxsLAogICAgICAgICAgICBlbnRlclRpbWVvdXQ6ICcnLAogICAgICAgICAgICBleGl0VGltZW91dDogJycsCiAgICAgICAgICAgIGh3ZWxlbWVudDogW10sCiAgICAgICAgICAgIGV4ZWN1dGFibGU6IG51bGwsCiAgICAgICAgICAgIGFkbWluOiAnJywKICAgICAgICAgICAgZnVuY3Rpb25ncm91cDogW10sCiAgICAgICAgICAgIGVudmlyb246IFtdLAogICAgICAgICAgICBwcm9jZXNzb3I6IFtdLAogICAgICAgICAgICBtb2R1bGVpbnN0YW50OiBbXSwKICAgICAgICAgICAgdWNtOiBbXSwKICAgICAgICAgICAgaWFtOiBbXSwKICAgICAgICAgICAgY3J5cHRvOiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuTWFjaGluZURlc2lnbmVfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNYWNoaW5lRGVzaWduJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVNYWNoaW5lRGVzaWduLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBhY2Nlc3M6IG51bGwsCiAgICAgICAgICAgIHJlc2V0dGltZXI6ICcnLAogICAgICAgICAgICBjb25uZWN0b3I6IFtdLAogICAgICAgICAgICBzZXJ2aWNlZGlzY292ZXI6IFtdLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50Lk1vZGVEZWNsYXJhdGlvbkdyb3VwX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TW9kZURlY2xhcmF0aW9uR3JvdXAnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1vZGVEZWNsYXJhdGlvbkdyb3VwLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBtb2RlZGVjbGFyYXRpb246IFt7CiAgICAgICAgICAgICAgbmFtZTogJ09mZicsCiAgICAgICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgICAgIGlkOiAwCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBuYW1lOiAnU3RhcnR1cCcsCiAgICAgICAgICAgICAgVmFsdWU6ICcnLAogICAgICAgICAgICAgIGlkOiAxCiAgICAgICAgICAgIH1dLAogICAgICAgICAgICBpbml0bW9kZTogJ09mZicsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuSFdFbGVtZW50X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50SFdFbGVtZW50JywgewogICAgICAgICAgICAvL2NhdGVnb3J5IOuKlCBudWxs7ZW07KSY7JW87ZWc64ukLiBjbGVhcmFibGXtlZjrqbQg6rCS7J20IG51bGzrs4DtlZjquLAg65WM66y47JeQIAogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVIV0VsZW1lbnQsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGNhdGVnb3J5OiBudWxsLAogICAgICAgICAgICBhdHRyaWJ1dGU6IFtdLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkhXQ2F0ZWdvcnlfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRIV0NhdGVnb3J5JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVIV0NhdGVnb3J5LAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGF0dHJpYnV0ZTogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkV0aGVybmV0Q2x1c3Rlcl9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEV0aGVybmV0Q2x1c3RlcicsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lRXRoZXJuZXRDbHVzdGVyLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBjb25kaXRpb25hbDogW10sCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUHJvY2Vzc3RvTWFjaGluZU1hcHBpbmdfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRQcm90b01hY2hpbmVNYXBwaW5nJywgewogICAgICAgICAgICAvL3B0bW1NYWNoaW5lLCBwdG1tUHJvY2VzcyAg64qUIG51bGztlbTspJjslbztlZzri6QuIGNsZWFyYWJsZe2VmOuptCDqsJLsnbQgbnVsbOuzgO2VmOq4sCDrlYzrrLjsl5AgCiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVByb2Nlc3N0b01hY2hpbmVNYXBwaW5nLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIG1hcHBpbmc6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5TV0NvbXBvbmVudHNfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRTV0NvbXBvbmVudHMnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVNXQ29tcG9uZW50cywKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBwcG9ydDogW10sCiAgICAgICAgICAgIHJwb3J0OiBbXSwKICAgICAgICAgICAgcHJwb3J0OiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUHJvY2Vzc19zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFByb2Nlc3MnLCB7CiAgICAgICAgICAgIC8vcHJvZGVzaWduLCBkZXRlcm1pbiwgZXhlY3V0LCBtYWNoaW5ldHlwZSAg64qUIG51bGztlbTspJjslbztlZzri6QuIGNsZWFyYWJsZe2VmOuptCDqsJLsnbQgbnVsbOuzgO2VmOq4sCDrlYzrrLjsl5AgCiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVByb2Nlc3MsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgbG9nTGV2ZWw6IG51bGwsCiAgICAgICAgICAgIGxvZ1BhdGg6ICcnLAogICAgICAgICAgICBsb2dQcm9EZXNjOiAnJywKICAgICAgICAgICAgbG9nUHJvSUQ6ICcnLAogICAgICAgICAgICByZXN0YXJ0OiAnJywKICAgICAgICAgICAgcHJlTWFwcGluZzogbnVsbCwKICAgICAgICAgICAgbG9nTW9kZTogW10sCiAgICAgICAgICAgIHByb2Rlc2lnbjogbnVsbCwKICAgICAgICAgICAgZGV0ZXJtaW46IG51bGwsCiAgICAgICAgICAgIGV4ZWN1dDogbnVsbCwKICAgICAgICAgICAgbWFjaGlubmFtZTogJycsCiAgICAgICAgICAgIG1hY2hpbmV0eXBlOiBudWxsLAogICAgICAgICAgICBkZXBlbmRlbnQ6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5Qcm9jZXNzRGVzaWduX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UHJvY2Vzc0Rlc2lnbicsIHsKICAgICAgICAgICAgLy9leGVjdXRhYmxlcmVmIOuKlCBudWxs7ZW07KSY7JW87ZWc64ukLiBjbGVhcmFibGXtlZjrqbQg6rCS7J20IG51bGzrs4DtlZjquLAg65WM66y47JeQIAogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQcm9jZXNzRGVzaWduLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGV4ZWN1dGFibGVyZWY6IG51bGwsCiAgICAgICAgICAgIGRldGVybWluOiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuRXhlY3V0YWJsZV9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEV4ZWN1dGFibGUnLCB7CiAgICAgICAgICAgIC8vYXBwbGljYXRpb250eXBlcmVmIOuKlCBudWxs7ZW07KSY7JW87ZWc64ukLiBjbGVhcmFibGXtlZjrqbQg6rCS7J20IG51bGzrs4DtlZjquLAg65WM66y47JeQIAogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVFeGVjdXRhYmxlLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHZlcnNpb246ICcnLAogICAgICAgICAgICBjYXRlZ29yeTogJycsCiAgICAgICAgICAgIGJ1aWxkVHlwZTogbnVsbCwKICAgICAgICAgICAgbG9nZ2luZ0JlaGFiaW9yOiBudWxsLAogICAgICAgICAgICByZXBvcnRpbmdCZWhhYmlvcjogbnVsbCwKICAgICAgICAgICAgc3duYW1lOiAnJywKICAgICAgICAgICAgYXBwbGljYXRpb250eXBlcmVmOiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5TdGFydHVwQ29uZmlnX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U3RhcnR1cENvbmZpZycsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU3RhcnR1cENvbmZpZywKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBjb25maWc6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5EZXRlcm1pbmlzdGljQ2xpZW50X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50RGV0ZXJtaW5pc3RpY0NsaWVuJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVEZXRlcm1pbmlzdGljQ2xpZW50LAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGN5Y2xldGllbTogJycsCiAgICAgICAgICAgIG51bW9md29ya2VyczogJycKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlNvbWVJUFNlcnZpY2VJbnRlcmZhY2VEZXBsb3ltZW50X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U29tZUlQU2VydmljZScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU29tZUlQU2VydmljZSwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBzZXJ2aWNlOiBudWxsLAogICAgICAgICAgICBtYWp2ZXJzaW9uOiAnJywKICAgICAgICAgICAgbWludmVyc2lvbjogJycsCiAgICAgICAgICAgIGlkOiAnJywKICAgICAgICAgICAgZXZlbnRHOiBbXSwKICAgICAgICAgICAgZXZlbnREOiBbXSwKICAgICAgICAgICAgbWV0aG9kRDogW10sCiAgICAgICAgICAgIGZpZWxkRDogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlNlcnZpY2VJbnRlcmZhY2Vfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRTZXJ2aWNlJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVTZXJ2aWNlSW50ZXJmYWNlLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHZlcnNpb25NYWo6ICcnLAogICAgICAgICAgICB2ZXJzaW9uTWluOiAnJywKICAgICAgICAgICAgbmFtZXNwYWNlOiAnJywKICAgICAgICAgICAgZXZlbnRzOiBbXSwKICAgICAgICAgICAgZmllbGRzOiBbXSwKICAgICAgICAgICAgbWV0aG9kczogW10sCiAgICAgICAgICAgIGlzc2VydmljZTogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuQ2xpZW50X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50Q2xpZW50JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVDbGllbnQsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgcmV0cnlkZWxheTogJycsCiAgICAgICAgICAgIHJldHJ5bWF4OiAnJywKICAgICAgICAgICAgdGltZXRvbGl2ZTogJycsCiAgICAgICAgICAgIGRlbGF5bWF4OiAnJywKICAgICAgICAgICAgZGVsYXltaW46ICcnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5TZXJ2ZXJfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRTZXJ2ZXInLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVNlcnZlciwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBkZWxheW1heDogJycsCiAgICAgICAgICAgIGRlbGF5bWluOiAnJwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuU29tZUlQQ2xpZW50X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U29tZUlQQ2xpZW50JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVTb21lSVBDbGllbnQsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgZmluZHRpbWU6ICcnLAogICAgICAgICAgICBpbmlkZWxheW1heDogJycsCiAgICAgICAgICAgIGluaWRlbGF5bWluOiAnJywKICAgICAgICAgICAgaW5pYmFzZWRlbGF5OiAnJywKICAgICAgICAgICAgaW5pcmVwZXRpbWF4OiAnJwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuU29tZUlQU2VydmVyX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U29tZUlQU2VydmVyJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVTb21lSVBTZXJ2ZXIsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgaW5pZGVsYXltYXg6ICcnLAogICAgICAgICAgICBpbmlkZWxheW1pbjogJycsCiAgICAgICAgICAgIGluaWJhc2VkZWxheTogJycsCiAgICAgICAgICAgIGluaXJlcGV0aW1heDogJycsCiAgICAgICAgICAgIGRlbGF5bWF4OiAnJywKICAgICAgICAgICAgZGVsYXltaW46ICcnLAogICAgICAgICAgICBvZmZlcjogJycsCiAgICAgICAgICAgIHRpbWV0b2xpdmU6ICcnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5Tb21lSVBUb01hY2hpbmVNYXBwaW5nX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U29tZUlQdG9NYWNoaW5lJywgewogICAgICAgICAgICAvL2NjcmVmLCBzaXJlZiAg64qUIG51bGztlbTspJjslbztlZzri6QuIGNsZWFyYWJsZe2VmOuptCDqsJLsnbQgbnVsbOuzgO2VmOq4sCDrlYzrrLjsl5AgCiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVNvbWVJUHRvTWFjaGluZSwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBjY3JlZjogbnVsbCwKICAgICAgICAgICAgc2VydmljZUk6IFtdLAogICAgICAgICAgICB0Y3A6ICcnLAogICAgICAgICAgICB1ZHA6ICcnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5Ub1BvcnRQcm90b3R5cGVNYXBwaW5nX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50VG9Qb3J0UHJvdG90eXBlJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVUb1BvcnRQcm90b3R5cGUsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgc2VsZWN0UG9ydDogbnVsbCwKICAgICAgICAgICAgcG9ydHR5cGU6IG51bGwsCiAgICAgICAgICAgIGNvbnRleHQ6IG51bGwsCiAgICAgICAgICAgIHByb2Nlc3M6IG51bGwsCiAgICAgICAgICAgIHNlbGVjdFNlcnZpY2VJbnM6IG51bGwsCiAgICAgICAgICAgIHNlcnZpY2VJbnM6IG51bGwKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlJlcXVpcmVkU29tZUlQX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UmVxdWlyZWRTb21lSVAnLCB7CiAgICAgICAgICAgIC8vZGVwbG95cmVmLCBjbGllbnRyZWYsdmVy64qUIG51bGztlbTspJjslbztlZzri6QuIGNsZWFyYWJsZe2VmOuptCDqsJLsnbQgbnVsbOuzgO2VmOq4sCDrlYzrrLjsl5AgCiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVJlcXVpcmVkU29tZUlQLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGRlcGxveXJlZjogbnVsbCwKICAgICAgICAgICAgbWlub3J2ZXI6ICcnLAogICAgICAgICAgICBpZDogJycsCiAgICAgICAgICAgIHNvbWVpcGNsaWVudDogbnVsbCwKICAgICAgICAgICAgdmVyOiBudWxsLAogICAgICAgICAgICBtZXRob2Q6IFtdLAogICAgICAgICAgICByZXF1aXJlZGV2ZW50OiBbXSwKICAgICAgICAgICAgRTJFRXZlbnQ6IFtdLAogICAgICAgICAgICBFMkVNZXRob2Q6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5Qcm92aWRlZFNvbWVJUF9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFByb3ZpZGVkU29tZUlQJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQcm92aWRlZFNvbWVJUCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBkZXBsb3lyZWY6IG51bGwsCiAgICAgICAgICAgIHNvbWVpcHNlcnZlcjogbnVsbCwKICAgICAgICAgICAgaW5zdGFuY2VpZDogJycsCiAgICAgICAgICAgIGxvYWRQcmlvcml0eTogJycsCiAgICAgICAgICAgIGxvYWRXZWlnaHQ6ICcnLAogICAgICAgICAgICBldmVudFA6IFtdLAogICAgICAgICAgICBtZXRob2Q6IFtdLAogICAgICAgICAgICBldmVudEc6IFtdLAogICAgICAgICAgICBFMkVFdmVudDogW10sCiAgICAgICAgICAgIEUyRU1ldGhvZDogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkUyRVByb2ZpbGVDb25maWdfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRFMkVQcm9maWxlQ29uZmlnJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVFMkVQcm9maWxlQ29uZmlnLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHByb2ZpbGU6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5TREdfREVGX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U0RHX0RFRicsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU0RHX0RFRiwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBzZGdDbGFzczogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkVycm9yX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50RXJyb3InLCB7CiAgICAgICAgICAgIC8vZXJyb3JEcmVmIOuKlCBudWxs7ZW07KSY7JW87ZWc64ukLiBjbGVhcmFibGXtlZjrqbQg6rCS7J20IG51bGzrs4DtlZjquLAg65WM66y47JeQIAogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVFcnJvciwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBkZXNjOiAnJywKICAgICAgICAgICAgZXJyb3Jjb2RlOiAnJywKICAgICAgICAgICAgZXJyb3JEcmVmOiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5FcnJvcnNldF9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEVycm9yU2V0JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVFcnJvclNldCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBlcnJvcnJlZjogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkVycm9yRG9tYWluX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50RXJyb3JEb21haW4nLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUVycm9yRG9tYWluLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIG5hbWVzcGFjZTogJycsCiAgICAgICAgICAgIHZhbHVlOiAnJwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuRmlsZUFycmF5X3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UEVSRmlsZUFycmF5JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQRVJGaWxlQXJyYXksCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgc2RnczogW10sCiAgICAgICAgICAgIG1heFNpemU6ICcnLAogICAgICAgICAgICBtaW5pU2l6ZTogJycsCiAgICAgICAgICAgIHVwZGF0ZVM6IG51bGwsCiAgICAgICAgICAgIHVyaTogJycsCiAgICAgICAgICAgIGZpbGVzOiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuRmlsZVByb3h5SW50ZXJmX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UEVSRmlsZVByb3h5JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQRVJGaWxlUHJveHksCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgY2F0ZWdvcnk6ICcnLAogICAgICAgICAgICBtaW5pc2l6ZTogJycsCiAgICAgICAgICAgIHJlZHVuZGFuY3k6IG51bGwsCiAgICAgICAgICAgIHVwZGF0ZVM6IG51bGwsCiAgICAgICAgICAgIGVuY29kaW5nOiAnJywKICAgICAgICAgICAgcHJveHk6IFtdLAogICAgICAgICAgICBtYXhmaWxlczogJycKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LktleVZhbHVlRGF0YV9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFBFUktleVZhbHVlRCcsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEVSS2V5VmFsdWVELAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHNkZ3M6IFtdLAogICAgICAgICAgICBtYXhTaXplOiAnJywKICAgICAgICAgICAgbWluaVNpemU6ICcnLAogICAgICAgICAgICB1cGRhdGVTOiBudWxsLAogICAgICAgICAgICB1cmk6ICcnLAogICAgICAgICAgICByZWR1bmRhbmN5OiBbXSwKICAgICAgICAgICAga2V5VmFsdWU6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5LZXlWYWx1ZURJX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UEVSS2V5VmFsdWVESScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEVSS2V5VmFsdWVESSwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBtaW5pc2l6ZTogJycsCiAgICAgICAgICAgIHJlZHVuZGFuY3k6IG51bGwsCiAgICAgICAgICAgIHVwZGF0ZVM6IG51bGwsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBzZXJpYWxpemF0aW9uOiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUG9ydFByb3RvRmlsZUFfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRQRVJQUHRvRmlsZUFycmF5JywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQRVJQUHRvRmlsZUFycmF5LAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGZpbGVBcnJheTogbnVsbCwKICAgICAgICAgICAgcG9ydDogbnVsbCwKICAgICAgICAgICAgcHJvY2VzczogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUG9ydFByb3RvS2V5Vl9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFBFUlBQdG9LZXlWYWx1ZScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEVSUFB0b0tleVZhbHVlLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGtleVZhbHVlOiBudWxsLAogICAgICAgICAgICBwb3J0OiBudWxsLAogICAgICAgICAgICBwcm9jZXNzOiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5QbGF0Zm9ybUhlYWx0aE1hbmFnQ19zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFBITUNvbnRyaWJ1dGlvbicsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEhNQ29udHJpYnV0aW9uLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkNvbnRyaXRvTWFjaGluZV9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFBITXRvTWFjaGluZScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEhNdG9NYWNoaW5lLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIG1hY2hpbmU6IG51bGwsCiAgICAgICAgICAgIGNvbnRyaTogW10KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkhlYWx0aENoYW5uZWxfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRQSE1IZWFsdGgnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVBITUhlYWx0aCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBzdGF0dXM6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5SZWNvdmVyeVZBX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UEhNUmVjb3ZlcnknLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZVBITVJlY292ZXJ5LAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHJlY29uYW1lOiAnJywKICAgICAgICAgICAgZmFmOiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5QSE1TdXBlcnZpc2VkX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50UEhNU3VwZXJ2aXNlZCcsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUEhNU3VwZXJ2aXNlZCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBjaGVja3BvaW50OiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuUmVjb3ZlcnlBY3Rpb25JbnRlcmZfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRSZWNvdmVyeVZpYScsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUmVjb3ZlcnlWaWEsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgcHJvY2VzczogbnVsbCwKICAgICAgICAgICAgc3djb21wb25lbnQ6IG51bGwsCiAgICAgICAgICAgIHBvcnQ6IG51bGwsCiAgICAgICAgICAgIHBobVJlY292ZXJ5OiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5Db21NZXRob2RHRGVzaWduX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TWV0aG9kR0QnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1ldGhvZEdELAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIHByb2Nlc3NEOiBudWxsLAogICAgICAgICAgICBTSU1ldGhvZDogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuQ29tRXZlbnRHRGVzaWduX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50RXZlbnRHRCcsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lRXZlbnRHRCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBwcm9jZXNzRDogbnVsbCwKICAgICAgICAgICAgU0lFdmVudDogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuQ29tRmllbGRHRGVzaWduX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50RmllbGRHRCcsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lRmllbGRHRCwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBwcm9jZXNzRDogbnVsbCwKICAgICAgICAgICAgU0lGaWVsZDogbnVsbCwKICAgICAgICAgICAgcm9sZTogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuQ29tTWV0aG9kR3JhbnRfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNZXRob2RHJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVNZXRob2RHLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIG1ldGhvZEQ6IG51bGwsCiAgICAgICAgICAgIHByb3ZpZGU6IG51bGwKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkNvbUV2ZW50R3JhbnRfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRFdmVudEcnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUV2ZW50RywKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBldmVudEQ6IG51bGwsCiAgICAgICAgICAgIHByb3ZpZGU6IG51bGwKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkNvbUZpZWxkR3JhbnRfc3RyKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRGaWVsZEcnLCB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUZpZWxkRywKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICBmaWVsZEQ6IG51bGwsCiAgICAgICAgICAgIHByb3ZpZGU6IG51bGwsCiAgICAgICAgICAgIHJvbGU6IG51bGwKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LlNXQ2x1c3Rlcl9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFNvZnRXYXJlQ2x1c3RlcicsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU29mdFdhcmVDbHVzdGVyLAogICAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICAgIGxlZnQ6IGVsZW1lbnRYLAogICAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICAgIGNhdGVnb3J5OiAnJywKICAgICAgICAgICAgaWRWZW5kb3I6ICcnLAogICAgICAgICAgICB2ZXJzaW9uOiAnJywKICAgICAgICAgICAgc2RnczogW10sCiAgICAgICAgICAgIGV4ZWN1dGFibGU6IFtdLAogICAgICAgICAgICBtYWNoaW5lRDogW10sCiAgICAgICAgICAgIHRvTWFjaGluZTogW10sCiAgICAgICAgICAgIHByb2Nlc3M6IFtdLAogICAgICAgICAgICBzc3djOiBbXQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gPT0gY29uc3RhbnQuU1dQYWNrYWdlX3N0cikgewogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U29mdFdhcmVQYWNrYWdlJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVTb2Z0V2FyZVBhY2thZ2UsCiAgICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogZWxlbWVudFgsCiAgICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgICAgYWN0aW9uOiBudWxsLAogICAgICAgICAgICBhY3RpdmF0aW9uOiBudWxsLAogICAgICAgICAgICBjb21wU1dQc2l6ZTogJycsCiAgICAgICAgICAgIGRlbHRhUGFrYWdlOiBudWxsLAogICAgICAgICAgICBtYXhpbXVuVmVyOiAnJywKICAgICAgICAgICAgbWluaW11blZlcjogJycsCiAgICAgICAgICAgIGlkOiAnJywKICAgICAgICAgICAgcG9zdFJlYm9vdDogbnVsbCwKICAgICAgICAgICAgcHJlUmVib290OiBudWxsLAogICAgICAgICAgICBzd2NsdXN0ZXI6IG51bGwsCiAgICAgICAgICAgIHVuY29tcFNXQ3NpemU6ICcnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5WZWhpY2xlUGFja2FnZV9zdHIpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFZlaGljbGVQYWNrYWdlJywgewogICAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVWZWhpY2xlUGFja2FnZSwKICAgICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgICBsZWZ0OiBlbGVtZW50WCwKICAgICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgICByZXBvc2k6ICcnLAogICAgICAgICAgICBzZGdzOiBbXSwKICAgICAgICAgICAgZHJpdmVyOiBbXSwKICAgICAgICAgICAgcm9sbG91dDogW10sCiAgICAgICAgICAgIHVjbXM6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGlmICghdGhpcy5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBfdGhpczQuYWN0aXZlbm9kZVswXTsKICAgICAgICB9KSkgewogICAgICAgICAgdGhpcy5vcGVuSWRzLnB1c2godGhpcy5hY3RpdmVub2RlWzBdKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBuZXdHcm91cEVsZW1lbnQ6IGZ1bmN0aW9uIG5ld0dyb3VwRWxlbWVudCgpIHsKICAgICAgLy9jb25zdCBlbGVtZW50WCA9IC01NTAvL0FycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gLTU1MCkvL0FycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTAwKSkgCiAgICAgIC8vY29uc3QgZWxlbWVudFkgPSAtNTAvL0FycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gLTUwKS8vQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MDApKQogICAgICBpZiAodGhpcy5hY3RpdmVub2RlWzBdID09IGNvbnN0YW50LkFkYXB0aXZlQXBwbGljYXRpb25fc3RyKSB7CiAgICAgICAgaWYgKCF0aGlzLm9wZW5JZHMuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IGNvbnN0YW50LkFkYXB0aXZlQXBwbGljYXRpb25fc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5BZGFwdGl2ZUFwcGxpY2F0aW9uX3N0cik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRQcm90b01hY2hpbmVNYXBwaW5nJywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUHJvY2Vzc3RvTWFjaGluZU1hcHBpbmcsCiAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICBsZWZ0OiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRYLAogICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgIGljb246ICJtZGktY2xpcGJvYXJkLW91dGxpbmUiLAogICAgICAgICAgdmFsaWRhdGlvbjogZmFsc2UsCiAgICAgICAgICBtYXBwaW5nOiBbXQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuUHJvY2Vzc3RvTWFjaGluZU1hcHBpbmdfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5Qcm9jZXNzdG9NYWNoaW5lTWFwcGluZ19zdHIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50U1dDb21wb25lbnRzJywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU1dDb21wb25lbnRzLAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgcHBvcnQ6IFtdLAogICAgICAgICAgcnBvcnQ6IFtdLAogICAgICAgICAgcHJwb3J0OiBbXQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuU1dDb21wb25lbnRzX3N0cjsKICAgICAgICB9KSkgewogICAgICAgICAgdGhpcy5vcGVuSWRzLnB1c2goY29uc3RhbnQuU1dDb21wb25lbnRzX3N0cik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRQcm9jZXNzJywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lUHJvY2VzcywKICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgIGxlZnQ6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFgsCiAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgIGxvZ0xldmVsOiBudWxsLAogICAgICAgICAgbG9nUGF0aDogJycsCiAgICAgICAgICBsb2dQcm9EZXNjOiAnJywKICAgICAgICAgIGxvZ1Byb0lEOiAnJywKICAgICAgICAgIHJlc3RhcnQ6ICcnLAogICAgICAgICAgcHJlTWFwcGluZzogbnVsbCwKICAgICAgICAgIGxvZ01vZGU6IFtdLAogICAgICAgICAgcHJvZGVzaWduOiBudWxsLAogICAgICAgICAgZGV0ZXJtaW46IG51bGwsCiAgICAgICAgICBleGVjdXQ6IG51bGwsCiAgICAgICAgICBtYWNoaW5uYW1lOiAnJywKICAgICAgICAgIG1hY2hpbmV0eXBlOiBudWxsLAogICAgICAgICAgZGVwZW5kZW50OiBbXQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuUHJvY2Vzc19zdHI7CiAgICAgICAgfSkpIHsKICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50LlByb2Nlc3Nfc3RyKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudFByb2Nlc3NEZXNpZ24nLCB7CiAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVQcm9jZXNzRGVzaWduLAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgZXhlY3V0YWJsZXJlZjogbnVsbCwKICAgICAgICAgIGRldGVybWluOiBbXQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuUHJvY2Vzc0Rlc2lnbl9zdHI7CiAgICAgICAgfSkpIHsKICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50LlByb2Nlc3NEZXNpZ25fc3RyKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEV4ZWN1dGFibGUnLCB7CiAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVFeGVjdXRhYmxlLAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgdmVyc2lvbjogJycsCiAgICAgICAgICBjYXRlZ29yeTogJycsCiAgICAgICAgICBidWlsZFR5cGU6IG51bGwsCiAgICAgICAgICBsb2dnaW5nQmVoYWJpb3I6IG51bGwsCiAgICAgICAgICByZXBvcnRpbmdCZWhhYmlvcjogbnVsbCwKICAgICAgICAgIHN3bmFtZTogJycsCiAgICAgICAgICBhcHBsaWNhdGlvbnR5cGVyZWY6IG51bGwKICAgICAgICB9KTsKCiAgICAgICAgaWYgKCF0aGlzLm9wZW5JZHMuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IGNvbnN0YW50LkV4ZWN1dGFibGVfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5FeGVjdXRhYmxlX3N0cik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRTdGFydHVwQ29uZmlnJywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lU3RhcnR1cENvbmZpZywKICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgIGxlZnQ6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFgsCiAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZSwKICAgICAgICAgIGNvbmZpZzogW10KICAgICAgICB9KTsKCiAgICAgICAgaWYgKCF0aGlzLm9wZW5JZHMuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IGNvbnN0YW50LlN0YXJ0dXBDb25maWdfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5TdGFydHVwQ29uZmlnX3N0cik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnREZXRlcm1pbmlzdGljQ2xpZW4nLCB7CiAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVEZXRlcm1pbmlzdGljQ2xpZW50LAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgY3ljbGV0aWVtOiAnJywKICAgICAgICAgIG51bW9md29ya2VyczogJycKICAgICAgICB9KTsKCiAgICAgICAgaWYgKCF0aGlzLm9wZW5JZHMuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IGNvbnN0YW50LkRldGVybWluaXN0aWNDbGllbnRfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5EZXRlcm1pbmlzdGljQ2xpZW50X3N0cik7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSA9PSBjb25zdGFudC5NYWNoaW5lc19zdHIpIHsKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuTWFjaGluZXNfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5NYWNoaW5lc19zdHIpOwogICAgICAgIH0KICAgICAgICAvKnZhciBuYW1lTWFjaGluZSA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1hY2hpbmUNCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TW9kZURlY2xhcmF0aW9uR3JvdXAnLCB7DQogICAgICAgICAgICBuYW1lOiBuYW1lTWFjaGluZSsnX01hY2hpbmVTdGF0ZV9Nb2RlRGVjbGFyYXRpb25Hcm91cCcsIHBhdGg6ICcnLCBpc1Zpc2libGUgOiBmYWxzZSwNCiAgICAgICAgICAgIHRvcDogQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKSksIGxlZnQ6IEFycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwMCkpLCANCiAgICAgICAgICAgIHppbmRleDogMTAsIG1vZGVkZWNsYXJhdGlvbjpbe25hbWU6ICdPZmYnLCB2YWx1ZTogJyd9LHtuYW1lOiAnU3RhcnR1cCcsIFZhbHVlOiAnJ30se25hbWU6ICdSdW5uaW5nJywgVmFsdWU6ICcnfSx7bmFtZTogJ1NodXRkb3duJywgVmFsdWU6ICcnfV0sIGluaXRtb2RlOidPZmYnLCBpY29uOiJtZGktY2xpcGJvYXJkLW91dGxpbmUiLCB2YWxpZGF0aW9uOiBmYWxzZQ0KICAgICAgICB9KQ0KICAgICAgICBpZighdGhpcy5vcGVuSWRzLnNvbWUoaXRlbSA9PiBpdGVtID09PSBjb25zdGFudC5Nb2RlRGVjbGFyYXRpb25Hcm91cF9zdHIpKXsNCiAgICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50Lk1vZGVEZWNsYXJhdGlvbkdyb3VwX3N0cikNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNYWNoaW5lJywgew0KICAgICAgICAgICAgbmFtZTogbmFtZU1hY2hpbmUsIHBhdGg6ICcnLCBpc1Zpc2libGUgOiBmYWxzZSwNCiAgICAgICAgICAgIHRvcDogQXJyYXkuZnJvbSh7bGVuZ3RoOjR9LCAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDAwKSksIGxlZnQ6IEFycmF5LmZyb20oe2xlbmd0aDo0fSwgKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzAwMCkpLCANCiAgICAgICAgICAgIHppbmRleDogMTAsIG1hY2hpbmVkZXNpZ246bnVsbCwgZW50ZXJUaW1lb3V0OicnLCBleGl0VGltZW91dDonJywgaHdlbGVtZW50OltdLCBleGVjdXRhYmxlOm51bGwsIGFkbWluOiAnJywNCiAgICAgICAgICAgIGZ1bmN0aW9uZ3JvdXA6W3tuYW1lOidNYWNoaW5lU3RhdGUnLCB0eXBlOicvJytuYW1lTWFjaGluZSsnX01hY2hpbmVTdGF0ZV9Nb2RlRGVjbGFyYXRpb25Hcm91cCd9XSwgZW52aXJvbjogW10sIHByb2Nlc3NvcjogW10sIG1vZHVsZWluc3RhbnQ6IFtdLCB1Y206IFtdLCBpYW06IFtdLCBjcnlwdG86IFtdLCBpY29uOiJtZGktY2xpcGJvYXJkLW91dGxpbmUiLCB2YWxpZGF0aW9uOiBmYWxzZQ0KICAgICAgICB9KSovCgoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNYWNoaW5lJywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lTWFjaGluZSwKICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgIGxlZnQ6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFgsCiAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgbWFjaGluZWRlc2lnbjogbnVsbCwKICAgICAgICAgIGVudGVyVGltZW91dDogJycsCiAgICAgICAgICBleGl0VGltZW91dDogJycsCiAgICAgICAgICBod2VsZW1lbnQ6IFtdLAogICAgICAgICAgZXhlY3V0YWJsZTogbnVsbCwKICAgICAgICAgIGFkbWluOiAnJywKICAgICAgICAgIGZ1bmN0aW9uZ3JvdXA6IFtdLAogICAgICAgICAgZW52aXJvbjogW10sCiAgICAgICAgICBwcm9jZXNzb3I6IFtdLAogICAgICAgICAgbW9kdWxlaW5zdGFudDogW10sCiAgICAgICAgICB1Y206IFtdLAogICAgICAgICAgaWFtOiBbXSwKICAgICAgICAgIGNyeXB0bzogW10sCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlCiAgICAgICAgfSk7CgogICAgICAgIGlmICghdGhpcy5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBjb25zdGFudC5NYWNoaW5lX3N0cjsKICAgICAgICB9KSkgewogICAgICAgICAgdGhpcy5vcGVuSWRzLnB1c2goY29uc3RhbnQuTWFjaGluZV9zdHIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50TWFjaGluZURlc2lnbicsIHsKICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1hY2hpbmVEZXNpZ24sCiAgICAgICAgICBwYXRoOiAnJywKICAgICAgICAgIGlzVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICBpbnB1dDogZmFsc2UsCiAgICAgICAgICB0b3A6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFksCiAgICAgICAgICBsZWZ0OiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRYLAogICAgICAgICAgemluZGV4OiAxMCwKICAgICAgICAgIGFjY2VzczogbnVsbCwKICAgICAgICAgIHJlc2V0dGltZXI6ICcnLAogICAgICAgICAgY29ubmVjdG9yOiBbXSwKICAgICAgICAgIHNlcnZpY2VkaXNjb3ZlcjogW10sCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlCiAgICAgICAgfSk7CgogICAgICAgIGlmICghdGhpcy5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBjb25zdGFudC5NYWNoaW5lRGVzaWduZV9zdHI7CiAgICAgICAgfSkpIHsKICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50Lk1hY2hpbmVEZXNpZ25lX3N0cik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZEVsZW1lbnRNb2RlRGVjbGFyYXRpb25Hcm91cCcsIHsKICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZU1vZGVEZWNsYXJhdGlvbkdyb3VwLAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBtb2RlZGVjbGFyYXRpb246IFtdLAogICAgICAgICAgaW5pdG1vZGU6ICcnLAogICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuTW9kZURlY2xhcmF0aW9uR3JvdXBfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5Nb2RlRGVjbGFyYXRpb25Hcm91cF9zdHIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRFbGVtZW50SFdFbGVtZW50JywgewogICAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXROYW1lSFdFbGVtZW50LAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBjYXRlZ29yeTogbnVsbCwKICAgICAgICAgIGF0dHJpYnV0ZTogW10sCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlCiAgICAgICAgfSk7CgogICAgICAgIGlmICghdGhpcy5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBjb25zdGFudC5IV0VsZW1lbnRfc3RyOwogICAgICAgIH0pKSB7CiAgICAgICAgICB0aGlzLm9wZW5JZHMucHVzaChjb25zdGFudC5IV0VsZW1lbnRfc3RyKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEhXQ2F0ZWdvcnknLCB7CiAgICAgICAgICBuYW1lOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWVIV0NhdGVnb3J5LAogICAgICAgICAgcGF0aDogJycsCiAgICAgICAgICBpc1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgaW5wdXQ6IGZhbHNlLAogICAgICAgICAgdG9wOiB0aGlzLiRzZXRQb3NpdGlvbkVsZW1lbnRZLAogICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCwKICAgICAgICAgIHppbmRleDogMTAsCiAgICAgICAgICBpY29uOiAibWRpLWNsaXBib2FyZC1vdXRsaW5lIiwKICAgICAgICAgIHZhbGlkYXRpb246IGZhbHNlLAogICAgICAgICAgYXR0cmlidXRlOiBbXQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuSFdDYXRlZ29yeV9zdHI7CiAgICAgICAgfSkpIHsKICAgICAgICAgIHRoaXMub3Blbklkcy5wdXNoKGNvbnN0YW50LkhXQ2F0ZWdvcnlfc3RyKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRWxlbWVudEV0aGVybmV0Q2x1c3RlcicsIHsKICAgICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TmFtZUV0aGVybmV0Q2x1c3RlciwKICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGlucHV0OiBmYWxzZSwKICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgIGxlZnQ6IHRoaXMuJHNldFBvc2l0aW9uRWxlbWVudFgsCiAgICAgICAgICB6aW5kZXg6IDEwLAogICAgICAgICAgY29uZGl0aW9uYWw6IFtdLAogICAgICAgICAgaWNvbjogIm1kaS1jbGlwYm9hcmQtb3V0bGluZSIsCiAgICAgICAgICB2YWxpZGF0aW9uOiBmYWxzZQogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXRoaXMub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSA9PT0gY29uc3RhbnQuRXRoZXJuZXRDbHVzdGVyX3N0cjsKICAgICAgICB9KSkgewogICAgICAgICAgdGhpcy5vcGVuSWRzLnB1c2goY29uc3RhbnQuRXRoZXJuZXRDbHVzdGVyX3N0cik7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb3BlbkVsZW1lbnQ6IGZ1bmN0aW9uIG9wZW5FbGVtZW50KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbSA9PT0gX3RoaXM1LmFjdGl2ZW5vZGVbMF07CiAgICAgIH0pKSB7CiAgICAgICAgdGhpcy5vcGVuSWRzLnB1c2godGhpcy5hY3RpdmVub2RlWzBdKTsKICAgICAgfQogICAgfSwKICAgIGNsb3NlRWxlbWVudDogZnVuY3Rpb24gY2xvc2VFbGVtZW50KCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHRoaXMub3Blbklkcy5mb3JFYWNoKGZ1bmN0aW9uIChlbGUsIGkpIHsKICAgICAgICBpZiAoZWxlID09IF90aGlzNi5hY3RpdmVub2RlWzBdKSB7CiAgICAgICAgICBfdGhpczYub3Blbklkcy5zcGxpY2UoaSwgMSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhY3RpdmVFbGVtZW50OiBmdW5jdGlvbiBhY3RpdmVFbGVtZW50KCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIC8vY29uc29sZS5sb2coJ2FjdGl2ZUVsZW1lbnQgLyAgJysgdGhpcy5hY3RpdmVub2RlWzBdKQogICAgICAvLyDquLDsobTsl5Ag7J6I642YIOyEoOqzvCDrs7Tsl6zsp4DripQgZWxlbWVudOuTpCDri6Qg7IKt7KCcCiAgICAgIGlmICghdGhpcy5pc0xvYWRpbmcpIHsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgnZGVsZXRlLWxpbmUnLCAnYWxsJyk7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdkZWxldGVPcGVuRWxlbW50JywgewogICAgICAgICAgdXVpZDogJycsCiAgICAgICAgICBpc0RlbGV0ZUFsbDogdHJ1ZQogICAgICAgIH0pOyAvL+yngOq4iCBhY3RpdmVub2Rl7JeQIOyeiOuKlOqxsCBlbGVtZW5067O07Jes7KO86riwIAoKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS5lbGVtZW50TGVmdCk7CgogICAgICAgIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0gIT0gdW5kZWZpbmVkICYmIHRoaXMuYWN0aXZlbm9kZVswXS5pbmRleE9mKCctJykgIT09IC0xKSB7CiAgICAgICAgICB2YXIgdHJlZWl0ZW0gPSBPYmplY3QudmFsdWVzKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dHJlZXZpZXdpdGVtcyk7CiAgICAgICAgICB2YXIgZWxlbWVudCA9IHRyZWVpdGVtLmZpbmQoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgcmV0dXJuIGRhdGEudXVpZCA9PT0gX3RoaXM3LmFjdGl2ZW5vZGVbMF07CiAgICAgICAgICB9KTsKICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCdFbGVtZW50LW9wZW4nLCB0cnVlLCBlbGVtZW50LnV1aWQpOwogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXR6SW5kZXhWaXNpYmxlJywgewogICAgICAgICAgICBwYXJlbnQ6IGVsZW1lbnQucGFyZW50LAogICAgICAgICAgICB1dWlkOiBlbGVtZW50LnV1aWQsCiAgICAgICAgICAgIHRvcDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WSwKICAgICAgICAgICAgbGVmdDogdGhpcy4kc2V0UG9zaXRpb25FbGVtZW50WCArIHRoaXMuJHN0b3JlLnN0YXRlLmVsZW1lbnRMZWZ0LAogICAgICAgICAgICBjb21wbzogJ2RyYWcnCiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0ekluZGV4VmlzaWJsZScsIHsKICAgICAgICAgICAgcGFyZW50OiBlbGVtZW50LnBhcmVudCwKICAgICAgICAgICAgdXVpZDogZWxlbWVudC51dWlkLAogICAgICAgICAgICBpc1Zpc2libGU6IHRydWUsCiAgICAgICAgICAgIGNvbXBvOiAndmlzaWJsZScsCiAgICAgICAgICAgIHN0YXJ0VVVJRDogJzEnCiAgICAgICAgICB9KTsKCiAgICAgICAgICBpZiAoZWxlbWVudC52YWxpZGF0aW9uKSB7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJzExMTExMScrdGhpcy5hY3RpdmVub2RlWzBdKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFZhbGlkYXRpb24nLCB7CiAgICAgICAgICAgICAgcGFyZW50OiBlbGVtZW50LnBhcmVudCwKICAgICAgICAgICAgICB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0gLy92YXIgdHJlZWl0ZW0KICAgICAgLy92YXIgYXJyZWxlbWVudAogICAgICAvL2NvbnNvbGUubG9nKCcwMCAnKyB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlEKQoKICAgICAgLyppZih0aGlzLmFjdGl2ZW5vZGVbMF0gIT0gdGhpcy4kc3RvcmUuc3RhdGUuYWN0aXZlVVVJRCkgew0KICAgICAgICAgIA0KICAgICAgICAgIGlmKHRoaXMuJHN0b3JlLnN0YXRlLmFjdGl2ZVVVSUQgIT0gbnVsbCkgew0KICAgICAgICAgICAgICB0cmVlaXRlbSA9IE9iamVjdC52YWx1ZXModGhpcy4kc3RvcmUuZ2V0dGVycy5nZXR0cmVldmlld2l0ZW1zKQ0KICAgICAgICAgICAgICBhcnJlbGVtZW50ID0gdHJlZWl0ZW0uZmluZChkYXRhID0+ICBkYXRhLnV1aWQgPT09IHRoaXMuJHN0b3JlLnN0YXRlLmFjdGl2ZVVVSUQpDQogICAgICAgICAgICAgIC8vY29uc29sZS5sb2coYXJyZWxlbWVudCkNCiAgICAgICAgICAgICAgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSAhPSB1bmRlZmluZWQgJiYgdGhpcy5hY3RpdmVub2RlWzBdLmluZGV4T2YoJy0nKSAhPT0gLTEpIHsNCiAgICAgICAgICAgICAgICAgIHZhciBhY3RlbGVtZW50ID0gdHJlZWl0ZW0uZmluZChkYXRhID0+ICBkYXRhLnV1aWQgPT09IHRoaXMuYWN0aXZlbm9kZVswXSkNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0ekluZGV4Jywge3BhcmVudDphcnJlbGVtZW50LnBhcmVudCwgdXVpZDogdGhpcy4kc3RvcmUuc3RhdGUuYWN0aXZlVVVJRCwgemluZGV4OiAyfSApDQogICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnc2V0TGluZUFjdGl2ZScsIHRoaXMuJHN0b3JlLnN0YXRlLmFjdGl2ZVVVSUQsIGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RmluZFBhcmVudERyYXdXaW5kb3coYWN0ZWxlbWVudC5wYXJlbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXR6SW5kZXgnLCB7cGFyZW50OmFjdGVsZW1lbnQucGFyZW50LCB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0sIHppbmRleDogMTB9ICkNCiAgICAgICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnc2V0TGluZUFjdGl2ZScsIHRoaXMuYWN0aXZlbm9kZVswXSwgdHJ1ZSkNCiAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldHV1aWQnLCB7dXVpZDogdGhpcy5hY3RpdmVub2RlWzBdfSApDQogICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuYWN0aXZlbm9kZVswXSsnMScpLnNjcm9sbEludG9WaWV3KHRydWUpDQogICAgICAgICAgICAgICAgICAgICAgICBpZihhY3RlbGVtZW50LnZhbGlkYXRpb24pIHsgDQogICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJzExMTExMScrdGhpcy5hY3RpdmVub2RlWzBdKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFZhbGlkYXRpb24nLCB7cGFyZW50OmFjdGVsZW1lbnQucGFyZW50LCB1dWlkOnRoaXMuYWN0aXZlbm9kZVswXX0pDQogICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgnc2V0TGluZUFjdGl2ZScsIHRoaXMuJHN0b3JlLnN0YXRlLmFjdGl2ZVVVSUQsIGZhbHNlKQ0KICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXR6SW5kZXgnLCB7cGFyZW50OmFycmVsZW1lbnQucGFyZW50LCB1dWlkOiB0aGlzLiRzdG9yZS5zdGF0ZS5hY3RpdmVVVUlELCB6aW5kZXg6IDJ9ICkNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0dXVpZCcsIHt1dWlkOiBudWxsfSApDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlbm9kZVswXSAhPSB1bmRlZmluZWQpew0KICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCc9PT09PSAgICAnKyB0aGlzLmFjdGl2ZW5vZGVbMF0pDQogICAgICAgICAgICAgIGlmICh0aGlzLmFjdGl2ZW5vZGVbMF0uaW5kZXhPZignLScpICE9PSAtMSkgew0KICAgICAgICAgICAgICAgICAgdHJlZWl0ZW0gPSBPYmplY3QudmFsdWVzKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dHJlZXZpZXdpdGVtcykNCiAgICAgICAgICAgICAgICAgIGFycmVsZW1lbnQgPSB0cmVlaXRlbS5maW5kKGRhdGEgPT4gIGRhdGEudXVpZCA9PT0gdGhpcy5hY3RpdmVub2RlWzBdKQ0KICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhhcnJlbGVtZW50KQ0KICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RmluZFBhcmVudERyYXdXaW5kb3coYXJyZWxlbWVudC5wYXJlbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXR6SW5kZXgnLCB7cGFyZW50OmFycmVsZW1lbnQucGFyZW50LCB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0sIHppbmRleDogMTB9ICkNCiAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldHV1aWQnLCB7dXVpZDogdGhpcy5hY3RpdmVub2RlWzBdfSApDQogICAgICAgICAgICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ3NldExpbmVBY3RpdmUnLCB0aGlzLmFjdGl2ZW5vZGVbMF0sIHRydWUpDQogICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5hY3RpdmVub2RlWzBdKycxJykuc2Nyb2xsSW50b1ZpZXcodHJ1ZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFycmVsZW1lbnQudmFsaWRhdGlvbikgeyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRWYWxpZGF0aW9uJywge3BhcmVudDphcnJlbGVtZW50LnBhcmVudCwgdXVpZDp0aGlzLmFjdGl2ZW5vZGVbMF19KQ0KICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgIH0gDQogICAgICAgICAgDQogICAgICAgICAgKi8KCiAgICAgIC8qaWYgKHRoaXMuYWN0aXZlbm9kZVswXSAhPSB1bmRlZmluZWQgJiYgdGhpcy5hY3RpdmVub2RlWzBdLmluZGV4T2YoJy0nKSAhPT0gLTEpIHsNCiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmFjdGl2ZW5vZGVbMF0rJzEnKS5zY3JvbGxJbnRvVmlldyh0cnVlKQ0KICAgICAgfSovCiAgICAgIC8vfQoKICAgIH0sCiAgICBkZWxldGVFbGVtZW50OiBmdW5jdGlvbiBkZWxldGVFbGVtZW50KCkgewogICAgICBpZiAodGhpcy5hY3RpdmVub2RlWzBdICE9IG51bGwgJiYgdGhpcy5hY3RpdmVub2RlWzBdLmluZGV4T2YoJy0nKSAhPT0gLTEpIHsKICAgICAgICB0aGlzLmRpYWxvZ0RlbGV0ZVByb2plY3QgPSB0cnVlOwogICAgICAgIHRoaXMuc3RyRGVsZXRlID0gIkVsZW1lbnTrpbwg7IKt7KCc7ZWY7Iuc6rKg7Iq164uI6rmMPyI7CiAgICAgIH0KICAgIH0sCiAgICBjaGVja1ZhbGlkYXRpb246IGZ1bmN0aW9uIGNoZWNrVmFsaWRhdGlvbih1dWlkKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjaGVja1ZhbGlkYXRpb24nKTsKCiAgICAgIGlmICh1dWlkICE9IG51bGwpIHsKICAgICAgICB2YXIgdHJlZWl0ZW0gPSBPYmplY3QudmFsdWVzKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dHJlZXZpZXdpdGVtcyk7CiAgICAgICAgdmFyIGVsZW1lbnQgPSB0cmVlaXRlbS5maW5kKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICByZXR1cm4gZGF0YS51dWlkID09PSB1dWlkOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoZWxlbWVudC52YWxpZGF0aW9uKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFZhbGlkYXRpb24nLCB7CiAgICAgICAgICAgIHBhcmVudDogZWxlbWVudC5wYXJlbnQsCiAgICAgICAgICAgIHV1aWQ6IHV1aWQKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHJlbmFtZUVsZW1lbnQ6IGZ1bmN0aW9uIHJlbmFtZUVsZW1lbnQoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgLy9jb25zb2xlLmxvZygncmVuYW1lRWxlbWVudCcpCiAgICAgIGlmICh0aGlzLnJlbmFtZS5pZCA9PSAwKSB7CiAgICAgICAgdGhpcy5yZW5hbWUuaWQgPSB0aGlzLmFjdGl2ZW5vZGVbMF07CiAgICAgIH0KCiAgICAgIHRoaXMuc2hvd01lbnUgPSBmYWxzZTsKICAgICAgdmFyIHRyZWVpdGVtID0gT2JqZWN0LnZhbHVlcyh0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldHRyZWV2aWV3aXRlbXMpOwogICAgICB2YXIgYXJyZWxlbWVudCA9IHRyZWVpdGVtLmZpbmQoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS51dWlkID09PSBfdGhpczgucmVuYW1lLmlkOwogICAgICB9KTsKICAgICAgdGhpcy5yZW5hbWUubmFtZSA9IGFycmVsZW1lbnQubmFtZTsKICAgICAgdGhpcy5yZW5hbWUucGFyZW50ID0gYXJyZWxlbWVudC5wYXJlbnQ7CiAgICB9LAogICAgc2V0UmVuYW1lOiBmdW5jdGlvbiBzZXRSZW5hbWUoKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ3NldFJlbmFtZScpCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgncmVuYW1lRWxlbWVudCcsIHsKICAgICAgICB1dWlkOiB0aGlzLnJlbmFtZS5pZCwKICAgICAgICBwYXJlbnQ6IHRoaXMucmVuYW1lLnBhcmVudCwKICAgICAgICBuYW1lOiB0aGlzLnJlbmFtZS5uYW1lCiAgICAgIH0pOwogICAgICB0aGlzLmNhbmNlbFJlbmFtZSgpOwogICAgfSwKICAgIGNhbmNlbFJlbmFtZTogZnVuY3Rpb24gY2FuY2VsUmVuYW1lKCkgewogICAgICB0aGlzLnJlbmFtZSA9IHsKICAgICAgICBpZDogMCwKICAgICAgICBuYW1lOiBudWxsLAogICAgICAgIHBhcmVudDogbnVsbAogICAgICB9OwogICAgfSwKICAgIHNhdmVFbGVtZW50OiBmdW5jdGlvbiBzYXZlRWxlbWVudCgpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoJ3Nob3J0Y3V0LWtleXMnLCAnc2F2ZScpOwogICAgfSwKICAgIG9wZW5BbGw6IGZ1bmN0aW9uIG9wZW5BbGwoKSB7CiAgICAgIHZhciBfdGhpczkgPSB0aGlzOwoKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUubmF2aWdhdG9yTGlzdFt0aGlzLiRzdG9yZS5zdGF0ZS5vcGVuUHJvamVjdEluZGV4XS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChmaXIpIHsKICAgICAgICBpZiAoIV90aGlzOS5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBmaXIubmFtZTsKICAgICAgICB9KSkgewogICAgICAgICAgX3RoaXM5Lm9wZW5JZHMucHVzaChmaXIubmFtZSk7CiAgICAgICAgfQoKICAgICAgICBmaXIuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoc2VjKSB7CiAgICAgICAgICBpZiAoc2VjLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgaWYgKCFfdGhpczkub3Blbklkcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IHNlYy5uYW1lOwogICAgICAgICAgICB9KSkgewogICAgICAgICAgICAgIF90aGlzOS5vcGVuSWRzLnB1c2goc2VjLm5hbWUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGZpci5uYW1lID09IGNvbnN0YW50LlBsYXRmb3JtX3N0cikgewogICAgICAgICAgICBzZWMuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAodGhyKSB7CiAgICAgICAgICAgICAgaWYgKHRoci5jaGlsZHJlbi5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAoIV90aGlzOS5vcGVuSWRzLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IHRoci5uYW1lOwogICAgICAgICAgICAgICAgfSkpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM5Lm9wZW5JZHMucHVzaCh0aHIubmFtZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgY2xvc2VBbGw6IGZ1bmN0aW9uIGNsb3NlQWxsKCkgewogICAgICB0aGlzLm9wZW5JZHMgPSBbXTsKICAgIH0sCiAgICBkZWxldGVQcm9qZWN0OiBmdW5jdGlvbiBkZWxldGVQcm9qZWN0KCkgewogICAgICB0aGlzLmRpYWxvZ0RlbGV0ZVByb2plY3QgPSB0cnVlOwogICAgICB0aGlzLnN0ckRlbGV0ZSA9ICJQcm9qZWN066W8IOyCreygnO2VmOyLnOqyoOyKteuLiOq5jD8iOwogICAgfSwKICAgIG9rRGVsZXRlOiBmdW5jdGlvbiBva0RlbGV0ZSgpIHsKICAgICAgdmFyIF90aGlzMTAgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuaXNtZW51ID09IDApIHsKICAgICAgICAvL3Byb2plY3QKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2RlbGV0ZVByb2plY3QnKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmlzbWVudSA9PSAyKSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5hY3RpdmVub2RlWzBdKTsKICAgICAgICB2YXIgdHJlZWl0ZW0gPSBPYmplY3QudmFsdWVzKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dHJlZXZpZXdpdGVtcyk7CiAgICAgICAgdmFyIGFycmVsZW1lbnQgPSB0cmVlaXRlbS5maW5kKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICByZXR1cm4gZGF0YS51dWlkID09PSBfdGhpczEwLmFjdGl2ZW5vZGVbMF07CiAgICAgICAgfSk7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoJ2RlbGV0ZS1saW5lJywgJ2FsbCcpOwogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlT3BlbkVsZW1udCcsIHsKICAgICAgICAgIHV1aWQ6ICcnLAogICAgICAgICAgaXNEZWxldGVBbGw6IHRydWUKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2RlbGV0ZVJlZkVsZW1lbnQnLCB7CiAgICAgICAgICB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0KICAgICAgICB9KTsgLy8g64K06rCAIO2ZlOyCtO2RnOydmCDrgZ3snbjqsIA/CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlRWxlbWVudExpbmUnLCB7CiAgICAgICAgICB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0KICAgICAgICB9KTsgLy8g64K06rCAIO2ZlOyCtO2RnOydmCDsi5zsnpHsnbjqsIA/CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnZGVsZXRlRWxlbWVudCcsIHsKICAgICAgICAgIHBhcmVudDogYXJyZWxlbWVudC5wYXJlbnQsCiAgICAgICAgICB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy5jYW5jZWxEZWxldGUoKTsKICAgIH0sCiAgICBjYW5jZWxEZWxldGU6IGZ1bmN0aW9uIGNhbmNlbERlbGV0ZSgpIHsKICAgICAgdGhpcy5kaWFsb2dEZWxldGVQcm9qZWN0ID0gZmFsc2U7CiAgICAgIHRoaXMuZGVsZXRBY3RpdmUgPSBmYWxzZTsKICAgICAgdGhpcy5hY3RpdmVub2RlID0gW107CiAgICB9LAogICAgY29weUVsZW1lbnQ6IGZ1bmN0aW9uIGNvcHlFbGVtZW50KCkgewogICAgICB2YXIgX3RoaXMxMSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5hY3RpdmVub2RlWzBdICE9IG51bGwgJiYgdGhpcy5hY3RpdmVub2RlWzBdLmluZGV4T2YoJy0nKSAhPT0gLTEpIHsKICAgICAgICB2YXIgdHJlZWl0ZW0gPSBPYmplY3QudmFsdWVzKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dHJlZXZpZXdpdGVtcyk7CiAgICAgICAgdmFyIGFycmVsZW1lbnQgPSB0cmVlaXRlbS5maW5kKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICByZXR1cm4gZGF0YS51dWlkID09PSBfdGhpczExLmFjdGl2ZW5vZGVbMF07CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjb3B5RWxlbWVudCcsIHsKICAgICAgICAgIHBhcmVudDogYXJyZWxlbWVudC5wYXJlbnQsCiAgICAgICAgICB1dWlkOiB0aGlzLmFjdGl2ZW5vZGVbMF0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["navigatorbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <v-icon class=\"subtitle-1 green\" style=\"margin:0 5px 0 15px;\" dark >mdi-view-dashboard</v-icon>\r\n                    SAHL\r\n        <v-divider></v-divider>\r\n        <v-list dense>\r\n            <v-list-group v-for=\"(item,idx) in navigatorList\" :key=\"idx\"\r\n                    prepend-icon=\"mdi-alpha-p-circle-outline\" no-action sub-group v-model=\"openlist\"> <!--  sub-group 빼면 리스트가 하나씩만 보인다-->\r\n                <template v-slot:activator>\r\n                    <v-list-item-icon v-if=\"item.validation\">\r\n                        <v-icon color=\"red\" dark>mdi-exclamation</v-icon>\r\n                    </v-list-item-icon>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.name\" style=\"fontsize:20px\" @contextmenu=\"show($event, 0)\"></v-list-item-title>\r\n                    </v-list-item-content>\r\n                </template> \r\n                <v-card flat @contextmenu=\"show($event,1)\">\r\n                    <v-treeview ref=\"tree\" :items=\"item.children\" activatable item-key=\"uuid\" :open.sync=\"openIds\" :active.sync=\"activenode\" dense @update:open=\"openNode\" @update:active=\"activeElement()\" class=\"caption\">\r\n                        <template v-slot:prepend=\"{ item, open }\">\r\n                            <!-- <v-badge v-if=\"item.validation\" bordered dot color=\"red\" offset-x=\"10\" offset-y=\"12\"> -->\r\n                            <div v-if=\"item.validation\">\r\n                                <v-icon color=\"red\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    mdi-folder-alert\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children\" color=\"red\">mdi-alpha-e-circle-outline</v-icon>\r\n                                <v-icon v-else color=\"red\">mdi-clipboard-alert-outline</v-icon>\r\n                            </div>\r\n                            <!-- </v-badge> -->\r\n                            <div v-else>\r\n                                <v-icon color=\"#ECB35D\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children && item.children.length == 0\" color=\"primary\">mdi-alpha-e</v-icon>\r\n                                <v-icon v-else color=\"primary\">{{item.icon}}</v-icon>\r\n                            </div>\r\n                        </template>\r\n                    </v-treeview>\r\n                </v-card>\r\n            </v-list-group>\r\n        </v-list>\r\n        <v-menu v-model=\"showMenu\" :position-x=\"x\" :position-y=\"y\" absolute offset-y>\r\n            <v-list v-if=\"ismenu == 2\" dense class=\"text-start\">\r\n                <v-edit-dialog eager large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"setRename()\" @save=\"cancelRename()\"> \r\n                    <v-list-item @click=\"renameElement()\">\r\n                        <v-list-item-content>\r\n                            <v-list-item-title>Element Rename</v-list-item-title> <!--이름을 길게 안하면 menu밑에 text가 길어서 active된 라인이 짧아짐-->\r\n                        </v-list-item-content>\r\n                    </v-list-item>\r\n                    <template v-slot:input>\r\n                        <br>\r\n                        <v-text-field v-model=\"rename.name\" outlined clearable label=\"Rename\" type=\"text\"></v-text-field>\r\n                    </template>\r\n                </v-edit-dialog>\r\n                <v-list-item  v-for=\"(item, index) in menuElementitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else-if=\"ismenu == 0\" dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuProjectitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else-if=\"ismenu == 1\" dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else dense class=\"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuFirstitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-menu>\r\n        <v-dialog v-model=\"dialogDeleteProject\" persistent width=\"600\">\r\n            <v-card color=\"red accent-2\">\r\n                <v-card-title class=\"text-h6 white--text\" height=\"10px\"> \r\n                    <v-icon color=\"white lighten-1\">mdi-alert-outline</v-icon>\r\n                    warning \r\n                </v-card-title>\r\n                <v-card-text class=\"text-h5 text--primary text-center\">\r\n                    {{strDelete}}\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"white darken-1\" text  @click=\"okDelete()\" >\r\n                        Ok\r\n                    </v-btn>\r\n                    <v-btn class=\"d-inline-flex ml-3 mr-1\" color=\"white darken-1\" text @click=\"cancelDelete()\">\r\n                        Cancel\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../main'\r\nimport constant from \"../store/constants.js\"\r\n\r\n\r\nexport default({\r\n    computed: {\r\n        SAHLProject () {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        ismakeProject() {\r\n            return this.$store.state.ismakeProject\r\n        },\r\n        elementLeft() {\r\n            return this.$store.state.elementLeft\r\n        },\r\n    },\r\n    watch:{\r\n        activeUUID(val) {\r\n            //console.log('activeUUID*** '+ val)\r\n            if (this.isCreatElementMain) {\r\n                this.isCreatElementMain = false\r\n                this.activenode = []\r\n                this.activenode.push(val)\r\n            } else {\r\n                this.checkValidation(val)\r\n            }\r\n        },\r\n        ismakeProject(val) {\r\n            if (!val) {\r\n                this.openIds = []\r\n            }\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            rules: { name:  [val => (val || '').length > 0 ],},\r\n            showMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n            openlist: true,\r\n            ismenu: 0,\r\n            activenode: [],\r\n            openIds: [],\r\n            dialogDeleteProject: false,\r\n            strDelete: null,\r\n            deletActive: false, // mainiview에서 active시킨후 단축키로 element delete하면 deactive하면서 activenode값이 null로 바뀜\r\n            rename: { id: 0, name: null, parent: null},\r\n            isCreatElementMain: false,\r\n            isLoading: false,\r\n            menuElementitems: [\r\n                // { title: 'Rename', menuAction: action => { this.renameElement(action) } },\r\n                { title: 'Delete', menuAction: action => { this.deleteElement(action) } },\r\n                { title: 'Copy & Paste', menuAction: action => { this.copyElement(action) } },\r\n            ],\r\n            menuFirstitems: [\r\n                { title: 'New',    menuAction: action => { this.newGroupElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.openElement(action) } },\r\n                { title: 'Close',   menuAction: action => { this.closeElement(action) } },\r\n            ],\r\n            menuitems: [\r\n                { title: 'New',    menuAction: action => { this.newElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.openElement(action) } },\r\n                { title: 'Close',   menuAction: action => { this.closeElement(action) } },\r\n            ],\r\n            menuProjectitems: [\r\n                { title: 'Open All',   menuAction: action => { this.openAll(action) } },\r\n                { title: 'Close All',   menuAction: action => { this.closeAll(action) } },\r\n                { title: 'Delete Project', menuAction: action => { this.deleteProject(action) } },\r\n                { title: 'Save',           menuAction: action => { this.saveElement(action) } },\r\n            ],\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('add-element', (element) => { \r\n            if(!this.openIds.some(item => item === element)){\r\n                this.openIds.push(element)\r\n            }\r\n        })\r\n        EventBus.$on('active-element', (uuid) => {\r\n            if (!this.deletActive) {\r\n                this.activenode = []\r\n                if (uuid != null) {\r\n                    this.activenode.push(uuid)\r\n                }\r\n            }\r\n        })\r\n        EventBus.$on('new-file', () => {this.newElement()})\r\n        EventBus.$on('delete-file', () => {\r\n            this.ismenu = 2\r\n            this.deletActive = true\r\n            this.deleteElement()\r\n        })\r\n        EventBus.$on('delete-project', () => {\r\n            this.ismenu = 0\r\n            this.deleteProject()\r\n        })\r\n        EventBus.$on('copy-file', () => {this.copyElement()})\r\n        EventBus.$on('openAll-List', (uuid) => {\r\n            console.log('openAll-List')\r\n            if (uuid != null) {\r\n                this.isLoading = true\r\n                this.activenode.push(uuid)\r\n            }\r\n            this.openAll()\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        show (e, isprojectmenu) {\r\n            e.preventDefault()\r\n            if (this.activenode[0] != null || isprojectmenu == 0) {\r\n                this.ismenu = 3\r\n                if (isprojectmenu == 0) {\r\n                    this.ismenu = isprojectmenu\r\n                } else if (this.activenode[0].indexOf('-') != -1) {\r\n                    this.ismenu = 2\r\n                } else if (!(this.activenode[0] == constant.DateType_str || this.activenode[0] == constant.Service_str || this.activenode[0] == constant.AdaptiveApplication_str\r\n                    || this.activenode[0] == constant.Machines_str || this.activenode[0] == constant.Platform_str ||\r\n                    this.activenode[0] == constant.PER_str || this.activenode[0] == constant.PHM_str || this.activenode[0] == constant.NM_str || this.activenode[0] == constant.Log_str\r\n                    || this.activenode[0] == constant.IAM_str || this.activenode[0] == constant.UCM_str)) {\r\n                    this.ismenu = isprojectmenu\r\n                }\r\n                this.showMenu = false\r\n                this.x = e.clientX\r\n                this.y = e.clientY\r\n                this.$nextTick(() => {\r\n                    this.showMenu = true\r\n                })\r\n            }\r\n        },\r\n        openNode() {\r\n            //alert(this.openIds)\r\n        },\r\n        newElement() {\r\n            if (this.activenode[0] != null && this.activenode[0].indexOf('-') === -1) {\r\n                this.isCreatElementMain = true\r\n                const elementX = this.$setPositionElementX+this.$store.state.elementLeft//-550//Array.from({length:4}, () => -550)//Array.from({length:4}, () => Math.floor(Math.random() * 500)) \r\n                //const elementY = -50//Array.from({length:4}, () => -50)//Array.from({length:4}, () => Math.floor(Math.random() * 500))\r\n                \r\n                if (this.activenode[0] == constant.CompuMethod_str) {\r\n                    this.$store.commit('addElementCompuMehtod', {\r\n                        name: this.$store.getters.getNameCompuMethod, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, category:'', attributeName: '', scales:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.DataConstr_str) {\r\n                    this.$store.commit('addElementDataConstr', {\r\n                        name: this.$store.getters.getNameDataConstr, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, lowerlimit:'', upperlimit:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.SWBaseType_str) {\r\n                    this.$store.commit('addElementSWBaseType', {\r\n                        name: this.$store.getters.getNameSWBaseType, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, category:'', encoding:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.ApplicationArray_str) {\r\n                    this.$store.commit('addElementApplicationArray', { // elehandling, elesemantics 는 select라서 초기값이 null이다.\r\n                        name: this.$store.getters.getNameApplicationArray,  path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        category:'', dynamicArrySize:'', elename: '', elehandling: null, elesemantics: null, elemaxnumber:'', \r\n                    })\r\n                } else if (this.activenode[0] == constant.Implementation_str) {\r\n                    this.$store.commit('addElementImplementation', { //typeref, templatetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameImplementation, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                        category:'', namespace:'', arraysize:'', typeemitter:'', \r\n                        typeref: null, templatetype:[], desc:'', traceName: '', trace: [], ddpc:[], idtelement:[],\r\n                    })\r\n                } else if (this.activenode[0] == constant.Machine_str) {\r\n                    /*var nameMachine = this.$store.getters.getNameMachine\r\n                    this.$store.commit('addElementModeDeclarationGroup', {\r\n                        name: nameMachine+'_MachineState_ModeDeclarationGroup', path: '', isVisible : false,\r\n                        top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                        zindex: 10, modedeclaration:[{name: 'Off', value: ''},{name: 'Startup', Value: ''},{name: 'Running', Value: ''},{name: 'Shutdown', Value: ''}], initmode:'Off', icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                    if(!this.openIds.some(item => item === constant.ModeDeclarationGroup_str)){\r\n                        this.openIds.push(constant.ModeDeclarationGroup_str)\r\n                    }\r\n                    this.$store.commit('addElementMachine', {\r\n                        name: nameMachine, path: '', isVisible : false,\r\n                        top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                        functiongroup:[{name:'MachineState', type:'/'+nameMachine+'_MachineState_ModeDeclarationGroup'}], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: []\r\n                    })*/\r\n                    this.$store.commit('addElementMachine', {\r\n                        name: this.$store.getters.getNameMachine, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                        functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.MachineDesigne_str) {\r\n                    this.$store.commit('addElementMachineDesign', {\r\n                        name: this.$store.getters.getNameMachineDesign, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, access: null, resettimer:'', connector:[], servicediscover:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.ModeDeclarationGroup_str) {\r\n                    this.$store.commit('addElementModeDeclarationGroup', {\r\n                        name: this.$store.getters.getNameModeDeclarationGroup,  path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, modedeclaration:[{name: 'Off', value: '', id: 0},{name: 'Startup', Value: '', id: 1}], initmode:'Off', icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.HWElement_str) {\r\n                    this.$store.commit('addElementHWElement', { //category 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameHWElement, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, category:null, attribute:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.HWCategory_str) {\r\n                    this.$store.commit('addElementHWCategory', { \r\n                        name: this.$store.getters.getNameHWCategory, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        attribute: []\r\n                    })\r\n                }else if (this.activenode[0] == constant.EthernetCluster_str) {\r\n                    this.$store.commit('addElementEthernetCluster', {\r\n                        name: this.$store.getters.getNameEthernetCluster, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, conditional:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                    })\r\n                } else if (this.activenode[0] == constant.ProcesstoMachineMapping_str) {\r\n                    this.$store.commit('addElementProtoMachineMapping', { //ptmmMachine, ptmmProcess  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameProcesstoMachineMapping, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        mapping: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.SWComponents_str) {\r\n                    this.$store.commit('addElementSWComponents', {\r\n                        name: this.$store.getters.getNameSWComponents, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        pport: [], rport: [], prport: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.Process_str) {\r\n                    this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameProcess, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                        prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.ProcessDesign_str) {\r\n                    this.$store.commit('addElementProcessDesign', { //executableref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameProcessDesign, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10,icon:\"mdi-clipboard-outline\", validation: false,\r\n                        executableref: null, determin: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.Executable_str) {\r\n                    this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameExecutable, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.StartupConfig_str) {\r\n                    this.$store.commit('addElementStartupConfig', {\r\n                        name: this.$store.getters.getNameStartupConfig, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        config: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.DeterministicClient_str) {\r\n                    this.$store.commit('addElementDeterministicClien', {\r\n                        name: this.$store.getters.getNameDeterministicClient, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        cycletiem: '', numofworkers: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.SomeIPServiceInterfaceDeployment_str) {\r\n                    this.$store.commit('addElementSomeIPService', {\r\n                        name: this.$store.getters.getNameSomeIPService, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        service: null, majversion:'', minversion:'', id: '', eventG:[], eventD: [], methodD:[], fieldD:[],\r\n                    })\r\n                } else if (this.activenode[0] == constant.ServiceInterface_str) {\r\n                    this.$store.commit('addElementService', {\r\n                        name: this.$store.getters.getNameServiceInterface, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        versionMaj:'', versionMin:'', namespace:'', events:[], fields:[], methods:[], isservice: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.Client_str) {\r\n                    this.$store.commit('addElementClient', { \r\n                        name: this.$store.getters.getNameClient, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        retrydelay: '', retrymax: '', timetolive: '', delaymax: '', delaymin:''\r\n                    })\r\n                } else if (this.activenode[0] == constant.Server_str) {\r\n                    this.$store.commit('addElementServer', { \r\n                        name: this.$store.getters.getNameServer, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        delaymax: '', delaymin: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.SomeIPClient_str) {\r\n                    this.$store.commit('addElementSomeIPClient', { \r\n                        name: this.$store.getters.getNameSomeIPClient, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        findtime: '', inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.SomeIPServer_str) {\r\n                    this.$store.commit('addElementSomeIPServer', { \r\n                        name: this.$store.getters.getNameSomeIPServer, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '', delaymax: '', delaymin: '',\r\n                        offer: '', timetolive: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.SomeIPToMachineMapping_str) {\r\n                    this.$store.commit('addElementSomeIPtoMachine', { //ccref, siref  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameSomeIPtoMachine, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        ccref: null, serviceI: [], tcp:'', udp: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.ToPortPrototypeMapping_str) {\r\n                    this.$store.commit('addElementToPortPrototype', { \r\n                        name: this.$store.getters.getNameToPortPrototype, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        selectPort:null, porttype: null, context: null, process:null, selectServiceIns: null, serviceIns: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.RequiredSomeIP_str) {\r\n                    this.$store.commit('addElementRequiredSomeIP', {  //deployref, clientref,ver는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameRequiredSomeIP, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        deployref: null, minorver: '', id: '', someipclient: null, ver: null, method: [], requiredevent: [], E2EEvent: [], E2EMethod: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.ProvidedSomeIP_str) {\r\n                    this.$store.commit('addElementProvidedSomeIP', {\r\n                        name: this.$store.getters.getNameProvidedSomeIP, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        deployref: null, someipserver: null, instanceid: '', loadPriority: '', loadWeight: '', eventP: [], method: [], eventG: [], E2EEvent: [], E2EMethod: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.E2EProfileConfig_str) {\r\n                    this.$store.commit('addElementE2EProfileConfig', {\r\n                        name: this.$store.getters.getNameE2EProfileConfig, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        profile: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.SDG_DEF_str) {\r\n                    this.$store.commit('addElementSDG_DEF', {\r\n                        name: this.$store.getters.getNameSDG_DEF, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        sdgClass: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.Error_str) {\r\n                    this.$store.commit('addElementError', { //errorDref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                        name: this.$store.getters.getNameError, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        desc: '', errorcode: '', errorDref: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.Errorset_str) {\r\n                    this.$store.commit('addElementErrorSet', {\r\n                        name: this.$store.getters.getNameErrorSet, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        errorref: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.ErrorDomain_str) {\r\n                    this.$store.commit('addElementErrorDomain', {\r\n                        name: this.$store.getters.getNameErrorDomain, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        namespace: '', value: '',\r\n                    })\r\n                } else if (this.activenode[0] == constant.FileArray_str) {\r\n                    this.$store.commit('addElementPERFileArray', {\r\n                        name: this.$store.getters.getNamePERFileArray, path: '', isVisible : false, input: false,\r\n                        top:this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        sdgs: [], maxSize: '', miniSize: '', updateS: null, uri: '', files: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.FileProxyInterf_str) {\r\n                    this.$store.commit('addElementPERFileProxy', {\r\n                        name: this.$store.getters.getNamePERFileProxy, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        category: '', minisize: '', redundancy: null, updateS: null, encoding: '', proxy: [], maxfiles: ''\r\n                    })\r\n                } else if (this.activenode[0] == constant.KeyValueData_str) {\r\n                    this.$store.commit('addElementPERKeyValueD', {\r\n                        name: this.$store.getters.getNamePERKeyValueD, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        sdgs: [], maxSize: '', miniSize: '', updateS: null, uri: '', redundancy: [], keyValue: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.KeyValueDI_str) {\r\n                    this.$store.commit('addElementPERKeyValueDI', {\r\n                        name: this.$store.getters.getNamePERKeyValueDI, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        minisize: '', redundancy: null, updateS: null, data: [], serialization: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.PortProtoFileA_str) {\r\n                    this.$store.commit('addElementPERPPtoFileArray', {\r\n                        name: this.$store.getters.getNamePERPPtoFileArray, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        fileArray: null, port: null, process: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.PortProtoKeyV_str) {\r\n                    this.$store.commit('addElementPERPPtoKeyValue', {\r\n                        name: this.$store.getters.getNamePERPPtoKeyValue, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        keyValue: null, port: null, process: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.PlatformHealthManagC_str) {\r\n                    this.$store.commit('addElementPHMContribution', {\r\n                        name: this.$store.getters.getNamePHMContribution, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    })\r\n                } else if (this.activenode[0] == constant.ContritoMachine_str) {\r\n                    this.$store.commit('addElementPHMtoMachine', {\r\n                        name: this.$store.getters.getNamePHMtoMachine, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        machine: null, contri: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.HealthChannel_str) {\r\n                    this.$store.commit('addElementPHMHealth', {\r\n                        name: this.$store.getters.getNamePHMHealth, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        status: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.RecoveryVA_str) {\r\n                    this.$store.commit('addElementPHMRecovery', {\r\n                        name: this.$store.getters.getNamePHMRecovery, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        reconame: '', faf: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.PHMSupervised_str) {\r\n                    this.$store.commit('addElementPHMSupervised', {\r\n                        name: this.$store.getters.getNamePHMSupervised, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        checkpoint: []\r\n                    })\r\n                } else if (this.activenode[0] == constant.RecoveryActionInterf_str) {\r\n                    this.$store.commit('addElementRecoveryVia', {\r\n                        name: this.$store.getters.getNameRecoveryVia, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        process: null, swcomponent: null, port: null, phmRecovery: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComMethodGDesign_str) {\r\n                    this.$store.commit('addElementMethodGD', {\r\n                        name: this.$store.getters.getNameMethodGD, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        processD: null, SIMethod: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComEventGDesign_str) {\r\n                    this.$store.commit('addElementEventGD', {\r\n                        name: this.$store.getters.getNameEventGD, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        processD: null, SIEvent: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComFieldGDesign_str) {\r\n                    this.$store.commit('addElementFieldGD', {\r\n                        name: this.$store.getters.getNameFieldGD, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        processD: null, SIField: null, role: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComMethodGrant_str) {\r\n                    this.$store.commit('addElementMethodG', {\r\n                        name: this.$store.getters.getNameMethodG, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        methodD: null, provide: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComEventGrant_str) {\r\n                    this.$store.commit('addElementEventG', {\r\n                        name: this.$store.getters.getNameEventG, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        eventD: null, provide: null,\r\n                    })\r\n                } else if (this.activenode[0] == constant.ComFieldGrant_str) {\r\n                    this.$store.commit('addElementFieldG', {\r\n                        name: this.$store.getters.getNameFieldG, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        fieldD: null, provide: null, role: null\r\n                    })\r\n                } else if (this.activenode[0] == constant.SWCluster_str) {\r\n                    this.$store.commit('addElementSoftWareCluster', {\r\n                        name: this.$store.getters.getNameSoftWareCluster, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        category: '', idVendor: '', version: '', sdgs: [], executable: [], machineD: [], toMachine: [], process: [], sswc: [],\r\n                    })\r\n                } else if (this.activenode[0] == constant.SWPackage_str) {\r\n                    this.$store.commit('addElementSoftWarePackage', {\r\n                        name: this.$store.getters.getNameSoftWarePackage, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        action: null, activation: null, compSWPsize: '', deltaPakage: null, maximunVer: '', minimunVer: '',\r\n                        id: '', postReboot: null, preReboot: null, swcluster: null, uncompSWCsize: ''\r\n                    })\r\n                } else if (this.activenode[0] == constant.VehiclePackage_str) {\r\n                    this.$store.commit('addElementVehiclePackage', {\r\n                        name: this.$store.getters.getNameVehiclePackage, path: '', isVisible : false, input: false,\r\n                        top: this.$setPositionElementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                        reposi: '', sdgs: [], driver: [], rollout: [], ucms: [],\r\n                    })\r\n                }\r\n\r\n                if(!this.openIds.some(item => item === this.activenode[0])){\r\n                    this.openIds.push(this.activenode[0])\r\n                }\r\n            }\r\n        },\r\n        newGroupElement() {\r\n            //const elementX = -550//Array.from({length:4}, () => -550)//Array.from({length:4}, () => Math.floor(Math.random() * 500)) \r\n            //const elementY = -50//Array.from({length:4}, () => -50)//Array.from({length:4}, () => Math.floor(Math.random() * 500))\r\n\r\n            if (this.activenode[0] == constant.AdaptiveApplication_str) {\r\n                if(!this.openIds.some(item => item === constant.AdaptiveApplication_str)){\r\n                    this.openIds.push(constant.AdaptiveApplication_str)\r\n                }\r\n                this.$store.commit('addElementProtoMachineMapping', { \r\n                    name: this.$store.getters.getNameProcesstoMachineMapping, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false, \r\n                    mapping: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ProcesstoMachineMapping_str)){\r\n                    this.openIds.push(constant.ProcesstoMachineMapping_str)\r\n                }\r\n                this.$store.commit('addElementSWComponents', {\r\n                    name: this.$store.getters.getNameSWComponents, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX, \r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    pport: [], rport: [], prport: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.SWComponents_str)){\r\n                    this.openIds.push(constant.SWComponents_str)\r\n                }\r\n                this.$store.commit('addElementProcess', { \r\n                    name: this.$store.getters.getNameProcess, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Process_str)){\r\n                    this.openIds.push(constant.Process_str)\r\n                }\r\n                this.$store.commit('addElementProcessDesign', {\r\n                    name: this.$store.getters.getNameProcessDesign, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10,icon:\"mdi-clipboard-outline\", validation: false,\r\n                    executableref: null, determin: [],\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ProcessDesign_str)){\r\n                    this.openIds.push(constant.ProcessDesign_str)\r\n                }\r\n                this.$store.commit('addElementExecutable', { \r\n                    name: this.$store.getters.getNameExecutable, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Executable_str)){\r\n                    this.openIds.push(constant.Executable_str)\r\n                }\r\n                this.$store.commit('addElementStartupConfig', {\r\n                    name: this.$store.getters.getNameStartupConfig, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    config: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.StartupConfig_str)){\r\n                    this.openIds.push(constant.StartupConfig_str)\r\n                }\r\n                this.$store.commit('addElementDeterministicClien', {\r\n                    name: this.$store.getters.getNameDeterministicClient, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    cycletiem: '', numofworkers: '',\r\n                })\r\n                if(!this.openIds.some(item => item === constant.DeterministicClient_str)){\r\n                    this.openIds.push(constant.DeterministicClient_str)\r\n                }\r\n            } else if (this.activenode[0] == constant.Machines_str) {\r\n                if(!this.openIds.some(item => item === constant.Machines_str)){\r\n                    this.openIds.push(constant.Machines_str)\r\n                }\r\n                /*var nameMachine = this.$store.getters.getNameMachine\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: nameMachine+'_MachineState_ModeDeclarationGroup', path: '', isVisible : false,\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, modedeclaration:[{name: 'Off', value: ''},{name: 'Startup', Value: ''},{name: 'Running', Value: ''},{name: 'Shutdown', Value: ''}], initmode:'Off', icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ModeDeclarationGroup_str)){\r\n                    this.openIds.push(constant.ModeDeclarationGroup_str)\r\n                }\r\n                this.$store.commit('addElementMachine', {\r\n                    name: nameMachine, path: '', isVisible : false,\r\n                    top: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), left: Array.from({length:4}, () => Math.floor(Math.random() * 3000)), \r\n                    zindex: 10, machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                    functiongroup:[{name:'MachineState', type:'/'+nameMachine+'_MachineState_ModeDeclarationGroup'}], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n                })*/\r\n                this.$store.commit('addElementMachine', {\r\n                    name: this.$store.getters.getNameMachine, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, machinedesign:null, enterTimeout:'', exitTimeout:'', hwelement:[], executable:null, admin: '',\r\n                    functiongroup:[], environ: [], processor: [], moduleinstant: [], ucm: [], iam: [], crypto: [], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.Machine_str)){\r\n                    this.openIds.push(constant.Machine_str)\r\n                }\r\n                this.$store.commit('addElementMachineDesign', {\r\n                    name: this.$store.getters.getNameMachineDesign, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, access: null, resettimer:'', connector:[], servicediscover:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.MachineDesigne_str)){\r\n                    this.openIds.push(constant.MachineDesigne_str)\r\n                }\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: this.$store.getters.getNameModeDeclarationGroup, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, modedeclaration:[], initmode:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.ModeDeclarationGroup_str)){\r\n                    this.openIds.push(constant.ModeDeclarationGroup_str)\r\n                }\r\n                this.$store.commit('addElementHWElement', {\r\n                    name: this.$store.getters.getNameHWElement, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, category:null, attribute:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.HWElement_str)){\r\n                    this.openIds.push(constant.HWElement_str)\r\n                }\r\n                this.$store.commit('addElementHWCategory', {\r\n                    name: this.$store.getters.getNameHWCategory,  path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, icon:\"mdi-clipboard-outline\", validation: false, attribute: []\r\n                })\r\n                if(!this.openIds.some(item => item === constant.HWCategory_str)){\r\n                    this.openIds.push(constant.HWCategory_str)\r\n                }\r\n                this.$store.commit('addElementEthernetCluster', {\r\n                    name: this.$store.getters.getNameEthernetCluster, path: '', isVisible : false, input: false,\r\n                    top: this.$setPositionElementY, left: this.$setPositionElementX,\r\n                    zindex: 10, conditional:[], icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n                if(!this.openIds.some(item => item === constant.EthernetCluster_str)){\r\n                    this.openIds.push(constant.EthernetCluster_str)\r\n                }\r\n            }\r\n        },\r\n        openElement() {\r\n            if(!this.openIds.some(item => item === this.activenode[0])){\r\n                this.openIds.push(this.activenode[0])\r\n            }\r\n        },\r\n        closeElement() {\r\n            this.openIds.forEach((ele,i) => {\r\n                if( ele == this.activenode[0]) {\r\n                    this.openIds.splice(i,1)\r\n                }\r\n            })\r\n        },\r\n        activeElement() {\r\n            //console.log('activeElement /  '+ this.activenode[0])\r\n            // 기존에 있던 선과 보여지는 element들 다 삭제\r\n            if (!this.isLoading) {\r\n                EventBus.$emit('delete-line', 'all')\r\n                this.$store.commit('deleteOpenElemnt', {uuid: '', isDeleteAll: true} )\r\n                //지금 activenode에 있는거 element보여주기 \r\n                console.log(this.$store.state.elementLeft)\r\n                if (this.activenode[0] != undefined && this.activenode[0].indexOf('-') !== -1) {\r\n                    var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                    var element = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                    EventBus.$emit('Element-open', true, element.uuid)\r\n                    this.$store.commit('setzIndexVisible', {parent:element.parent, uuid: element.uuid, top: this.$setPositionElementY, left: this.$setPositionElementX+this.$store.state.elementLeft, compo: 'drag'} )\r\n                    this.$store.commit('setzIndexVisible', {parent:element.parent, uuid: element.uuid, isVisible: true, compo: 'visible', startUUID: '1'} )\r\n\r\n                    if(element.validation) { \r\n                        //console.log('111111'+this.activenode[0])\r\n                        this.$store.commit('setValidation', {parent:element.parent, uuid:this.activenode[0]})\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                this.isLoading = false\r\n            }\r\n            \r\n            //var treeitem\r\n            //var arrelement\r\n            //console.log('00 '+ this.$store.state.activeUUID)\r\n            /*if(this.activenode[0] != this.$store.state.activeUUID) {\r\n                \r\n                if(this.$store.state.activeUUID != null) {\r\n                    treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                    arrelement = treeitem.find(data =>  data.uuid === this.$store.state.activeUUID)\r\n                    //console.log(arrelement)\r\n                    if (this.activenode[0] != undefined && this.activenode[0].indexOf('-') !== -1) {\r\n                        var actelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                        this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                        EventBus.$emit('setLineActive', this.$store.state.activeUUID, false)\r\n                        if (this.$store.getters.getFindParentDrawWindow(actelement.parent)) {\r\n                            this.$store.commit('setzIndex', {parent:actelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                            EventBus.$emit('setLineActive', this.activenode[0], true)\r\n                            this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n                             document.getElementById(this.activenode[0]+'1').scrollIntoView(true)\r\n\r\n                            if(actelement.validation) { \r\n                                //console.log('111111'+this.activenode[0])\r\n                                this.$store.commit('setValidation', {parent:actelement.parent, uuid:this.activenode[0]})\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        EventBus.$emit('setLineActive', this.$store.state.activeUUID, false)\r\n                        this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                        this.$store.commit('setuuid', {uuid: null} )\r\n                    }\r\n                } else if (this.activenode[0] != undefined){\r\n                    //console.log('=====    '+ this.activenode[0])\r\n                    if (this.activenode[0].indexOf('-') !== -1) {\r\n                        treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                        arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                        //console.log(arrelement)\r\n                        if (this.$store.getters.getFindParentDrawWindow(arrelement.parent)) {\r\n                            this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                            this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n                            EventBus.$emit('setLineActive', this.activenode[0], true)\r\n                            document.getElementById(this.activenode[0]+'1').scrollIntoView(true)\r\n\r\n                            if(arrelement.validation) { \r\n                                this.$store.commit('setValidation', {parent:arrelement.parent, uuid:this.activenode[0]})\r\n                            }\r\n                        }\r\n                    }\r\n                } \r\n                \r\n                */\r\n                /*if (this.activenode[0] != undefined && this.activenode[0].indexOf('-') !== -1) {\r\n                    document.getElementById(this.activenode[0]+'1').scrollIntoView(true)\r\n                }*/\r\n            //}\r\n        },\r\n        deleteElement () {\r\n            if (this.activenode[0] != null && this.activenode[0].indexOf('-') !== -1) {\r\n                this.dialogDeleteProject = true\r\n                this.strDelete = \"Element를 삭제하시겠습니까?\"\r\n            }\r\n        },\r\n        checkValidation(uuid) {\r\n            console.log('checkValidation')\r\n            if (uuid != null) {\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                var element = treeitem.find(data =>  data.uuid === uuid)\r\n\r\n                if(element.validation) { \r\n                    this.$store.commit('setValidation', {parent:element.parent, uuid:uuid})\r\n                }\r\n            }\r\n        },\r\n        renameElement() {\r\n            //console.log('renameElement')\r\n            if (this.rename.id == 0) {\r\n                this.rename.id = this.activenode[0]\r\n            }\r\n            this.showMenu = false\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.rename.id)\r\n            this.rename.name = arrelement.name\r\n            this.rename.parent = arrelement.parent\r\n        },\r\n        setRename() {\r\n            //console.log('setRename')\r\n            this.$store.commit('renameElement', {uuid: this.rename.id, parent: this.rename.parent, name: this.rename.name})\r\n            this.cancelRename()\r\n        },\r\n        cancelRename() {\r\n            this.rename = { id: 0, name: null, parent: null}\r\n        },\r\n        saveElement () {\r\n            EventBus.$emit('shortcut-keys', 'save')\r\n        },\r\n        openAll() {\r\n            this.$store.state.navigatorList[this.$store.state.openProjectIndex].children.forEach( fir => {\r\n                if(!this.openIds.some(item => item === fir.name)){\r\n                        this.openIds.push(fir.name)\r\n                }\r\n                fir.children.forEach(sec => {\r\n                    if(sec.children.length > 0) {\r\n                        if(!this.openIds.some(item => item === sec.name)){\r\n                            this.openIds.push(sec.name)\r\n                        }\r\n                    }\r\n                    if(fir.name == constant.Platform_str) {\r\n                        sec.children.forEach(thr => {\r\n                            if(thr.children.length > 0) {\r\n                                if(!this.openIds.some(item => item === thr.name)){\r\n                                    this.openIds.push(thr.name)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        closeAll() {\r\n            this.openIds = []\r\n        },\r\n        deleteProject() {\r\n            this.dialogDeleteProject = true\r\n            this.strDelete = \"Project를 삭제하시겠습니까?\"\r\n        },\r\n        okDelete() {\r\n            if(this.ismenu == 0) { //project\r\n                this.$store.commit( 'deleteProject')\r\n            } else if (this.ismenu == 2) {\r\n                console.log(this.activenode[0])\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                EventBus.$emit('delete-line', 'all')\r\n                this.$store.commit('deleteOpenElemnt', {uuid: '', isDeleteAll: true} )\r\n                this.$store.commit('deleteRefElement', {uuid:this.activenode[0]} ) // 내가 화살표의 끝인가?\r\n                this.$store.commit('deleteElementLine', {uuid:this.activenode[0]} ) // 내가 화살표의 시작인가?\r\n                this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n            }\r\n            this.cancelDelete()\r\n        },\r\n        cancelDelete() {\r\n            this.dialogDeleteProject = false\r\n            this.deletActive = false\r\n            this.activenode = []\r\n        },\r\n        copyElement() {\r\n            if (this.activenode[0] != null && this.activenode[0].indexOf('-') !== -1) {\r\n                var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                this.$store.commit('copyElement', {parent:arrelement.parent, uuid: this.activenode[0]} )\r\n            }\r\n        },\r\n    },\r\n})\r\n</script>\r\n"],"sourceRoot":"src/components"}]}