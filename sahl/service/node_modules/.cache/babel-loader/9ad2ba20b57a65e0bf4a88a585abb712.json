{"remainingRequest":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js!D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\UCMSoftwareCluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\UCMSoftwareCluster.vue","mtime":1662087345888},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UCMSoftwareCluster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView && zoomvalue > $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                                <v-btn  icon @click=\"showSoftwareCluster\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Software Cluster</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Software Cluster</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputSoftwareClusterName' outlined dense></v-text-field>\r\n                            <v-text-field v-model=\"element.category\" label=\"Category\" placeholder=\"string\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.idVendor\" label=\"Vendor ID\" placeholder=\"Integer\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-text-field v-model=\"element.version\" label=\"Version\" placeholder=\"string\" style=\"height: 45px;\"  outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showSDGS\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isSDGSOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Admin Data\r\n                                    <v-btn @click=\"isCheckSDGS\" text x-small color=\"indigo\" v-if=\"isSDGSOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isSDGSOpenClose && isdeleteSDGSItem\" @click=\"deletSDGS\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isSDGSOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectSDGS\" :headers=\"headerSDGS\" :items=\"element.sdgs\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteSDGSItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteSDGSItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @open=\"openSDGS(idx)\" @cancel=\"cancelSDGS\" @save=\"editSDGS(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-select v-model=\"editSDGSItem.sdg\" :items=\"selSDG\" label=\"SDG\" @click=\"setactiveUUID()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-text-field v-model=\"editSDGSItem.sd\" label=\"SD\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelSDGS\" @save=\"addSDGS()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-select v-model=\"editSDGSItem.sdg\" :items=\"selSDG\" label=\"SDG\" @click=\"setactiveUUID()\" outlined dense style=\"height: 45px;\"></v-select>\r\n                                                                <v-text-field v-model=\"editSDGSItem.sd\" label=\"SD\" placeholder=\"String\" @click=\"setactiveUUID\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCExecutable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showExecutable\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isExecutableOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained AR Element Refs\r\n                                    <v-btn @click=\"isCheckExecutable\" text x-small color=\"indigo\" v-if=\"isExecutableOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isExecutableOpenClose && isdeleteExecutableItem\" @click=\"deletExecutable\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isExecutableOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectExecutable\" :headers=\"headerExecutable\" :items=\"element.executable\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteExecutableItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteExecutableItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @cancel=\"cancelExecutable\" @open=\"openExecutable(idx)\" @save=\"editExecutable(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editExecutableItem.execut' label='Contained AR Element Ref' :items='selExecutable' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingExecutable\" clearable @click=\"setExecutableSelect()\" \r\n                                                                            @click:clear='clearExecutableRef' @blur=\"isEditingExecutable=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelExecutable\" @save=\"addExecutable()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editExecutableItem.execut' label='Contained AR Element Ref' :items='selExecutable' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingExecutable\" clearable @click=\"setExecutableSelect()\" \r\n                                                                            @click:clear='clearExecutableRef' @blur=\"isEditingExecutable=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newExecutable\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCMachineD'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showMachineD\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isMachineDOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Fibex Element Refs\r\n                                    <v-btn @click=\"isCheckMachineD\" text x-small color=\"indigo\" v-if=\"isMachineDOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isMachineDOpenClose && isdeleteMachineDItem\" @click=\"deletMachineD\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isMachineDOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectMachineD\" :headers=\"headerMachineD\" :items=\"element.machineD\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteMachineDItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteMachineDItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @cancel=\"cancelMachineD\" @open=\"openMachineD(idx)\" @save=\"editMachineD(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editMachineDItem.machine' label='Contained Fibex Element Ref' :items='selMachineD' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingMachineD\" clearable @click=\"setMachineDSelect()\" \r\n                                                                            @click:clear='clearMachineDRef' @blur=\"isEditingMachineD=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachineD\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelMachineD\" @save=\"addMachineD()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editMachineDItem.machine' label='Contained Fibex Element Ref' :items='selMachineD' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingMachineD\" clearable @click=\"setMachineDSelect()\" \r\n                                                                            @click:clear='clearMachineDRef' @blur=\"isEditingMachineD=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachineD\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCtoMachine'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showToMachineM\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isToMachineMOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Package Element Refs\r\n                                    <v-btn @click=\"isCheckToMachineM\" text x-small color=\"indigo\" v-if=\"isToMachineMOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isToMachineMOpenClose && isdeleteToMachineMItem\" @click=\"deletToMachineM\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isToMachineMOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectToMachineM\" :headers=\"headerToMachineM\" :items=\"element.toMachine\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteToMachineMItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteToMachineMItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @cancel=\"cancelToMachineM\" @open=\"openToMachineM(idx)\" @save=\"editToMachineM(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editToMachineMItem.mapping' label='Contained Package Element Ref' :items='selToMachineM' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingToMachineM\" clearable @click=\"setToMachineMSelect()\" \r\n                                                                            @click:clear='clearToMachineMRef' @blur=\"isEditingToMachineM=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newToMachineM\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelToMachineM\" @save=\"addToMachineM()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editToMachineMItem.mapping' label='Contained Package Element Ref' :items='selToMachineM' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingToMachineM\" clearable @click=\"setToMachineMSelect()\" \r\n                                                                            @click:clear='clearToMachineMRef' @blur=\"isEditingToMachineM=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newToMachineM\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCProcess'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showProcess\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isProcessOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Contained Process Refs\r\n                                    <v-btn @click=\"isCheckProcess\" text x-small color=\"indigo\" v-if=\"isProcessOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isProcessOpenClose && isdeleteProcessItem\" @click=\"deletProcess\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isProcessOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectProcess\" :headers=\"headerProcess\" :items=\"element.process\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteProcessItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteProcessItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @cancel=\"cancelProcess\" @open=\"openProcess(idx)\" @save=\"editProcess(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editProcessItem.pro' label='Contained Process Ref' :items='selProcess' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingProcess\" clearable @click=\"setProcessSelect()\" \r\n                                                                            @click:clear='clearProcessRef' @blur=\"isEditingProcess=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelProcess\" @save=\"addProcess()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editProcessItem.pro' label='Contained Process Ref' :items='selProcess' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingProcess\" clearable @click=\"setProcessSelect()\" \r\n                                                                            @click:clear='clearProcessRef' @blur=\"isEditingProcess=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/SCswc'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showSWCluster\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isSWClusterOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    Sub Software Cluster Refs\r\n                                    <v-btn @click=\"isCheckSWCluster\" text x-small color=\"indigo\" v-if=\"isSWClusterOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isSWClusterOpenClose && isdeleteSWClusterItem\" @click=\"deletSWCluster\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isSWClusterOpenClose\">\r\n                                    <v-data-table v-model=\"selectDelectSWCluster\" :headers=\"headerSWCluster\" :items=\"element.sswc\" :items-per-page='20'\r\n                                            :show-select=\"isdeleteSWClusterItem\" item-key=\"id\" height=\"140px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteSWClusterItem\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog persistent @cancel=\"cancelSWCluster\" @open=\"openSWCluster(idx)\" @save=\"editSWCluster(idx)\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSWClusterItem.swc' label='Sub Software Cluster Ref' :items='selSWCluster' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingSWCluster\" clearable @click=\"setSWClusterSelect()\" \r\n                                                                            @click:clear='clearSWClusterRef' @blur=\"isEditingSWCluster=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newSWCluster\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent @cancel=\"cancelSWCluster\" @save=\"addSWCluster()\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon>mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-autocomplete v-model='editSWClusterItem.swc' label='Sub Software Cluster Ref' :items='selSWCluster' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                            return-object :readonly=\"!isEditingSWCluster\" clearable @click=\"setSWClusterSelect()\" \r\n                                                                            @click:clear='clearSWClusterRef' @blur=\"isEditingSWCluster=true\" outlined dense style=\"height: 45px;\">\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newSWCluster\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement  || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar', 'location'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            dialogPath: false,\r\n            isSDGSOpenClose: true,\r\n            isdeleteSDGSItem: false,\r\n            selectDelectSDGS: [],\r\n            headerSDGS: [\r\n                { text: 'SDG', align: 'start', sortable: false, value: 'sdg' },\r\n                { text: 'SD', align: 'start', sortable: false, value: 'sd' },\r\n            ],\r\n            editSDGSItem: { sdg: null, sd : null, id: ''},\r\n            selSDG: [\"R20-11-CATEGORY\", \"LICENSES\"],\r\n\r\n            isExecutableOpenClose: true,\r\n            isEditingExecutable: true,\r\n            isdeleteExecutableItem: false,\r\n            selectDelectExecutable: [],\r\n            selExecutable: this.$store.getters.getExecutable,\r\n            headerExecutable: [\r\n                { text: 'Contained AR Element Ref', align: 'start', sortable: false, value: 'execut' },\r\n            ],\r\n            editExecutableItem: { execut : null, id:''},\r\n            deleteChangeLineExecutable : [],\r\n\r\n            isMachineDOpenClose: true,\r\n            isEditingMachineD: true,\r\n            isdeleteMachineDItem: false,\r\n            selectDelectMachineD: [],\r\n            selMachineD: this.$store.getters.getMachineDesign,\r\n            headerMachineD: [\r\n                { text: 'Contained Fibex Element Ref', align: 'start', sortable: false, value: 'machine' },\r\n            ],\r\n            editMachineDItem: { machine : null, id:''},\r\n            deleteChangeLineMachineD : [],\r\n\r\n            isToMachineMOpenClose: true,\r\n            isEditingToMachineM: true,\r\n            isdeleteToMachineMItem: false,\r\n            selectDelectToMachineM: [],\r\n            selToMachineM: this.$store.getters.getSomeIPToMachineMapping,\r\n            headerToMachineM: [\r\n                { text: 'Contained Package Element Ref', align: 'start', sortable: false, value: 'mapping' },\r\n            ],\r\n            editToMachineMItem: { mapping : null, id:''},\r\n            deleteChangeLineToMachineM : [],\r\n\r\n            isProcessOpenClose: true,\r\n            isEditingProcess: true,\r\n            isdeleteProcessItem: false,\r\n            selectDelectProcess: [],\r\n            selProcess: this.$store.getters.getProcess,\r\n            headerProcess: [\r\n                { text: 'Contained Process Ref', align: 'start', sortable: false, value: 'pro' },\r\n            ],\r\n            editProcessItem: { pro : null, id:''},\r\n            deleteChangeLineProcess : [],\r\n\r\n            isSWClusterOpenClose: true,\r\n            isEditingSWCluster: true,\r\n            isdeleteSWClusterItem: false,\r\n            selectDelectSWCluster: [],\r\n            selSWCluster: this.$store.getters.getSWCluster,\r\n            headerSWCluster: [\r\n                { text: 'Sub Software Cluster Ref', align: 'start', sortable: false, value: 'swc' },\r\n            ],\r\n            editSWClusterItem: { swc : null, id:''},\r\n            deleteChangeLineSWCluster : [],\r\n\r\n\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(uuid) \r\n        {\r\n            if(this.element.uuid == uuid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showSoftwareCluster () {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showSDGS() {\r\n            this.isSDGSOpenClose = this.isSDGSOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showExecutable() {\r\n            this.isExecutableOpenClose = this.isExecutableOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showMachineD() {\r\n            this.isMachineDOpenClose = this.isMachineDOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showToMachineM() {\r\n            this.isToMachineMOpenClose = this.isToMachineMOpenClose ? false : true\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showProcess() {\r\n            this.isProcessOpenClose = this.isProcessOpenClose ? false : true\r\n        },\r\n        showSWCluster() {\r\n            this.isSWClusterOpenClose = this.isSWClusterOpenClose ? false : true\r\n        },\r\n\r\n        inputSoftwareClusterName () {\r\n            this.$store.commit('editSoftWareCluster', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isCheckSDGS() {\r\n            if (this.isdeleteSDGSItem == true) {\r\n                this.isdeleteSDGSItem = false\r\n                this.selectDelectSDGS = []\r\n            } else {\r\n                this.isdeleteSDGSItem = true\r\n            }\r\n        },\r\n        deletSDGS() {\r\n            if (this.isdeleteSDGSItem == true) {\r\n                this.element.sdgs = this.element.sdgs.filter(item => {\r\n                        return this.selectDelectSDGS.indexOf(item) < 0 })\r\n\r\n                this.isdeleteSDGSItem = false\r\n                this.selectDelectSDGS = []\r\n            } \r\n        },\r\n        editSDGS(idx) {\r\n            this.element.sdgs[idx].sdg = this.editSDGSItem.sdg\r\n            this.element.sdgs[idx].sd = this.editSDGSItem.sd\r\n            this.cancelSDGS()\r\n        },\r\n        cancelSDGS() {\r\n            this.editSDGSItem.sdg = null\r\n            this.editSDGSItem.sd = null\r\n            this.editSDGSItem.id = ''\r\n            this.setactiveUUID()\r\n        },\r\n        openSDGS(idx) {\r\n            this.editSDGSItem.sdg = this.element.sdgs[idx].sdg\r\n            this.editSDGSItem.sd =  this.element.sdgs[idx].sd\r\n        },\r\n        addSDGS() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.sdgs.some(item => item.id === n)\r\n            }\r\n            this.editSDGSItem.id = n\r\n\r\n            const addObj = Object.assign({}, this.editSDGSItem)\r\n            this.element.sdgs.push(addObj)\r\n            this.cancelSDGS()\r\n        },\r\n        clearSDGS() {\r\n            this.editSDGSItem.sdg = null\r\n        },\r\n\r\n        isCheckExecutable() {\r\n            if (this.isdeleteExecutableItem == true) {\r\n                this.isdeleteExecutableItem = false\r\n                this.selectDelectExecutable = []\r\n            } else {\r\n                this.isdeleteExecutableItem = true\r\n            }\r\n        },\r\n        deletExecutable() {\r\n            if (this.isdeleteExecutableItem == true) {\r\n                for(let i=0; i<this.element.executable.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineExecutable.push({id:this.element.executable[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCExecutable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.executable = this.element.executable.filter(item => {\r\n                        return this.selectDelectExecutable.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.executable.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineExecutable.length; idx++) {\r\n                        if (this.element.executable[n].id == this.deleteChangeLineExecutable[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCExecutable-'+n, this.element.uuid+'/SCExecutable', this.deleteChangeLineExecutable[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteExecutableItem = false\r\n                this.selectDelectExecutable = []\r\n                this.deleteChangeLineExecutable = []\r\n            } \r\n        },\r\n        openExecutable(idx) {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            if ( this.element.executable[idx].execut != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.executable[idx].execut)\r\n                }\r\n                this.editExecutableItem.execut = { name: this.element.executable[idx].execut, uuid: endLine }\r\n            }\r\n        },\r\n        editExecutable(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCExecutable-'+idx)\r\n            if (endLine != undefined && this.editExecutableItem.execut == null) {\r\n                this.deleteLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                this.element.executable[idx].execut = null\r\n            } else if (endLine != undefined && endLine != this.editExecutableItem.execut.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCExecutable-'+idx)\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+idx, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.element.executable[idx].execut = this.editExecutableItem.execut.name\r\n            } else if (endLine == undefined && this.editExecutableItem.execut != null && this.editExecutableItem.execut.uuid != null) {\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+idx, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.element.executable[idx].execut = this.editExecutableItem.execut.name\r\n            }\r\n\r\n            this.cancelExecutable()\r\n        },\r\n        cancelExecutable() {\r\n            this.editExecutableItem.execut = null\r\n            this.setactiveUUID()\r\n        },\r\n        addExecutable() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.executable.some(item => item.id === n)\r\n            }\r\n            this.editExecutableItem.id = n\r\n\r\n            if( this.editExecutableItem.execut != null) {\r\n                var datacount = this.element.executable.length\r\n                this.newLine(this.element.uuid+'/SCExecutable-'+datacount, this.element.uuid+'/SCExecutable', this.editExecutableItem.execut.uuid)\r\n                this.editExecutableItem.execut = this.editExecutableItem.execut.name\r\n            }\r\n            const addObj = Object.assign({}, this.editExecutableItem)\r\n            this.element.executable.push(addObj);\r\n            this.cancelExecutable()\r\n        },\r\n        clearExecutableRef() {\r\n            this.isEditingExecutable = true\r\n            this.editExecutableItem.execut = null\r\n        },\r\n        setExecutableSelect() {\r\n            if (this.isEditingExecutable == true) {\r\n                if (this.editExecutableItem.execut != null && this.editExecutableItem.execut.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editExecutableItem.execut.uuid, element: constant.Executable_str} )\r\n                    document.getElementById(this.editExecutableItem.execut.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editExecutableItem.execut.uuid)\r\n                }\r\n                this.setExecutableList()\r\n                this.isEditingExecutable = false\r\n            } else {\r\n                this.isEditingExecutable = true\r\n            }\r\n        },\r\n        setExecutableList() {\r\n            this.selExecutable = this.$store.getters.getExecutable\r\n            this.setactiveUUID()\r\n        },\r\n        newExecutable() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameExecutable, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n            })\r\n            EventBus.$emit('add-element', constant.Executable_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckMachineD() {\r\n            if (this.isdeleteMachineDItem == true) {\r\n                this.isdeleteMachineDItem = false\r\n                this.selectDelectMachineD = []\r\n            } else {\r\n                this.isdeleteMachineDItem = true\r\n            }\r\n        },\r\n        deletMachineD() {\r\n            if (this.isdeleteMachineDItem == true) {\r\n                for(let i=0; i<this.element.machineD.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineMachineD.push({id:this.element.machineD[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCMachineD-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.machineD = this.element.machineD.filter(item => {\r\n                        return this.selectDelectMachineD.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.machineD.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineMachineD.length; idx++) {\r\n                        if (this.element.machineD[n].id == this.deleteChangeLineMachineD[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCMachineD-'+n, this.element.uuid+'/SCMachineD', this.deleteChangeLineMachineD[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteMachineDItem = false\r\n                this.selectDelectMachineD = []\r\n                this.deleteChangeLineMachineD = []\r\n            } \r\n        },\r\n        openMachineD(idx) {\r\n            this.selMachineD = this.$store.getters.getMachineDesign\r\n            if ( this.element.machineD[idx].machine != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.machineD[idx].machine)\r\n                }\r\n                this.editMachineDItem.machine = { name: this.element.machineD[idx].machine, uuid: endLine }\r\n            }\r\n        },\r\n        editMachineD(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCMachineD-'+idx)\r\n            if (endLine != undefined && this.editMachineDItem.machine == null) {\r\n                this.deleteLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                this.element.machineD[idx].machine = null\r\n            } else if (endLine != undefined && endLine != this.editMachineDItem.machine.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCMachineD-'+idx)\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+idx, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.element.machineD[idx].machine = this.editMachineDItem.machine.name\r\n            } else if (endLine == undefined && this.editMachineDItem.machine != null && this.editMachineDItem.machine.uuid != null) {\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+idx, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.element.machineD[idx].machine = this.editMachineDItem.machine.name\r\n            }\r\n\r\n            this.cancelMachineD()\r\n        },\r\n        cancelMachineD() {\r\n            this.editMachineDItem.machine = null\r\n            this.setactiveUUID()\r\n        },\r\n        addMachineD() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.machineD.some(item => item.id === n)\r\n            }\r\n            this.editMachineDItem.id = n\r\n\r\n            if( this.editMachineDItem.machine != null) {\r\n                var datacount = this.element.machineD.length\r\n                this.newLine(this.element.uuid+'/SCMachineD-'+datacount, this.element.uuid+'/SCMachineD', this.editMachineDItem.machine.uuid)\r\n                this.editMachineDItem.machine = this.editMachineDItem.machine.name\r\n            }\r\n            const addObj = Object.assign({}, this.editMachineDItem)\r\n            this.element.machineD.push(addObj);\r\n            this.cancelMachineD()\r\n        },\r\n        clearMachineDRef() {\r\n            this.isEditingMachineD = true\r\n            this.editMachineDItem.machine = null\r\n        },\r\n        setMachineDSelect() {\r\n            if (this.isEditingMachineD == true) {\r\n                if (this.editMachineDItem.machine != null && this.editMachineDItem.machine.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editMachineDItem.machine.uuid, element: constant.MachineDesigne_str} )\r\n                    document.getElementById(this.editMachineDItem.machine.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editMachineDItem.machine.uuid)\r\n                }\r\n                this.setMachineDList()\r\n                this.isEditingMachineD = false\r\n            } else {\r\n                this.isEditingMachineD = true\r\n            }\r\n        },\r\n        setMachineDList() {\r\n            this.selMachineD = this.$store.getters.getMachineDesign\r\n            this.setactiveUUID()\r\n        },\r\n        newMachineD() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementMachineDesign', {\r\n                name: this.$store.getters.getNameMachineDesign, path: '',\r\n                top: elementY, left: elementX, zindex: 10, access: null, resettimer:'', connector:[], servicediscover:[], icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.MachineDesigne_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckToMachineM() {\r\n            if (this.isdeleteToMachineMItem == true) {\r\n                this.isdeleteToMachineMItem = false\r\n                this.selectDelectToMachineM = []\r\n            } else {\r\n                this.isdeleteToMachineMItem = true\r\n            }\r\n        },\r\n        deletToMachineM() {\r\n            if (this.isdeleteToMachineMItem == true) {\r\n                for(let i=0; i<this.element.toMachine.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineToMachineM.push({id:this.element.toMachine[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCtoMachine-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.toMachine = this.element.toMachine.filter(item => {\r\n                        return this.selectDelectToMachineM.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.toMachine.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineToMachineM.length; idx++) {\r\n                        if (this.element.toMachine[n].id == this.deleteChangeLineToMachineM[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCtoMachine-'+n, this.element.uuid+'/SCtoMachine', this.deleteChangeLineToMachineM[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteToMachineMItem = false\r\n                this.selectDelectToMachineM = []\r\n                this.deleteChangeLineToMachineM = []\r\n            } \r\n        },\r\n        openToMachineM(idx) {\r\n            this.selToMachineM = this.$store.getters.getSomeIPToMachineMapping\r\n            if ( this.element.toMachine[idx].mapping != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getImplementationPath(this.element.toMachine[idx].mapping)\r\n                }\r\n                this.editToMachineMItem.mapping = { name: this.element.toMachine[idx].mapping, uuid: endLine }\r\n            }\r\n        },\r\n        editToMachineM(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n            if (endLine != undefined && this.editToMachineMItem.mapping == null) {\r\n                this.deleteLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                this.element.toMachine[idx].mapping = null\r\n            } else if (endLine != undefined && endLine != this.editToMachineMItem.mapping.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCtoMachine-'+idx)\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+idx, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.element.toMachine[idx].mapping = this.editToMachineMItem.mapping.name\r\n            } else if (endLine == undefined && this.editToMachineMItem.mapping != null && this.editToMachineMItem.mapping.uuid != null) {\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+idx, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.element.toMachine[idx].mapping = this.editToMachineMItem.mapping.name\r\n            }\r\n\r\n            this.cancelToMachineM()\r\n        },\r\n        cancelToMachineM() {\r\n            this.editToMachineMItem.mapping = null\r\n            this.setactiveUUID()\r\n        },\r\n        addToMachineM() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.toMachine.some(item => item.id === n)\r\n            }\r\n            this.editToMachineMItem.id = n\r\n\r\n            if( this.editToMachineMItem.mapping != null) {\r\n                var datacount = this.element.toMachine.length\r\n                this.newLine(this.element.uuid+'/SCtoMachine-'+datacount, this.element.uuid+'/SCtoMachine', this.editToMachineMItem.mapping.uuid)\r\n                this.editToMachineMItem.mapping = this.editToMachineMItem.mapping.name\r\n            }\r\n            const addObj = Object.assign({}, this.editToMachineMItem)\r\n            this.element.toMachine.push(addObj);\r\n            this.cancelToMachineM()\r\n        },\r\n        clearToMachineMRef() {\r\n            this.isEditingToMachineM = true\r\n            this.editToMachineMItem.mapping = null\r\n        },\r\n        setToMachineMSelect() {\r\n            if (this.isEditingToMachineM == true) {\r\n                if (this.editToMachineMItem.mapping != null && this.editToMachineMItem.mapping.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editToMachineMItem.mapping.uuid, element: constant.SomeIPToMachineMapping_str} )\r\n                    document.getElementById(this.editToMachineMItem.mapping.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editToMachineMItem.mapping.uuid)\r\n                }\r\n                this.setToMachineMList()\r\n                this.isEditingToMachineM = false\r\n            } else {\r\n                this.isEditingToMachineM = true\r\n            }\r\n        },\r\n        setToMachineMList() {\r\n            this.selToMachineM = this.$store.getters.getSomeIPToMachineMapping\r\n            this.setactiveUUID()\r\n        },\r\n        newToMachineM() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementSomeIPtoMachine', {\r\n                name: this.$store.getters.getNameSomeIPtoMachine, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                ccref: null, siref: null, tcp:'', udp: '',\r\n            })\r\n            EventBus.$emit('add-element', constant.SomeIPToMachineMapping_str)\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckProcess() {\r\n            if (this.isdeleteProcessItem == true) {\r\n                this.isdeleteProcessItem = false\r\n                this.selectDelectProcess = []\r\n            } else {\r\n                this.isdeleteProcessItem = true\r\n            }\r\n        },\r\n        deletProcess() {\r\n            if (this.isdeleteProcessItem == true) {\r\n                for(let i=0; i<this.element.process.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineProcess.push({id:this.element.process[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCProcess-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.process = this.element.process.filter(item => {\r\n                        return this.selectDelectProcess.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.process.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineProcess.length; idx++) {\r\n                        if (this.element.process[n].id == this.deleteChangeLineProcess[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCProcess-'+n, this.element.uuid+'/SCProcess', this.deleteChangeLineProcess[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteProcessItem = false\r\n                this.selectDelectProcess = []\r\n                this.deleteChangeLineProcess = []\r\n            } \r\n        },\r\n        openProcess(idx) {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            if ( this.element.process[idx].pro != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getProcessPath(this.element.process[idx].pro)\r\n                }\r\n                this.editProcessItem.pro = { name: this.element.process[idx].pro, uuid: endLine }\r\n            }\r\n        },\r\n        editProcess(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCProcess-'+idx)\r\n            if (endLine != undefined && this.editProcessItem.pro == null) {\r\n                this.deleteLine(this.element.uuid+'/SCProcess-'+idx)\r\n                this.element.process[idx].pro = null\r\n            } else if (endLine != undefined && endLine != this.editProcessItem.pro.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCProcess-'+idx)\r\n                this.newLine(this.element.uuid+'/SCProcess-'+idx, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.element.process[idx].pro = this.editProcessItem.pro.name\r\n            } else if (endLine == undefined && this.editProcessItem.pro != null && this.editProcessItem.pro.uuid != null) {\r\n                this.newLine(this.element.uuid+'/SCProcess-'+idx, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.element.process[idx].pro = this.editProcessItem.pro.name\r\n            }\r\n\r\n            this.cancelProcess()\r\n        },\r\n        cancelProcess() {\r\n            this.editProcessItem.pro = null\r\n            this.setactiveUUID()\r\n        },\r\n        addProcess() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.process.some(item => item.id === n)\r\n            }\r\n            this.editProcessItem.id = n\r\n\r\n            if( this.editProcessItem.pro != null) {\r\n                var datacount = this.element.process.length\r\n                this.newLine(this.element.uuid+'/SCProcess-'+datacount, this.element.uuid+'/SCProcess', this.editProcessItem.pro.uuid)\r\n                this.editProcessItem.pro = this.editProcessItem.pro.name\r\n            }\r\n            const addObj = Object.assign({}, this.editProcessItem)\r\n            this.element.process.push(addObj);\r\n            this.cancelProcess()\r\n        },\r\n        clearProcessRef() {\r\n            this.isEditingProcess = true\r\n            this.editProcessItem.pro = null\r\n        },\r\n        setProcessSelect() {\r\n            if (this.isEditingProcess == true) {\r\n                if (this.editProcessItem.pro != null && this.editProcessItem.pro.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editProcessItem.pro.uuid, element: constant.Process_str} )\r\n                    document.getElementById(this.editProcessItem.pro.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editProcessItem.pro.uuid)\r\n                }\r\n                this.setProcessList()\r\n                this.isEditingProcess = false\r\n            } else {\r\n                this.isEditingProcess = true\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementProcess', {\r\n                name: this.$store.getters.getNameProcess, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                logLevel: null, logPath: '', logProDesc: '', logProID: '', restart: '', preMapping: null, logMode: [],\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        isCheckSWCluster() {\r\n            if (this.isdeleteSWClusterItem == true) {\r\n                this.isdeleteSWClusterItem = false\r\n                this.selectDelectSWCluster = []\r\n            } else {\r\n                this.isdeleteSWClusterItem = true\r\n            }\r\n        },\r\n        deletSWCluster() {\r\n            if (this.isdeleteSWClusterItem == true) {\r\n                for(let i=0; i<this.element.sswc.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.deleteChangeLineSWCluster.push({id:this.element.sswc[i].id, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/SCswc-'+i)\r\n                    }\r\n                }\r\n\r\n                this.element.sswc = this.element.sswc.filter(item => {\r\n                        return this.selectDelectSWCluster.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.sswc.length; n++) {\r\n                    for(let idx=0; idx<this.deleteChangeLineSWCluster.length; idx++) {\r\n                        if (this.element.sswc[n].id == this.deleteChangeLineSWCluster[idx].id) {\r\n                            this.newLine(this.element.uuid+'/SCswc-'+n, this.element.uuid+'/SCswc', this.deleteChangeLineSWCluster[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteSWClusterItem = false\r\n                this.selectDelectSWCluster = []\r\n                this.deleteChangeLineSWCluster = []\r\n            } \r\n        },\r\n        openSWCluster(idx) {\r\n            this.selSWCluster = this.$store.getters.getSWCluster\r\n            if ( this.element.sswc[idx].swc != null) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+idx)\r\n                if (endLine == undefined) {\r\n                    endLine = this.$store.getters.getSWClusterPath(this.element.sswc[idx].swc)\r\n                }\r\n                this.editSWClusterItem.swc = { name: this.element.sswc[idx].swc, uuid: endLine }\r\n            }\r\n        },\r\n        editSWCluster(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/SCswc-'+idx)\r\n            if (endLine != undefined && this.editSWClusterItem.swc == null) {\r\n                this.deleteLine(this.element.uuid+'/SCswc-'+idx)\r\n                this.element.sswc[idx].swc = null\r\n            } else if (endLine != undefined && endLine != this.editSWClusterItem.swc.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/SCswc-'+idx)\r\n                this.newLine(this.element.uuid+'/SCswc-'+idx, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.element.sswc[idx].swc = this.editSWClusterItem.swc.name\r\n            } else if (endLine == undefined && this.editSWClusterItem.swc != null && this.editSWClusterItem.swc.uuid != null) {\r\n                this.newLine(this.element.uuid+'/SCswc-'+idx, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.element.sswc[idx].swc = this.editSWClusterItem.swc.name\r\n            }\r\n\r\n            this.cancelSWCluster()\r\n        },\r\n        cancelSWCluster() {\r\n            this.editSWClusterItem.swc = null\r\n            this.setactiveUUID()\r\n        },\r\n        addSWCluster() {\r\n            let res = true, n = 0\r\n            while (res) {\r\n                n++\r\n                res = this.element.sswc.some(item => item.id === n)\r\n            }\r\n            this.editSWClusterItem.id = n\r\n\r\n            if( this.editSWClusterItem.swc != null) {\r\n                var datacount = this.element.sswc.length\r\n                this.newLine(this.element.uuid+'/SCswc-'+datacount, this.element.uuid+'/SCswc', this.editSWClusterItem.swc.uuid)\r\n                this.editSWClusterItem.swc = this.editSWClusterItem.swc.name\r\n            }\r\n            const addObj = Object.assign({}, this.editSWClusterItem)\r\n            this.element.sswc.push(addObj);\r\n            this.cancelSWCluster()\r\n        },\r\n        clearSWClusterRef() {\r\n            this.isEditingSWCluster = true\r\n            this.editSWClusterItem.swc = null\r\n        },\r\n        setSWClusterSelect() {\r\n            if (this.isEditingSWCluster == true) {\r\n                if (this.editSWClusterItem.swc != null && this.editSWClusterItem.swc.uuid != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editSWClusterItem.swc.uuid, element: constant.SWCluster_str} )\r\n                    document.getElementById(this.editSWClusterItem.swc.uuid+this.location).scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                    EventBus.$emit('active-element', this.editSWClusterItem.swc.uuid)\r\n                }\r\n                this.setSWClusterList()\r\n                this.isEditingSWCluster = false\r\n            } else {\r\n                this.isEditingSWCluster = true\r\n            }\r\n        },\r\n        setSWClusterList() {\r\n            this.selSWCluster = this.$store.getters.getSWCluster\r\n            this.setactiveUUID()\r\n        },\r\n        newSWCluster() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementSoftWareCluster', {\r\n                name: this.$store.getters.getNameSoftWareCluster,path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                category: '', inVendor: '', version: '', sdgs: [], executable: [], machineD: [], toMachine: [], process: [], sswc: [],\r\n            })\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editSoftWareCluster', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n\r\n}\r\n</script>"],"sourceRoot":"src/components"}]}