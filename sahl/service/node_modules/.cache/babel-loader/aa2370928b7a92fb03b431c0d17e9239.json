{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\SWComponents.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\SWComponents.vue","mtime":1650612141299},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SWComponents.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showSWComponent\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>SW Component Type</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>SW Component Type</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputSWComponentName' outlined dense></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                            <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showPort\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            Port\r\n                        </div>\r\n                        <v-card-text v-if=\"isPortOpenClose\">\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/pporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showPPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isPPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    P Port Prototype\r\n                                    <v-btn @click=\"isPPortCheckbox\" text x-small color=\"indigo\" v-if=\"isPPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isPPortOpenClose && isdeletePPort\" @click=\"deletePPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isPPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectPPort\" :headers=\"headerPPort\" :items=\"element.pport\"\r\n                                            :show-select=\"isdeletePPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeletePPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openPPort(idx)\" @cancel=\"editPPort(idx)\" @save=\"cancelPPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPPortItem.interface' label='Provided Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPPort\"  @click=\"setPPortSelect()\" @blur=\"isEditingPPort=true\"\r\n                                                                        @click:clear='clearPportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addPPort()\" @save=\"cancelPPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPPortItem.interface' label='Provided Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPPort\"  @click=\"setPPortSelect()\" @blur=\"isEditingPPort=true\"\r\n                                                                        @click:clear='clearPportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/prporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showPRPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isPRPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    PR Port Prototype\r\n                                    <v-btn @click=\"isPRPortCheckbox\" text x-small color=\"indigo\" v-if=\"isPRPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isPRPortOpenClose && isdeletePRPort\" @click=\"deletePRPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isPRPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectPRPort\" :headers=\"headerPRPort\" :items=\"element.prport\"\r\n                                            :show-select=\"isdeletePRPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeletePRPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openPRPort(idx)\" @cancel=\"editPRPort(idx)\" @save=\"cancelPRPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPRPortItem.interface' label='Provided Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPRPort\"  @click=\"setPRPortSelect()\" @blur=\"isEditingPRPort=true\"\r\n                                                                        @click:clear='clearPRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addPRPort()\" @save=\"cancelPRPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editPRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editPRPortItem.interface' label='Provided Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingPRPort\"  @click=\"setPRPortSelect()\" @blur=\"isEditingPRPort=true\"\r\n                                                                        @click:clear='clearPRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" :id=\"element.uuid+'/rporttable'\" style=\"height:20px\">\r\n                                    <v-hover v-slot=\"{ hover }\">\r\n                                        <v-btn text @click=\"showRPort\" x-small color=\"indigo\">\r\n                                            <v-icon>{{ isRPortOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                        </v-btn>\r\n                                    </v-hover>\r\n                                    R Port Prototype\r\n                                    <v-btn @click=\"isRPortCheckbox\" text x-small color=\"indigo\" v-if=\"isRPortOpenClose\">\r\n                                        <v-icon>mdi-check</v-icon>\r\n                                    </v-btn>\r\n                                    <v-btn v-if=\"isRPortOpenClose && isdeleteRPort\" @click=\"deleteRPort\" text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-minus</v-icon>\r\n                                    </v-btn>\r\n                                </div>\r\n                                <v-card-text v-if=\"isRPortOpenClose\">  \r\n                                    <v-data-table v-model=\"selectDelectRPort\" :headers=\"headerRPort\" :items=\"element.rport\"\r\n                                            :show-select=\"isdeleteRPort\" item-key=\"name\" height=\"100px\" dense hide-default-footer >\r\n                                        <template v-slot:item.data-table-select=\"{ isSelected, select }\">\r\n                                            <v-simple-checkbox color=\"green\" :value=\"isSelected\" :ripple=\"false\" @input=\"select($event)\"></v-simple-checkbox>\r\n                                        </template>\r\n                                        <template v-if=\"!isdeleteRPort\" v-slot:body=\"{ items, headers }\">\r\n                                            <tbody>\r\n                                                <tr v-for=\"(item,idx) in items\" :key=\"idx\">\r\n                                                    <td v-for=\"(header,key) in headers\" :key=\"key\">\r\n                                                        <v-edit-dialog v-if=\"header.value != 'sort'\" persistent cancel-text='Ok' save-text=\"Cancel\" @open=\"openRPort(idx)\" @cancel=\"editRPort(idx)\" @save=\"cancelRPort\" large >\r\n                                                            {{item[header.value]}}\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editRPortItem.interface' label='Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingRPort\"  @click=\"setRPortSelect()\" @blur=\"isEditingRPort=true\"\r\n                                                                        @click:clear='clearRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan=\"3\">\r\n                                                        <v-edit-dialog  large persistent cancel-text='Ok' save-text=\"Cancel\" @cancel=\"addRPort()\" @save=\"cancelRPort\"> \r\n                                                            <v-btn outlined color=\"indigo\" dense text small block width=\"270px\" >\r\n                                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                                            </v-btn>\r\n                                                            <template v-slot:input>\r\n                                                                <br>\r\n                                                                <v-text-field v-model=\"editRPortItem.name\" label=\"name\" :rules=\"rules.name\" @click=\"setactiveUUID\" placeholder=\"String\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                                                <v-autocomplete v-model='editRPortItem.interface' label='Required Interface Tref' :items='selServiceInterface' item-text='name' item-value=\"uuid\" class=\"lable-placeholer-color\"\r\n                                                                        return-object :readonly=\"!isEditingRPort\"  @click=\"setRPortSelect()\" @blur=\"isEditingRPort=true\"\r\n                                                                        @click:clear='clearRportRef' clearable>\r\n                                                                    <template v-slot:append-item>\r\n                                                                        <v-btn outlined color=\"indigo\" dense text small block @click=\"newServiceInterface\">\r\n                                                                            <v-icon >mdi-plus</v-icon>New Item\r\n                                                                        </v-btn>\r\n                                                                    </template>\r\n                                                                </v-autocomplete>\r\n                                                            </template>\r\n                                                        </v-edit-dialog>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </template>\r\n                                    </v-data-table>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isPortOpenClose: true,\r\n            isPPortOpenClose: true,\r\n            isPRPortOpenClose: true,\r\n            isRPortOpenClose: true,\r\n            isdeletePPort: false,\r\n            isdeletePRPort: false,\r\n            isdeleteRPort: false,\r\n            isEditingPPort: true,\r\n            isEditingPRPort: true,\r\n            isEditingRPort: true,\r\n            selectDelectPPort: [],\r\n            selectDelectPRPort: [],\r\n            selectDelectRPort: [],\r\n            headerPPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Provided Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            headerPRPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Provided Required Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            headerRPort: [\r\n                { text: 'Name', align: 'start', sortable: false, value: 'name' },\r\n                { text: 'Required Interface', sortable: false, value: 'interface' },\r\n            ],\r\n            editPPortItem: { name: '', interface: null},\r\n            editPRPortItem: { name: '', interface: null},\r\n            editRPortItem: { name: '', interface: null},\r\n            defaultItem: { name:'', interface: null},\r\n            changeLinePPort : [],\r\n            changeLinePRPort : [],\r\n            changeLineRPort : [],\r\n\r\n            selServiceInterface: this.$store.getters.getServiceInterface,\r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showSWComponent() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showPort() {\r\n            this.isPortOpenClose = this.isPortOpenClose ? false : true\r\n        },\r\n        showPPort() {\r\n            this.isPPortOpenClose = this.isPPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showPRPort() {\r\n            this.isPRPortOpenClose = this.isPRPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        showRPort() {\r\n            this.isRPortOpenClose = this.isRPortOpenClose ? false : true\r\n            // 선을 다시 그려줘야 하기 때문에\r\n            EventBus.$emit('drawLine')\r\n        },\r\n        inputSWComponentName() {\r\n            this.$store.commit('editSWComponents', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        },\r\n\r\n        isPPortCheckbox() {\r\n            if (this.isdeletePPort == true) {\r\n                this.selectDelectPPort = []\r\n                this.isdeletePPort = false\r\n            } else {\r\n                this.isdeletePPort = true\r\n            }\r\n        },\r\n        deletePPort() {\r\n            if (this.isdeletePPort == true) {\r\n                for(let i=0; i<this.element.pport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLinePPort.push({name:this.element.pport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/pporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'pPort', deletItemList: this.selectDelectPPort, path: this.element.path, name: this.element.name})\r\n                this.element.pport = this.element.pport.filter(item => {\r\n                         return this.selectDelectPPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.pport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLinePPort.length; idx++) {\r\n                        if (this.element.pport[n].name == this.changeLinePPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/pporttable-'+n, this.element.uuid+'/pporttable', this.changeLinePPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeletePPort = false\r\n                this.selectDelectPPort = []\r\n                this.changeLinePPort = []\r\n            } \r\n        },\r\n        openPPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editPPortItem.name = this.element.pport[idx].name\r\n            if ( this.element.pport[idx].interface != null) {\r\n                this.editPPortItem.interface = { name :this.element.pport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+idx) }\r\n            }\r\n        },\r\n        editPPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/pporttable-'+idx)\r\n            if (endLine != undefined && this.editPPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/pporttable-'+idx)\r\n                this.element.pport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editPPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/pporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/pporttable-'+idx, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.element.pport[idx].interface = this.editPPortItem.interface.name\r\n            } else if (endLine == undefined && this.editPPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/pporttable-'+idx, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.element.pport[idx].interface = this.editPPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.pport[idx].name != this.editPPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'pPort', listname: this.editPPortItem.name} )\r\n            }\r\n\r\n            this.element.pport[idx].name = this.editPPortItem.name\r\n            this.cancelPPort()\r\n        },\r\n        cancelPPort() {\r\n            this.editPPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addPPort() {\r\n            if (this.editPPortItem.interface != null) {\r\n                var datacount = this.element.pport.length\r\n                this.newLine(this.element.uuid+'/pporttable-'+datacount, this.element.uuid+'/pporttable', this.editPPortItem.interface.uuid)\r\n                this.editPPortItem.interface = this.editPPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editPPortItem);\r\n            this.element.pport.push(addObj);\r\n            this.cancelPPort()\r\n        },\r\n        setPPortSelect() {\r\n            if (this.isEditingPPort == true) {\r\n                console.log('setPPortSelect  >>' + this.editPPortItem.interface)\r\n                if (this.editPPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editPPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingPPort = false\r\n            } else {\r\n                this.isEditingPPort = true\r\n            }\r\n        },\r\n        clearPportRef() {\r\n            this.isEditingPPort = true\r\n            this.editPPortItem.interface = null\r\n        },\r\n\r\n        isPRPortCheckbox() {\r\n            if (this.isdeletePRPort == true) {\r\n                this.selectDelectPRPort = []\r\n                this.isdeletePRPort = false\r\n            } else {\r\n                this.isdeletePRPort = true\r\n            }\r\n        },\r\n        deletePRPort() {\r\n            if (this.isdeletePRPort == true) {\r\n                for(let i=0; i<this.element.prport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLinePRPort.push({name:this.element.prport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/prporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'prPort', deletItemList: this.selectDelectPRPort, path: this.element.path, name: this.element.name})\r\n                this.element.prport = this.element.prport.filter(item => {\r\n                         return this.selectDelectPRPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.prport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLinePRPort.length; idx++) {\r\n                        if (this.element.prport[n].name == this.changeLinePRPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/prporttable-'+n, this.element.uuid+'/prporttable', this.changeLinePRPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeletePRPort = false\r\n                this.selectDelectPRPort = []\r\n                this.changeLinePRPort = []\r\n            } \r\n        },\r\n        openPRPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editPRPortItem.name = this.element.prport[idx].name\r\n            if ( this.element.prport[idx].interface != null) {\r\n                this.editPRPortItem.interface = { name :this.element.prport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+idx) }\r\n            }\r\n        },\r\n        editPRPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/prporttable-'+idx)\r\n            if (endLine != undefined && this.editPRPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/prporttable-'+idx)\r\n                this.element.prport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editPRPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/prporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/prporttable-'+idx, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.element.prport[idx].interface = this.editPRPortItem.interface.name\r\n            } else if (endLine == undefined && this.editPRPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/prporttable-'+idx, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.element.prport[idx].interface = this.editPRPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.prport[idx].name != this.editPRPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'prPort', listname: this.editPRPortItem.name} )\r\n            }\r\n\r\n            this.element.prport[idx].name = this.editPRPortItem.name\r\n            this.cancelPRPort()\r\n        },\r\n        cancelPRPort() {\r\n            this.editPRPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addPRPort() {\r\n            if (this.editPRPortItem.interface != null) {\r\n                var datacount = this.element.prport.length\r\n                this.newLine(this.element.uuid+'/prporttable-'+datacount, this.element.uuid+'/prporttable', this.editPRPortItem.interface.uuid)\r\n                this.editPRPortItem.interface = this.editPRPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editPRPortItem);\r\n            this.element.prport.push(addObj);\r\n            this.cancelPRPort()\r\n        },\r\n        setPRPortSelect() {\r\n            if (this.isEditingPRPort == true) {\r\n                if (this.editPRPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editPRPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingPRPort = false\r\n            } else {\r\n                this.isEditingPRPort = true\r\n            }\r\n        },\r\n        clearPRportRef() {\r\n            this.isEditingPRPort = true\r\n            this.editPRPortItem.interface = null\r\n        },\r\n\r\n        isRPortCheckbox() {\r\n            if (this.isdeleteRPort == true) {\r\n                this.selectDelectRPort = []\r\n                this.isdeleteRPort = false\r\n            } else {\r\n                this.isdeleteRPort = true\r\n            }\r\n        },\r\n        deleteRPort() {\r\n            if (this.isdeleteRPort == true) {\r\n                for(let i=0; i<this.element.rport.length; i++){\r\n                    var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+i)\r\n                    if(endLine != undefined) {\r\n                        this.changeLineRPort.push({name:this.element.rport[i].name, endLine:endLine})\r\n                        this.deleteLine(this.element.uuid+'/rporttable-'+i)\r\n                    }\r\n                }\r\n\r\n                this.$store.commit('deleteRefTable', {deleteName:'rPort', deletItemList: this.selectDelectRPort, path: this.element.path, name: this.element.name})\r\n                this.element.rport = this.element.rport.filter(item => {\r\n                         return this.selectDelectRPort.indexOf(item) < 0 })\r\n\r\n                for(let n=0; n<this.element.rport.length; n++) {\r\n                    for(let idx=0; idx<this.changeLineRPort.length; idx++) {\r\n                        if (this.element.rport[n].name == this.changeLineRPort[idx].name) {\r\n                            this.newLine(this.element.uuid+'/rporttable-'+n, this.element.uuid+'/rporttable', this.changeLineRPort[idx].endLine)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isdeleteRPort = false\r\n                this.selectDelectRPort = []\r\n                this.changeLineRPort = []\r\n            } \r\n        },\r\n        openRPort(idx) {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.editRPortItem.name = this.element.rport[idx].name\r\n            if ( this.element.rport[idx].interface != null) {\r\n                this.editRPortItem.interface = { name :this.element.rport[idx].interface, uuid: this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+idx) }\r\n            }\r\n        },\r\n        editRPort(idx) {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/rporttable-'+idx)\r\n            if (endLine != undefined && this.editRPortItem.interface == null) {\r\n                this.deleteLine(this.element.uuid+'/rporttable-'+idx)\r\n                this.element.rport[idx].interface = null\r\n            } else if (endLine != undefined && endLine != this.editRPortItem.interface.uuid) {\r\n                //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                this.deleteLine(this.element.uuid+'/rporttable-'+idx)\r\n                this.newLine(this.element.uuid+'/rporttable-'+idx, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.element.rport[idx].interface = this.editRPortItem.interface.name\r\n            } else if (endLine == undefined && this.editRPortItem.interface != null) {\r\n                this.newLine(this.element.uuid+'/rporttable-'+idx, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.element.rport[idx].interface = this.editRPortItem.interface.name\r\n            }\r\n\r\n            if (this.element.rport[idx].name != this.editRPortItem.name){\r\n                this.$store.commit('changePathElement', {uuid:this.element.uuid, path: this.element.path, name: this.element.name,\r\n                                                          changeName: 'rPort', listname: this.editRPortItem.name} )\r\n            }\r\n\r\n            this.element.rport[idx].name = this.editRPortItem.name\r\n            this.cancelRPort()\r\n        },\r\n        cancelRPort() {\r\n            this.editRPortItem = Object.assign({}, this.defaultItem)\r\n            this.setactiveUUID()\r\n        },\r\n        addRPort() {\r\n            if( this.editRPortItem.interface != null) {\r\n                var datacount = this.element.rport.length\r\n                this.newLine(this.element.uuid+'/rporttable-'+datacount, this.element.uuid+'/rporttable', this.editRPortItem.interface.uuid)\r\n                this.editRPortItem.interface = this.editRPortItem.interface.name\r\n            }\r\n            const addObj = Object.assign({}, this.editRPortItem);\r\n            this.element.rport.push(addObj);\r\n            this.cancelRPort()\r\n        },\r\n        setRPortSelect() {\r\n            if (this.isEditingRPort == true) {\r\n                if (this.editRPortItem.interface != null) {\r\n                    this.$store.commit('setDetailView', {uuid: this.editRPortItem.interface.uuid, element: constant.ServiceInterface_str} )\r\n                }\r\n                this.setServiceInterfaceList()\r\n                this.isEditingRPort = false\r\n            } else {\r\n                this.isEditingRPort = true\r\n            }\r\n        },\r\n        clearRportRef() {\r\n            this.isEditingRPort = true\r\n            this.editRPortItem.interface = null\r\n        },\r\n\r\n        setServiceInterfaceList() {\r\n            this.selServiceInterface = this.$store.getters.getServiceInterface\r\n            this.setactiveUUID()\r\n        },\r\n        newServiceInterface() {\r\n            this.$store.commit('addElementService', {\r\n                    name: this.$store.getters.getNameServiceInterface, input: false, path: '',\r\n                    top: this.element.top+100, left: this.element.left+ 300 , zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                    versionMaj:'', versionMin:'', namespace:'', events:[], fields:[], methods:[], isservice: '',\r\n                })\r\n            EventBus.$emit('add-element', constant.ServiceInterface_str)\r\n            EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n            EventBus.$emit('add-element', constant.Service_str)\r\n            this.$store.commit('editSWComponents', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editSWComponents', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}