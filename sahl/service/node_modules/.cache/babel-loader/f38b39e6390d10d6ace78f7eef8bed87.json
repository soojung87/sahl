{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\navigatorbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\navigatorbar.vue","mtime":1645064187397},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["navigatorbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <v-icon class=\"subtitle-1 green\" style=\"margin:0 5px 0 15px;\" dark >mdi-view-dashboard</v-icon>\r\n                    SAHL\r\n        <v-divider></v-divider>\r\n        <v-list dense>\r\n            <v-list-group v-for=\"(item,idx) in navigatorList\" :key=\"idx\"\r\n                    prepend-icon=\"mdi-alpha-p-circle-outline\" no-action sub-group> <!--  sub-group 빼면 리스트가 하나씩만 보인다-->\r\n                <template v-slot:activator>\r\n                    <v-list-item-icon v-if=\"item.validation\">\r\n                        <v-icon color=\"red\" dark>mdi-exclamation</v-icon>\r\n                    </v-list-item-icon>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.name\" style=\"fontsize:20px\" @contextmenu=\"show($event, true)\"></v-list-item-title>\r\n                    </v-list-item-content>\r\n                </template> \r\n                <v-card flat @contextmenu=\"show($event,false)\">\r\n                    <v-treeview ref=\"tree\" :items=\"item.children\" activatable item-key=\"uuid\" :open.sync=\"openIds\" :active.sync=\"activenode\" dense @update:open=\"openNode\" @update:active=\"activeElement()\" class=\"caption\">\r\n                        <template v-slot:prepend=\"{ item, open }\">\r\n                            <!-- <v-badge v-if=\"item.validation\" bordered dot color=\"red\" offset-x=\"10\" offset-y=\"12\"> -->\r\n                            <div v-if=\"item.validation\">\r\n                                <v-icon color=\"red\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    mdi-folder-alert\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children\" color=\"red\">mdi-alpha-e-circle-outline</v-icon>\r\n                                <v-icon v-else color=\"red\">mdi-clipboard-alert-outline</v-icon>\r\n                            </div>\r\n                            <!-- </v-badge> -->\r\n                            <div v-else>\r\n                                <v-icon color=\"#ECB35D\" v-if=\"item.icon=='mdi-folder'\" >\r\n                                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                                </v-icon>\r\n                                <v-icon v-else-if=\"item.children && item.children.length == 0\" color=\"primary\">mdi-alpha-e</v-icon>\r\n                                <v-icon v-else color=\"primary\">{{item.icon}}</v-icon>\r\n                            </div>\r\n                        </template>\r\n                    </v-treeview>\r\n                </v-card>\r\n            </v-list-group>\r\n        </v-list>\r\n        <v-menu v-model=\"showMenu\" :position-x=\"x\" :position-y=\"y\" absolute offset-y>\r\n            <v-list v-if=\"isProjectmenu\" dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuProjectitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../main'\r\nimport constant from \"../store/constants.js\"\r\n\r\n\r\nexport default({\r\n    computed: {\r\n        SAHLProject () {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n    },\r\n    watch:{\r\n        activenode() {\r\n            if(this.activenode[0] == null) {\r\n                this.$store.commit('setuuid', { uuid: null} )\r\n            }\r\n        },\r\n        activeUUID(val) {\r\n            //console.log('activeUUID '+this.activenode[0])\r\n            if(this.activenode[0] != null) {\r\n                if(val != null) {\r\n                    this.activenode = []\r\n                    this.activenode.push(val)\r\n                } else if (val == null && this.activenode[0].indexOf('-') !== -1) {\r\n                    this.activenode = []\r\n                }\r\n            }\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            showMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n            isProjectmenu: false,\r\n            activenode: [],\r\n            openIds: [],\r\n            menuitems: [\r\n                { title: 'New',    menuAction: action => { this.newElement(action) } },\r\n                //{ title: 'Open',   menuAction: action => { this.newOpen(action) } },\r\n                //{ title: 'Rename', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete', menuAction: action => { this.deleteElement(action) } },\r\n                //{ title: 'Import', menuAction: action => { this.newOption(action) } },\r\n                //{ title: 'Cut',    menuAction: action => { this.newOption(action) } },\r\n                //{ title: 'Copy',   menuAction: action => { this.newOption(action) } },\r\n                //{ title: 'Paste',  menuAction: action => { this.newOption(action) } },\r\n                //{ title: 'Save',   menuAction: action => { this.saveElement(action) } },\r\n            ],\r\n            menuProjectitems: [\r\n                { title: 'New Project',    menuAction: action => { this.newOption(action) } },\r\n                { title: 'Open Project',   menuAction: action => { this.newOption(action) } },\r\n                { title: 'Rename Project', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Import Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Cut',             menuAction: action => { this.newOption(action) } },\r\n                { title: 'Copy',            menuAction: action => { this.newOption(action) } },\r\n                { title: 'Paste',           menuAction: action => { this.newOption(action) } },\r\n            ],\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('add-element', (element) => { \r\n            if(!this.openIds.some(item => item === element)){\r\n                this.openIds.push(element)\r\n            }\r\n        })\r\n        EventBus.$on('active-element', (uuid) => {\r\n            this.activenode = []\r\n            this.activenode.push(uuid)\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        show (e, isprojectmenu) {\r\n            if (this.activenode[0] != null) {\r\n                e.preventDefault()\r\n\r\n                this.isProjectmenu = isprojectmenu\r\n                this.showMenu = false\r\n                this.x = e.clientX\r\n                this.y = e.clientY\r\n                this.$nextTick(() => {\r\n                    this.showMenu = true\r\n                })\r\n            }\r\n        },\r\n        newOption () {\r\n            //alert('this.selectItem[0]')\r\n        },\r\n        openNode() {\r\n            //alert(this.openIds)\r\n        },\r\n        newElement () {\r\n            var elementX = Math.floor(Math.random() * (1400 - 11)) + 10 // (max - min) + min\r\n            var elementY = Math.floor(Math.random() * (200 - 6)) + 5\r\n\r\n            if (this.activenode[0] == constant.CompuMethod_str) {\r\n                this.$store.commit('addElementCompuMehtod', {\r\n                    name: this.$store.getters.getNameCompuMethod, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:'', scales:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.DataConstr_str) {\r\n                this.$store.commit('addElementDataConstr', {\r\n                    name: this.$store.getters.getNameDataConstr, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, lowerlimit:'', upperlimit:'', icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.ApplicationArray_str) {\r\n                this.$store.commit('addElementApplicationArray', { // elehandling, elesemantics 는 select라서 초기값이 null이다.\r\n                    name: this.$store.getters.getNameApplicationArray,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', dynamicArrySize:'', elename: '', elehandling: null, elesemantics: null, elemaxnumber:'', \r\n                })\r\n            } else if (this.activenode[0] == constant.Implementation_str) {\r\n                this.$store.commit('addElementImplementation', { //typeref, templatetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameImplementation, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                    category:'', namespace:'', arraysize:'', typeemitter:'', \r\n                    typeref: null, templatetype:null, desc:'', ddpc:null, idtelement:null,\r\n                })\r\n            }\r\n            else if (this.activenode[0] == constant.Machine_str) {\r\n                this.$store.commit('addElementMachine', {\r\n                    name: this.$store.getters.getNameMachine, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, machinedesign:null, timeout:'', hwelement:null, executable:null, admin: '',\r\n                    functiongroup:null, processor: null, moduleinstant: null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.MachineDesigne_str) {\r\n                this.$store.commit('addElementMachineDesign', {\r\n                    name: this.$store.getters.getNameMachineDesign, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, access: null, resettimer:'', connector:null, servicediscover:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.ModeDeclarationGroup_str) {\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: this.$store.getters.getNameModeDeclarationGroup, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, modedeclaration:null, initmode:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.HWElement_str) {\r\n                this.$store.commit('addElementHWElement', { //category 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameHWElement,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, category:null, attribute:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.EthernetCluster_str) {\r\n                this.$store.commit('addElementEthernetCluster', {\r\n                    name: this.$store.getters.getNameEthernetCluster, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, conditional:null, icon:\"mdi-clipboard-outline\", validation: false\r\n                })\r\n            } else if (this.activenode[0] == constant.HWCategory_str) {\r\n                this.$store.commit('addElementHWCategory', { //category 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameHWCategory,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,  icon:\"mdi-clipboard-outline\", validation: false,\r\n                })\r\n            } \r\n            else if (this.activenode[0] == constant.ProcesstoMachineMapping_str) {\r\n                this.$store.commit('addElementProtoMachineMapping', { //ptmmMachine, ptmmProcess  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcesstoMachineMapping, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    ptmmname: '',  ptmmMachine: null, ptmmProcess: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.SWComponents_str) {\r\n                this.$store.commit('addElementSWComponents', {\r\n                    name: this.$store.getters.getNamSWComponents, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    pport: null, rport: null, prport: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.Process_str) {\r\n                this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: null\r\n                })\r\n            } else if (this.activenode[0] == constant.ProcessDesign_str) {\r\n                this.$store.commit('addElementProcessDesign', { //executableref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameProcessDesign, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10,icon:\"mdi-clipboard-outline\", validation: false,\r\n                    executableref: null, determin: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.Executable_str) {\r\n                this.$store.commit('addElementExecutable', { //applicationtyperef 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameExecutable, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    version: '', category:'', buildType:null, loggingBehabior:null, reportingBehabior:null, swname:'', applicationtyperef: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.StartupConfig_str) {\r\n                this.$store.commit('addElementStartupConfig', {\r\n                    name: this.$store.getters.getNameStartupConfig, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    configname: '', policy:null, priority:'', entertimeout:'', exittimeout:''\r\n                })\r\n            } else if (this.activenode[0] == constant.DeterministicClient_str) {\r\n                this.$store.commit('addElementDeterministicClien', {\r\n                    name: this.$store.getters.getNameDeterministicClient, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    cycletiem: '', numofworkers: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPServiceInterfaceDeployment_str) {\r\n                this.$store.commit('addElementSomeIPService', {\r\n                    name: this.$store.getters.getNameSomeIPService, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, version:null, namespace:null, events:null, fields:null, methods:null, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    service: null, majversion:'', minversion:'', id: '', eventG:null, eventD: null, methodD:null, fieldD:null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ServiceInterface_str) {\r\n                this.$store.commit('addElementService', {\r\n                    name: this.$store.getters.getNameServiceInterface, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    versionMaj:'', versionMin:'', namespace:'', events:null, fields:null, methods:null, isservice: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.Client_str) {\r\n                this.$store.commit('addElementClient', { \r\n                    name: this.$store.getters.getNameClient, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    delay: '', max: '', timetolive: '', delaymax: '', delaymin:''\r\n                })\r\n            } else if (this.activenode[0] == constant.Server_str) {\r\n                this.$store.commit('addElementServer', { \r\n                    name: this.$store.getters.getNameServer, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    delaymax: '', delaymin: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPClient_str) {\r\n                this.$store.commit('addElementSomeIPClient', { \r\n                    name: this.$store.getters.getNameSomeIPClient, input: false,\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    findtime: '', inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPServer_str) {\r\n                this.$store.commit('addElementSomeIPServer', { \r\n                    name: this.$store.getters.getNameSomeIPServer, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    inidelaymax: '', inidelaymin: '', inibasedelay: '', inirepetimax: '', delaymax: '', delaymin: '',\r\n                    offer: '', tiemtolive: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.SomeIPToMachineMapping_str) {\r\n                this.$store.commit('addElementSomeIPtoMachine', { //ccref, siref  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameSomeIPtoMachine, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    ccref: null, siref: null, tcp:'', udp: '',\r\n                })\r\n            } else if (this.activenode[0] == constant.ToPortPrototypeMapping_str) {\r\n                this.$store.commit('addElementToPortPrototype', { \r\n                    name: this.$store.getters.getNameToPortPrototype, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    selectPort:null, porttype: null, process:null, selectServiceIns: null, serviceIns: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.RequiredSomeIP_str) {\r\n                this.$store.commit('addElementRequiredSomeIP', {  //deployref, clientref,ver는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameRequiredSomeIP, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, minover: '', id: '', clientref: null, ver: null, method: null, requiredevent: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ProvidedSomeIP_str) {\r\n                this.$store.commit('addElementProvidedSomeIP', {\r\n                    name: this.$store.getters.getNameProvidedSomeIP, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    deployref: null, someipserver: null, id: '', eventP: null, method: null, eventG: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.Error_str) {\r\n                this.$store.commit('addElementError', { //errorDref 는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                    name: this.$store.getters.getNameError, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    desc: '', errorcode: '', errorDref: null\r\n                })\r\n            } else if (this.activenode[0] == constant.Errorset_str) {\r\n                this.$store.commit('addElementErrorSet', {\r\n                    name: this.$store.getters.getNameErrorSet, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    errorref: null,\r\n                })\r\n            } else if (this.activenode[0] == constant.ErrorDomain_str) {\r\n                this.$store.commit('addElementErrorDomain', {\r\n                    name: this.$store.getters.getNameErrorDomain, input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    namespace: '', value: '',\r\n                })\r\n            }\r\n\r\n            if(!this.openIds.some(item => item === this.activenode[0])){\r\n                this.openIds.push(this.activenode[0])\r\n            }\r\n        },\r\n        activeElement() {\r\n            //console.log('activeElement '+ this.activenode[0]+',,,'+this.$store.state.activeUUID)\r\n             var treeitem\r\n            var arrelement\r\n            //console.log('00'+ this.$store.state.activeUUID)\r\n            if(this.$store.state.activeUUID != null) {\r\n                treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                arrelement = treeitem.find(data =>  data.uuid === this.$store.state.activeUUID)\r\n                //console.log(arrelement)\r\n                if (this.activenode[0] != undefined && this.activenode[0].indexOf('-') !== -1) {\r\n                    var actelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                    this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                    this.$store.commit('setzIndex', {parent:actelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                    this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n\r\n                    if(actelement.validation) { \r\n                        //console.log('111111'+this.activenode[0])\r\n                        this.$store.commit('setValidation', {parent:actelement.parent, uuid:this.activenode[0]})\r\n                    }\r\n\r\n                } else {\r\n                    this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.$store.state.activeUUID, zindex: 2} )\r\n                    this.$store.commit('setuuid', {uuid: null} )\r\n                }\r\n            } else if (this.activenode[0] != undefined){\r\n                if (this.activenode[0].indexOf('-') !== -1) {\r\n                    treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n                    arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n                    //console.log(arrelement)\r\n                    this.$store.commit('setzIndex', {parent:arrelement.parent, uuid: this.activenode[0], zindex: 10} )\r\n                    this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n\r\n                    if(arrelement.validation) { \r\n                        this.$store.commit('setValidation', {parent:arrelement.parent, uuid:this.activenode[0]})\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        deleteElement () {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('deleteRefElement', {uuid:this.activenode[0]} ) // 내가 화살표의 끝인가?\r\n            this.$store.commit('deleteElementLine', {uuid:this.activenode[0]} ) // 내가 화살표의 시작인가?\r\n            this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n        saveElement () {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('saveElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n    },\r\n})\r\n</script>\r\n"],"sourceRoot":"src/components"}]}