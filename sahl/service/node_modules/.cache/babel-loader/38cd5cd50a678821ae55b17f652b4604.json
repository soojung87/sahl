{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\navigatorbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\navigatorbar.vue","mtime":1638168196228},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["navigatorbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <v-icon class=\"subtitle-1 green\" style=\"margin:0 5px 0 15px;\" dark >mdi-view-dashboard</v-icon>\r\n                    SAHL\r\n        <v-divider></v-divider>\r\n        <v-list dense>\r\n            <v-list-group v-for=\"(item,idx) in navigatorList\" :key=\"idx\" v-model=\"item.active\"\r\n                        prepend-icon=\"mdi-alpha-p-circle-outline\" no-action sub-group> <!--  sub-group 빼면 리스트가 하나씩만 보인다-->\r\n                <template v-slot:activator>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.name\" style=\"fontsize:20px\" @contextmenu=\"show($event, true)\"></v-list-item-title>\r\n                    </v-list-item-content>\r\n                </template> \r\n                <v-card flat @contextmenu=\"show($event,false)\">\r\n                    <v-treeview ref=\"tree\" :items=\"item.children\" activatable item-key=\"uuid\" :open.sync=\"openIds\" :active.sync=\"activenode\" dense @update:open=\"openNode\" @update:active=\"activeElement()\" class=\"caption\">\r\n                        <template v-slot:prepend=\"{ item, open }\">\r\n                            <v-badge v-if=\"item.info == 1\" bordered dot color=\"red\" offset-x=\"10\" offset-y=\"10\">\r\n                            <v-icon color=\"yellow\" v-if=\"item.name=='Data Types' || item.name=='Service' || item.name=='Service Interfaces' || item.name=='SomeIP Events'\r\n                                        || item.name=='Service Instances' || item.name=='Errors' || item.name=='Adaptive Application' \r\n                                        || item.name=='Machines' || item.name=='Platform'\" >\r\n                                        {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                            </v-icon>\r\n                            <v-icon v-else color=\"primary\">{{item.icon}}</v-icon>\r\n                            </v-badge>\r\n                            <div v-else>\r\n                            <v-icon color=\"yellow\" v-if=\"item.name=='Data Types' || item.name=='Service' || item.name=='Service Interfaces' || item.name=='SomeIP Events'\r\n                                || item.name=='Service Instances' || item.name=='Errors' || item.name=='Adaptive Application' \r\n                                || item.name=='Machines' || item.name=='Platform'\" >\r\n                                {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                            </v-icon>\r\n                            <v-icon v-else color=\"primary\">{{item.icon}}</v-icon>\r\n                            </div>\r\n                        </template>\r\n                    </v-treeview>\r\n                </v-card>\r\n            </v-list-group>\r\n        </v-list>\r\n        <v-menu v-model=\"showMenu\" :position-x=\"x\" :position-y=\"y\" absolute offset-y>\r\n            <v-list v-if=\"isProjectmenu\" dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuProjectitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n            <v-list v-else dense class = \"text-start\">\r\n                <v-list-item  v-for=\"(item, index) in menuitems\" :key=\"index\" @click=\"item.menuAction(item.title)\">\r\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../main'\r\nimport constant from \"../store/constants.js\"\r\n\r\n\r\nexport default({\r\n    computed: {\r\n        SAHLProject () {\r\n            return this.$store.state.SAHLProject\r\n        },\r\n        openProjectIndex () {\r\n            return this.$store.state.openProjectIndex\r\n        },\r\n        navigatorList () {\r\n            return this.$store.state.navigatorList\r\n        },\r\n    },\r\n    watch:{\r\n        activenode() {\r\n            if(this.activenode[0] == null) {\r\n                this.$store.commit('setuuid', { uuid: null} )\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            showMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n            isProjectmenu: false,\r\n            activenode: [],\r\n            openIds: [],\r\n            menuitems: [\r\n                { title: 'New',    menuAction: action => { this.newElement(action) } },\r\n                { title: 'Open',   menuAction: action => { this.newOpen(action) } },\r\n                { title: 'Rename', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete', menuAction: action => { this.deleteElement(action) } },\r\n                { title: 'Import', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Cut',    menuAction: action => { this.newOption(action) } },\r\n                { title: 'Copy',   menuAction: action => { this.newOption(action) } },\r\n                { title: 'Paste',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Save',   menuAction: action => { this.saveElement(action) } },\r\n            ],\r\n            menuProjectitems: [\r\n                { title: 'New Project',    menuAction: action => { this.newOption(action) } },\r\n                { title: 'Open Project',   menuAction: action => { this.newOption(action) } },\r\n                { title: 'Rename Project', menuAction: action => { this.newOption(action) } },\r\n                { title: 'Delete Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Import Project',  menuAction: action => { this.newOption(action) } },\r\n                { title: 'Cut',             menuAction: action => { this.newOption(action) } },\r\n                { title: 'Copy',            menuAction: action => { this.newOption(action) } },\r\n                { title: 'Paste',           menuAction: action => { this.newOption(action) } },\r\n            ],\r\n        }\r\n    },\r\n    mounted () {\r\n        EventBus.$on('add-element', (element) => { \r\n            if(!this.openIds.some(item => item === element)){\r\n                this.openIds.push(element)\r\n            }\r\n        })\r\n        EventBus.$on('active-element', (uuid) => {\r\n            this.activenode = []\r\n            this.activenode.push(uuid)\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        show (e, isprojectmenu) {\r\n            e.preventDefault()\r\n\r\n            this.isProjectmenu = isprojectmenu\r\n            this.showMenu = false\r\n            this.x = e.clientX\r\n            this.y = e.clientY\r\n            this.$nextTick(() => {\r\n                this.showMenu = true\r\n            })\r\n        },\r\n        newOption () {\r\n            //alert('this.selectItem[0]')\r\n        },\r\n        openNode() {\r\n            //alert(this.openIds)\r\n        },\r\n        newElement () {\r\n            var elementX = Math.floor(Math.random() * (1400 - 11)) + 10 // (max - min) + min\r\n            var elementY = Math.floor(Math.random() * (200 - 6)) + 5\r\n\r\n            if (this.activenode[0] == constant.CompuMethod_str) {\r\n                this.$store.commit('addElementCompuMehtod', {\r\n                    name: constant.CompuMethod_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.CompuMethod.length, \r\n                    top: elementY, left: elementX, zindex: 2, category:null, scales:null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.DataConstr_str) {\r\n                this.$store.commit('addElementDataConstr', {\r\n                    name: constant.DataConstr_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.DataConstr.length, \r\n                    top: elementY, left: elementX, zindex: 2, lowerlimit:null, upperlimit:null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.ApplicationArray_str) {\r\n                this.$store.commit('addElementApplicationArray', {\r\n                    name: constant.ApplicationArray_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.ApplicationArrayDataType.length, \r\n                    top: elementY, left: elementX, zindex: 2,category:null, dynamicArrySize:null, element:null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.Implementation_str) {\r\n                this.$store.commit('addElementImplementation', {\r\n                    name: constant.Implementation_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].DataTypes.ImplementationDataType.length, \r\n                    top: elementY, left: elementX, zindex: 2, category:null, namespace:null, arraysize:null, typeemitter:null, \r\n                    typeref: { name:null, uuid:null}, templatetype:{ name:null, uuid:null}, desc:null, ddpc:null, idtelement:null, icon:\"mdi-clipboard-outline\" \r\n                })\r\n            }\r\n            else if (this.activenode[0] == constant.ServiceInterface_str) {\r\n                this.$store.commit('addElementService', {\r\n                    name: constant.ServiceInterface_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Service.ServiceInterface.length, \r\n                    top: elementY, left: elementX, zindex: 2, version:null, namespace:null, events:null, fields:null, methods:null, icon:\"mdi-clipboard-outline\" \r\n                })\r\n            }\r\n            else if (this.activenode[0] == constant.Machine_str) {\r\n                this.$store.commit('addElementMachine', {\r\n                    name: constant.Machine_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.Machine.length, \r\n                    top: elementY, left: elementX, zindex: 2, machinedesign:null, timeout:null, hwelement:null, executable:null, \r\n                    functiongroup:null, processor: null, moduleinstant: null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.MachineDesigne_str) {\r\n                this.$store.commit('addElementMachineDesign', {\r\n                    name: constant.MachineDesigne_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.MachineDesign.length, \r\n                    top: elementY, left: elementX, zindex: 2, access:'', resettimer:'', connector:'', servicediscover:'', icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.ModeDeclarationGroup_str) {\r\n                this.$store.commit('addElementModeDeclarationGroup', {\r\n                    name: constant.ModeDeclarationGroup_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.ModeDeclarationGroup.length, \r\n                    top: elementY, left: elementX, zindex: 2, modedeclaration:null, initmode:null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.HWElement_str) {\r\n                this.$store.commit('addElementHWElement', {\r\n                    name: constant.HWElement_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.HWElement.length, \r\n                    top: elementY, left: elementX, zindex: 2, category:null, attribute:null, icon:\"mdi-clipboard-outline\"\r\n                })\r\n            } else if (this.activenode[0] == constant.EthernetCluster_str) {\r\n                this.$store.commit('addElementEthernetCluster', {\r\n                    name: constant.EthernetCluster_str + '_' +this.$store.state.SAHLProject[this.$store.state.openProjectIndex].Machine.EthernetCluster.length, \r\n                    top: elementY, left: elementX, zindex: 2, conditional:'', icon:\"mdi-clipboard-outline\"\r\n                })\r\n            }\r\n\r\n            if(!this.openIds.some(item => item === this.activenode[0])){\r\n                this.openIds.push(this.activenode[0])\r\n            }\r\n        },\r\n        activeElement() {\r\n            if(this.activenode[0] != null) {\r\n                if (this.activenode[0].indexOf('-') !== -1) {\r\n                    this.$store.commit('setuuid', {uuid: this.activenode[0]} )\r\n                } else {\r\n                    this.$store.commit('setuuid', {uuid: null} )\r\n                }\r\n            }\r\n        },\r\n        deleteElement () {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('deleteElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n        saveElement () {\r\n            var treeitem = Object.values(this.$store.getters.gettreeviewitems)\r\n            var arrelement = treeitem.find(data =>  data.uuid === this.activenode[0])\r\n            this.$store.commit('saveElement', {parent:arrelement.parent, uuid:this.activenode[0]} )\r\n        },\r\n    },\r\n})\r\n</script>\r\n"],"sourceRoot":"src/components"}]}