{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\ProcessToMachine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\ProcessToMachine.vue","mtime":1649035443377},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProcessToMachine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\">\r\n                <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                    <v-hover v-if=\"minimaptoolbar\" v-slot=\"{ hover }\">\r\n                        <v-btn icon @click=\"showProcesstoMachineMappingset\">\r\n                            <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                        </v-btn>\r\n                    </v-hover>\r\n                    <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                        <v-icon> mdi-routes</v-icon>\r\n                    </v-btn>\r\n                    <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                    <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-toolbar v-else hide-on-scroll dense flat>\r\n                    <v-toolbar-title>Process to Machine Mapping Set</v-toolbar-title>\r\n                </v-toolbar>\r\n                <v-card-text v-if=\"iselementOpenClose\">\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                @input='inputProcesstoMachineMappingsetName' outlined dense></v-text-field>\r\n                    <v-card outlined class=\"mx-auto\">\r\n                        <div class=\"subtitle-2\" style=\"height:20px\">\r\n                            <!-- <v-hover v-slot=\"{ hover }\">\r\n                                <v-btn text @click=\"showProcesstoMachine\" x-small color=\"indigo\">\r\n                                    <v-icon>{{ isProcesstoMachineOpenClose? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover> -->\r\n                            <v-btn text x-small color=\"indigo\">\r\n                                <v-icon>mdi-chevron-double-right</v-icon>\r\n                            </v-btn>\r\n                            Process to Machine Mapping\r\n                        </div>\r\n                        <v-card-text v-if=\"isProcesstoMachineOpenClose\">\r\n                            <v-text-field v-model=\"element.ptmmname\" label=\"name\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\" outlined dense></v-text-field>\r\n                            <v-row style=\"height: 45px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.ptmmMachine\" readonly @click=\"setMachineRefSelect()\" clearable @click:clear='clearMachineRef()' label=\"Machine Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/machinefromptmm'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setMachineList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selMachine\" :key=\"i\" link @click=\"setMachine(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newMachine\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-row>\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.ptmmProcess\" readonly @click=\"setProcessRefSelect()\" clearable @click:clear='clearProcessRef()' label=\"Process Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/processfromptmm'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcess(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-card-text>\r\n                    </v-card>\r\n\r\n                </v-card-text>\r\n                <v-card-text v-else>\r\n                    <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                readonly outlined dense></v-text-field>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        }\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        }\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            isProcesstoMachineOpenClose: true,\r\n            selMachine: this.$store.getters.getMachine,\r\n            selProcess: this.$store.getters.getProcess,\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showProcesstoMachineMappingset() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        showProcesstoMachine() {\r\n            this.isProcesstoMachineOpenClose = this.isProcesstoMachineOpenClose ? false : true\r\n        },\r\n        inputProcesstoMachineMappingsetName() {\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            //this.$store.commit('changeNameExecutable', {uuid:this.element.uuid, name:this.element.name} )\r\n        }, \r\n\r\n        clearMachineRef() {\r\n            this.element.ptmmMachine = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/machinefromptmm')\r\n            }\r\n        },\r\n        setMachineRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getMachinePath(this.element.ptmmMachine, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Machine_str} )\r\n            }\r\n        },\r\n        setMachineList() {\r\n            this.selMachine = this.$store.getters.getMachine\r\n            this.setactiveUUID()\r\n        },\r\n        setMachine(item) {\r\n            if( this.element.ptmmMachine != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/machinefromptmm')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/machinefromptmm')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/machinefromptmm', this.element.uuid+'/machinefromptmm', item.uuid)\r\n                this.element.ptmmMachine = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newMachine() {\r\n            this.$store.commit('addElementMachine', {\r\n                name: this.$store.getters.getNameMachine, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300, zindex: 10, machinedesign:null, timeout:'', hwelement:null, executable:null, \r\n                admin: '', functiongroup:null, processor: null, moduleinstant: null, icon:\"mdi-clipboard-outline\", validation: false\r\n            })\r\n            EventBus.$emit('add-element', constant.Machine_str)\r\n            EventBus.$emit('add-element', constant.Machines_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n        clearProcessRef() {\r\n            this.element.ptmmProcess = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/processfromptmm')\r\n            }\r\n        },\r\n        setProcessRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getProcessPath(this.element.ptmmProcess)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Process_str} )\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        setProcess(item) {\r\n            if( this.element.ptmmProcess != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/processfromptmm')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/processfromptmm')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/processfromptmm', this.element.uuid+'/processfromptmm', item.uuid)\r\n                this.element.ptmmProcess = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            this.$store.commit('addElementProcess', { //prodesign, determin, execut, machinetype  는 null해줘야한다. clearable하면 값이 null변하기 때문에 \r\n                name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                top: this.element.top+100, left: this.element.left+ 300, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: null\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editProtoMachineMapping', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n\r\n\r\n    },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}