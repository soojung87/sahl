{"remainingRequest":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js!D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\source\\service\\src\\components\\PHMRecoveryVia.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\source\\service\\src\\components\\PHMRecoveryVia.vue","mtime":1657688287924},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PHMRecoveryVia.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :id=\"element.uuid\">\r\n        <v-container>\r\n            <v-tooltip bottom color=\"success\" :disabled=\"isTooltip\" z-index=\"10\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-card outlined :color=\"minimaptoolbar ? null : colorToolbar\" v-bind=\"attrs\" v-on=\"on\">\r\n                        <v-toolbar v-if=\"!isDatailView\" :color=colorToolbar dark hide-on-scroll height=\"30px\" class=\"drag-handle\">\r\n                            <v-hover v-if=\"minimaptoolbar && zoomvalue > $setZoominElement\" v-slot=\"{ hover }\">\r\n                                <v-btn icon @click=\"showPHMRecoveryVia\">\r\n                                    <v-icon>{{ iselementOpenClose ? (hover? 'mdi-chevron-double-left' :'mdi-chevron-double-right') : (hover? 'mdi-chevron-double-right' :'mdi-chevron-double-left')}}</v-icon>\r\n                                </v-btn>\r\n                            </v-hover>\r\n                            <v-btn v-if=\"minimaptoolbar\" icon @click.stop=\"dialogPath=true\">\r\n                                <v-icon> mdi-routes</v-icon>\r\n                            </v-btn>\r\n                            <dialogPathSetting v-model=\"dialogPath\" :path=\"element.path\" @submit=\"submitDialog\"/>\r\n                            <v-toolbar-title>Recovery VIA Application Action To Client Server Operation Mapping</v-toolbar-title>\r\n                            <v-spacer></v-spacer>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else-if=\"zoomvalue < $setZoominElement\" :color=colorToolbar dark hide-on-scroll height=\"50px\" class=\"drag-handle\">\r\n                            <v-toolbar-title>{{ element.name }}</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-toolbar v-else hide-on-scroll dense flat>\r\n                            <v-toolbar-title>Recovery VIA Application Action To Client Server Operation Mapping</v-toolbar-title>\r\n                        </v-toolbar>\r\n                        <v-card-text v-if=\"iselementOpenClose && zoomvalue > $setZoominElement\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        @input='inputPHMRecoveryViaName' outlined dense></v-text-field>\r\n                            <v-row style=\"height: 70px\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-text-field v-model=\"element.process\" readonly @click=\"setProcessRefSelect()\" clearable @click:clear='clearProcessRef()' label=\"Process Reference\" style=\"height:25px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"2\">\r\n                                    <v-menu>\r\n                                        <template v-slot:activator=\"{ on, attrs }\">\r\n                                            <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PHMViaPro'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setProcessList()\">\r\n                                                <v-icon>mdi-menu-down-outline</v-icon>\r\n                                            </v-btn>\r\n                                        </template>\r\n                                        <v-list>\r\n                                            <v-list-item v-for=\"(item, i) in selProcess\" :key=\"i\" link @click=\"setProcess(item)\">\r\n                                                <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                            </v-list-item>\r\n                                            <v-btn outlined color=\"indigo\" dense text small block @click=\"newProcess\" >\r\n                                                <v-icon >mdi-plus</v-icon>New Item\r\n                                            </v-btn>\r\n                                        </v-list>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <v-card outlined class=\"mx-auto\">\r\n                                <div class=\"subtitle-2\" style=\"height:20px\">\r\n                                    <v-btn text x-small color=\"indigo\">\r\n                                        <v-icon>mdi-chevron-double-right</v-icon>\r\n                                    </v-btn>\r\n                                    Recovery Action IREF\r\n                                </div>\r\n                                <v-card-text>\r\n                                    <v-row style=\"height: 45px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.swcomponent\" readonly @click=\"setSWCompoRefSelect()\" clearable @click:clear='clearSWCompoRef()' label=\"SW Component Prototype Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PHMViaSWCompo'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setSWCompoList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list>\r\n                                                    <v-list-item v-for=\"(item, i) in selSWComponent\" :key=\"i\" link @click=\"setSWCompo(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newSWComponent\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                    <v-row style=\"height: 45px\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.port\" readonly @click=\"setPortSelect()\" clearable @click:clear='clearPort()' label=\"P Port Prototype Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PHMViaPPort'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setPortList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list>\r\n                                                    <v-list-item v-for=\"(item, i) in selPort\" :key=\"i\" link @click=\"setPort(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-list-item v-if=\"selPort.length == 0\">\r\n                                                        <v-list-item-title>No Data Available</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                    <v-row>\r\n                                        <v-col cols=\"10\">\r\n                                            <v-text-field v-model=\"element.phmRecovery\" readonly @click=\"setPHMRecoverySelect()\" clearable @click:clear='clearPHMRecovery()' label=\"Target Method Reference\" style=\"height: 45px;\" outlined dense class=\"lable-placeholer-color\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"2\">\r\n                                            <v-menu>\r\n                                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                                    <v-btn color=\"deep-purple accent-4\" :id=\"element.uuid+'/PHMViaRecovery'\" dark icon v-bind=\"attrs\" v-on=\"on\" @click=\"setPHMRecoveryList()\">\r\n                                                        <v-icon>mdi-menu-down-outline</v-icon>\r\n                                                    </v-btn>\r\n                                                </template>\r\n                                                <v-list>\r\n                                                    <v-list-item v-for=\"(item, i) in selPHMRecovery\" :key=\"i\" link @click=\"setPHMRecovery(item)\">\r\n                                                        <v-list-item-title>{{ item.name }}</v-list-item-title>\r\n                                                    </v-list-item>\r\n                                                    <v-btn outlined color=\"indigo\" dense text small block @click=\"newPHMRecovery\" >\r\n                                                        <v-icon >mdi-plus</v-icon>New Item\r\n                                                    </v-btn>\r\n                                                </v-list>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-card-text>\r\n                        <v-card-text v-else-if=\"zoomvalue > $setZoominElement || !minimaptoolbar\">\r\n                            <v-text-field v-model=\"element.name\" :label=\"'name  <'+element.path +'>'\" :rules=\"rules.name\" placeholder=\"String\" style=\"height: 45px;\" class=\"lable-placeholer-color\"\r\n                                        readonly outlined dense></v-text-field>\r\n                        </v-card-text>\r\n                    </v-card>\r\n                </template>\r\n                <span>{{ element.name }}</span>\r\n            </v-tooltip>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"../store/constants.js\"\r\nimport { EventBus } from \"../main.js\"\r\nimport dialogPathSetting from '../components/dialogPathSetting.vue'\r\n\r\nexport default {\r\n    props: ['element', 'isDatailView', 'minimaptoolbar'],\r\n    components:{dialogPathSetting},\r\n    computed: {\r\n        activeUUID() {\r\n            return this.$store.state.activeUUID\r\n        },\r\n        detailViewUUID() {\r\n            return this.$store.state.detailViewUUID\r\n        },\r\n        setting() {\r\n            return this.$store.state.setting\r\n        },\r\n    },\r\n    watch: {\r\n        activeUUID(val) {\r\n            this.setToolbarColor(val)\r\n        },\r\n        detailViewUUID(val) {\r\n            this.setToolbarColorDetailView(val)\r\n        },\r\n        setting(value) {\r\n            this.zoomvalue = value.zoomMain\r\n            if (this.zoomvalue < this.$setZoominTooltip) {\r\n                this.isTooltip = false\r\n            } else {\r\n                this.isTooltip = this.minimaptoolbar\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.setToolbarColor(this.$store.state.activeUUID)\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rules: {\r\n                name:  [val => (val || '').length > 0 ],\r\n            },\r\n            dialogPath : false,\r\n            colorToolbar: \"#6A5ACD\",\r\n            zoomvalue: this.$store.state.setting.zoomMain,\r\n            isTooltip: this.minimaptoolbar,\r\n            iselementOpenClose: this.minimaptoolbar, //toolbar만 보여줄것이냐 아니냐 설정 true: 전체 다 보여줌 / false : toolbar만 보여줌\r\n            selSWComponent: this.$store.getters.getSWComponentType,\r\n            selProcess: this.$store.getters.getProcess,\r\n            selPort: this.$store.getters.getPPortPrototype,\r\n            selPHMRecovery: this.$store.getters.getPHMRecovery\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.minimaptoolbar && this.zoomvalue < this.$setZoominElement) {\r\n            this.isTooltip = false\r\n        }\r\n    },\r\n    methods: {\r\n        submitDialog(element) {\r\n            this.element.path = element\r\n            this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n        },\r\n        setToolbarColor(activeid) \r\n        {\r\n            if(this.element.uuid == activeid) {\r\n                this.colorToolbar = \"#FF1493\" \r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        setToolbarColorDetailView(isdetail) {\r\n            if(this.element.uuid == isdetail) {\r\n                this.colorToolbar = \"#B0E0E6\" \r\n            } else if (this.element.uuid == this.$store.state.activeUUID) {\r\n                this.colorToolbar  = \"#FF1493\"\r\n            } else {\r\n                this.colorToolbar = \"#6A5ACD\"\r\n            }\r\n        },\r\n        showPHMRecoveryVia() {\r\n            this.iselementOpenClose = this.iselementOpenClose ? false : true\r\n            this.$nextTick(() => {\r\n                EventBus.$emit('drawLineTitleBar', this.element.uuid, this.iselementOpenClose)\r\n            })\r\n        },\r\n        inputPHMRecoveryViaName() {\r\n            this.$store.commit('editPHMRecoveryVia', {compo:\"Name\", uuid:this.element.uuid, name:this.element.name} )\r\n            if (this.element.name != '') {\r\n                this.$store.commit('isintoErrorList', {uuid:this.element.uuid, name:this.element.name, path:this.element.path})\r\n            }\r\n        }, \r\n        clearProcessRef() {\r\n            this.element.process = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPro')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PHMViaPro')\r\n            }\r\n        },\r\n        setProcessRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPro')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getProcessPath(this.element.process)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.Process_str} )\r\n            }\r\n        },\r\n        setProcessList() {\r\n            this.selProcess = this.$store.getters.getProcess\r\n            this.setactiveUUID()\r\n        },\r\n        setProcess(item) {\r\n            if( this.element.process != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPro')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PHMViaPro')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PHMViaPro', this.element.uuid+'/PHMViaPro', item.uuid)\r\n                this.element.process = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newProcess() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementProcess', {\r\n                name: this.$store.getters.getNameProcess, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                prodesign: null, determin: null, execut: null, machinname: '', machinetype: null, dependent: []\r\n            })\r\n            EventBus.$emit('add-element', constant.Process_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editPHMRecoveryVia', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        clearSWCompoRef() {\r\n            this.element.swcomponent = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaSWCompo')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PHMViaSWCompo')\r\n            }\r\n        },\r\n        setSWCompoRefSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaSWCompo')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getSWComponentPath(this.element.swcomponent, 0)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SWComponents_str} )\r\n            }\r\n        },\r\n        setSWCompoList() {\r\n            this.selSWComponent = this.$store.getters.getSWComponentType\r\n            this.setactiveUUID()\r\n        },\r\n        setSWCompo(item) {\r\n            if( this.element.swcomponent != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaSWCompo')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PHMViaSWCompo')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PHMViaSWCompo', this.element.uuid+'/PHMViaSWCompo', item.uuid)\r\n                this.element.swcomponent = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newSWComponent() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            this.$store.commit('addElementSWComponents', {\r\n                    name: this.$store.getters.getNameSWComponents,  input: false, path: '',\r\n                    top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                    pport: [], rport: [], prport: [],\r\n                })\r\n            EventBus.$emit('add-element', constant.SWComponents_str)\r\n            EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n            this.$store.commit('editPHMRecoveryVia', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setPortSelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPPort')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getSWComponentPath(this.element.port, 1)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.SWComponents_str} )\r\n            }\r\n        },\r\n        clearPort() {\r\n            this.element.port = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPPort')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PHMViaPPort')\r\n            }\r\n        },\r\n        setPortList() {\r\n            this.selPort = this.$store.getters.getPPortPrototype\r\n            this.setactiveUUID()\r\n        },\r\n        setPort(item) {\r\n            if(this.element.port != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaPPort')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PHMViaPPort')\r\n                }\r\n                //새로 추가해준다\r\n                if (endLine != item.uuid) {\r\n                    this.newLine(this.element.uuid+'/PHMViaPPort', this.element.uuid+'/PHMViaPPort', item.uuid)\r\n                }\r\n                this.element.port = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n\r\n        clearPHMRecovery() {\r\n            this.element.phmRecovery = null\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaRecovery')\r\n            if (endLine != undefined) {\r\n                this.deleteLine(this.element.uuid+'/PHMViaRecovery')\r\n            }\r\n        },\r\n        setPHMRecoverySelect() {\r\n            var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaRecovery')\r\n            if (endLine == undefined) {\r\n                endLine = this.$store.getters.getPHMRecoveryPath(this.element.phmRecovery)\r\n            }\r\n            if (endLine != null) {\r\n                this.$store.commit('setDetailView', {uuid: endLine, element: constant.RecoveryVA_str} )\r\n            }\r\n        },\r\n        setPHMRecoveryList() {\r\n            this.selPHMRecovery = this.$store.getters.getPHMRecovery\r\n            this.setactiveUUID()\r\n        },\r\n        setPHMRecovery(item) {\r\n            if( this.element.phmRecovery != item.name) {\r\n                var endLine = this.$store.getters.getChangeEndLine(this.element.uuid+'/PHMViaRecovery')\r\n                if (endLine != undefined && endLine != item.uuid) {\r\n                    //기존꺼 삭제해야한다 vuex에서도 삭제하고 mainview에서도 삭제하고 \r\n                    this.deleteLine(this.element.uuid+'/PHMViaRecovery')\r\n                }\r\n                //새로 추가해준다\r\n                this.newLine(this.element.uuid+'/PHMViaRecovery', this.element.uuid+'/PHMViaRecovery', item.uuid)\r\n                this.element.phmRecovery = item.name\r\n            }\r\n            this.setactiveUUID()\r\n        },\r\n        newPHMRecovery() {\r\n            const elementX = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n            const elementY = Array.from({length:4}, () => Math.floor(Math.random() * 3000))\r\n\r\n            this.$store.commit('addElementPHMRecovery', {\r\n                name: this.$store.getters.getNamePHMRecovery, input: false, path: '',\r\n                top: elementY, left: elementX, zindex: 10, icon:\"mdi-clipboard-outline\", validation: false,\r\n                reconame: '', faf: null\r\n            })\r\n            EventBus.$emit('add-element', constant.RecoveryVA_str)\r\n            this.$store.commit('editPHMRecoveryVia', {compo:\"z\", uuid:this.element.uuid, zindex:2} )\r\n        },\r\n\r\n        setactiveUUID() {\r\n            this.$store.commit('setuuid', {uuid: this.element.uuid} )\r\n            this.$store.commit('editPHMRecoveryVia', {compo:\"z\", uuid:this.element.uuid, zindex:10} )\r\n        },\r\n        deleteLine(fineLine) {\r\n            var linenum = this.$store.getters.getconnectLineNum(fineLine)\r\n            if (linenum != -1) {\r\n                EventBus.$emit('delete-line', linenum)\r\n                this.$store.commit('deletConnectionline', {startnum: linenum} )\r\n            }\r\n        },\r\n        newLine(startLine, drawLine, endLine) {\r\n            this.$store.commit('setConnectionline', {start: startLine, end: endLine} )\r\n            EventBus.$emit('new-line', drawLine, endLine)\r\n        },\r\n\r\n\r\n\r\n    },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}