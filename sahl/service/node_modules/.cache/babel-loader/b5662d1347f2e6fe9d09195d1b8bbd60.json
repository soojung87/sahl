{"remainingRequest":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js!D:\\source\\service\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\source\\service\\src\\store\\index.js","dependencies":[{"path":"D:\\source\\service\\src\\store\\index.js","mtime":1655273355078},{"path":"D:\\source\\service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\source\\service\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\source\\service\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/source/service/src/store/index.js"],"names":["Vue","Vuex","saveAs","getters","mutations","use","Store","state","openProjectIndex","navigatorList","SAHLProject","activeUUID","detailViewUUID","connectionLine","ismakeProject","detailViewerList","idexDetailView","undefined","errorList","detailViewer","uuid","element","setting","zoomMain","zoomDetail","visibleDetailView","visibleLine","isOpenCloseSearch","isOpenCloseDetailView","isOpenCloseNavigationView","isPositionLine","isDraggable","strSavePath","isInputFileComplate","inputFileList","numPanes","selectScreen","actions"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,KAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA;AACA,OAASC,MAAT,KAAuB,YAAvB,CAAqC;AACrC;AACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAGAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR,EAEA,cAAe,IAAIA,CAAAA,IAAI,CAACK,KAAT,CAAe,CAC1BC,KAAK,CAAE,CACHC,gBAAgB,CAAE,CADf,CAEHC,aAAa,CAAE,EAFZ,CAGHC,WAAW,CAAE,EAHV,CAIHC,UAAU,CAAE,IAJT,CAKHC,cAAc,CAAE,IALb,CAMHC,cAAc,CAAE,EANb,CAOHC,aAAa,CAAE,KAPZ,CAQHC,gBAAgB,CAAE,EARf,CAQmB;AACtBC,cAAc,CAAEC,SATb,CAUHC,SAAS,CAAE,EAVR,CAWHC,YAAY,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,EAArB,CAXX,CAYHC,OAAO,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAiBC,UAAU,CAAE,GAA7B,CAZN,CAaHC,iBAAiB,CAAE,IAbhB,CAcHC,WAAW,CAAE,IAdV,CAeHC,iBAAiB,CAAE,KAfhB,CAgBHC,qBAAqB,CAAE,IAhBpB,CAiBHC,yBAAyB,CAAE,IAjBxB,CAkBHC,cAAc,CAAE,IAlBb,CAmBHC,WAAW,CAAE,IAnBV,CAoBHC,WAAW,CAAE,EApBV,CAoBc;AACjBC,mBAAmB,CAAE,KArBlB,CAqByB;AAC5BC,aAAa,CAAE,EAtBZ,CAsBgB;AACnBC,QAAQ,CAAE,CAvBP,CAuBU;AACbC,YAAY,CAAE,CAxBX,CADmB,CA2B1BjC,OAAO,CAAPA,OA3B0B,CA4B1BC,SAAS,CAATA,SA5B0B,CA6B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAiC,OAAO,CAAE,EAvgRiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n//import constant from \"./constants.js\"\r\nimport { saveAs } from 'file-saver'; // eslint-disable-line no-unused-vars\r\n//import { EventBus } from \"../main.js\"\r\nimport getters from \"./getters\"\r\nimport mutations from \"./mutations\"\r\n\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        openProjectIndex: 0,\r\n        navigatorList: [],\r\n        SAHLProject: [],\r\n        activeUUID: null,\r\n        detailViewUUID: null,\r\n        connectionLine: [],\r\n        ismakeProject: false,\r\n        detailViewerList: [], // project가 바뀔때 마다 reset해야한다.\r\n        idexDetailView: undefined,\r\n        errorList: [],\r\n        detailViewer: { uuid: '', element: '' },\r\n        setting: { zoomMain: 0.8, zoomDetail: 0.9, },\r\n        visibleDetailView: true,\r\n        visibleLine: true,\r\n        isOpenCloseSearch: false,\r\n        isOpenCloseDetailView: true,\r\n        isOpenCloseNavigationView: true,\r\n        isPositionLine: true,\r\n        isDraggable: true,\r\n        strSavePath: [], // Path List\r\n        isInputFileComplate: false, //input file값 저장후 화면에 그린 뒤 line 그리기 위해\r\n        inputFileList: [], // input file 값저장 후 line 그리기 위해 어떤것이 들어왔는지 알려고\r\n        numPanes: 1, //화면분할 몇개 했는지\r\n        selectScreen: 1,\r\n    },\r\n    getters,\r\n    mutations,\r\n    // mutations: {\r\n    //     saveOpenProject(state, payload) {\r\n    //         state = payload\r\n    //     },\r\n    //     selectOpenProject(state, payload) {\r\n    //         state.openProjectIndex = payload.openProjectIndex\r\n    //     },\r\n    //     setmakeProject(state, payload) {\r\n    //         state.ismakeProject = payload.makeproject\r\n    //     },\r\n    //     addProject(state, payload) {\r\n    //         var newUUid = uuid.v1()\r\n    //         state.SAHLProject.push({\r\n    //             uuid: newUUid,\r\n    //             name: payload.name,\r\n    //             DataTypes: { CompuMethod: [], DataConstr: [], ApplicationArrayDataType: [], ImplementationDataType: [] },\r\n    //             Service: {\r\n    //                 SomeIPServiceInterfaceDeployment: [],\r\n    //                 ServiceInterface: [],\r\n    //                 SomeIPClientEvent: [],\r\n    //                 SomeIPServerEvent: [],\r\n    //                 Error: [],\r\n    //                 ErrorSet: [],\r\n    //                 ErrorDomain: [],\r\n    //                 SomeIPClientServiceInstance: [],\r\n    //                 SomeIPServerServiceInstance: [],\r\n    //                 SomeIPServiceInstanceToMachine: [],\r\n    //                 ServiceInstanceToPortPrototype: [],\r\n    //                 RequiredSomeIP: [],\r\n    //                 ProvidedSomeIP: []\r\n    //             },\r\n    //             Machine: { Machine: [], MachineDesign: [], EthernetCluster: [], ModeDeclarationGroup: [], HWElement: [] },\r\n    //             AdaptiveApplication: { ProtoMachineMapping: [], SWComponents: [], Process: [], Executable: [], StartupConfig: [], DeterministicClient: [], ProcessDesign: [] },\r\n    //             Per: { PERFileArray: [], PERFileProxy: [], PERKeyValueD: [], PERKeyValueDI: [], PERPPtoFileArray: [], PERPPtoKeyValue: [] },\r\n    //             IamG: { FieldG: [], EventG: [], MethodG: [], FieldGD: [], EventGD: [], MethodGD: [] }\r\n    //         })\r\n    //         state.navigatorList.push({\r\n    //             uuid: newUUid,\r\n    //             name: payload.name,\r\n    //             validation: false,\r\n    //             children: [{\r\n    //                     uuid: constant.DateType_str,\r\n    //                     name: constant.DateType_str,\r\n    //                     icon: \"mdi-folder\",\r\n    //                     validation: false,\r\n    //                     children: [\r\n    //                         { uuid: constant.CompuMethod_str, name: constant.CompuMethod_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.DataConstr_str, name: constant.DataConstr_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.ApplicationArray_str, name: constant.ApplicationArray_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.Implementation_str, name: constant.Implementation_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                     ]\r\n    //                 },\r\n    //                 {\r\n    //                     uuid: constant.Service_str,\r\n    //                     name: constant.Service_str,\r\n    //                     icon: \"mdi-folder\",\r\n    //                     validation: false,\r\n    //                     children: [{\r\n    //                             uuid: constant.ServiceInterfaces_str,\r\n    //                             name: constant.ServiceInterfaces_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.SomeIPServiceInterfaceDeployment_str, name: constant.SomeIPServiceInterfaceDeployment_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ServiceInterface_str, name: constant.ServiceInterface_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] }\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.SomeIPEvents_str,\r\n    //                             name: constant.SomeIPEvents_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.Client_str, name: constant.Client_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.Server_str, name: constant.Server_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.ServiceInstances_str,\r\n    //                             name: constant.ServiceInstances_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.SomeIPClient_str, name: constant.SomeIPClient_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.SomeIPServer_str, name: constant.SomeIPServer_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.SomeIPToMachineMapping_str, name: constant.SomeIPToMachineMapping_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ToPortPrototypeMapping_str, name: constant.ToPortPrototypeMapping_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.RequiredSomeIP_str, name: constant.RequiredSomeIP_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ProvidedSomeIP_str, name: constant.ProvidedSomeIP_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.Errors_str,\r\n    //                             name: constant.Errors_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.Error_str, name: constant.Error_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.Errorset_str, name: constant.Errorset_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ErrorDomain_str, name: constant.ErrorDomain_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                     ]\r\n    //                 },\r\n    //                 {\r\n    //                     uuid: constant.AdaptiveApplication_str,\r\n    //                     name: constant.AdaptiveApplication_str,\r\n    //                     icon: \"mdi-folder\",\r\n    //                     validation: false,\r\n    //                     children: [\r\n    //                         { uuid: constant.ProcesstoMachineMapping_str, name: constant.ProcesstoMachineMapping_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.SWComponents_str, name: constant.SWComponents_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.Process_str, name: constant.Process_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.ProcessDesign_str, name: constant.ProcessDesign_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.Executable_str, name: constant.Executable_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.StartupConfig_str, name: constant.StartupConfig_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.DeterministicClient_str, name: constant.DeterministicClient_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] }\r\n    //                     ]\r\n    //                 },\r\n    //                 {\r\n    //                     uuid: constant.Machines_str,\r\n    //                     name: constant.Machines_str,\r\n    //                     icon: \"mdi-folder\",\r\n    //                     validation: false,\r\n    //                     children: [\r\n    //                         { uuid: constant.Machine_str, name: constant.Machine_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.MachineDesigne_str, name: constant.MachineDesigne_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.EthernetCluster_str, name: constant.EthernetCluster_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.ModeDeclarationGroup_str, name: constant.ModeDeclarationGroup_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                         { uuid: constant.HWElement_str, name: constant.HWElement_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                     ]\r\n    //                 },\r\n    //                 {\r\n    //                     uuid: constant.Platform_str,\r\n    //                     name: constant.Platform_str,\r\n    //                     icon: \"mdi-folder\",\r\n    //                     validation: false,\r\n    //                     children: [{\r\n    //                             uuid: constant.PER_str,\r\n    //                             name: constant.PER_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.FileArray_str, name: constant.FileArray_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.FileProxyInterf_str, name: constant.FileProxyInterf_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.KeyValueData_str, name: constant.KeyValueData_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.KeyValueDI_str, name: constant.KeyValueDI_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.PortProtoFileA_str, name: constant.PortProtoFileA_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.PortProtoKeyV_str, name: constant.PortProtoKeyV_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.PHM_str,\r\n    //                             name: constant.PHM_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.PlatformHealthManagC_str, name: constant.PlatformHealthManagC_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.PHMSupervised_str, name: constant.PHMSupervised_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.RecoveryVA_str, name: constant.RecoveryVA_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.HealthChannel_str, name: constant.HealthChannel_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.RecoveryActionInterf_str, name: constant.RecoveryActionInterf_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ContritoMachine_str, name: constant.ContritoMachine_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.NM_str,\r\n    //                             name: constant.NM_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.NMInstantiation_str, name: constant.NMInstantiation_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.NMNetWorkHandle_str, name: constant.NMNetWorkHandle_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.UDPNMCluster_str, name: constant.UDPNMCluster_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.UDPNMNetworkC_str, name: constant.UDPNMNetworkC_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.UDPNMNode_str, name: constant.UDPNMNode_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.NMConfig_str, name: constant.NMConfig_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.Log_str,\r\n    //                             name: constant.Log_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.LogandTrace_str, name: constant.LogandTrace_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.DLTlogChannel_str, name: constant.DLTlogChannel_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.DLTMessage_str, name: constant.DLTMessage_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.DLTLogChanneltoPro_str, name: constant.DLTLogChanneltoPro_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.IAM_str,\r\n    //                             name: constant.IAM_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.ComFieldGrant_str, name: constant.ComFieldGrant_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ComEventGrant_str, name: constant.ComEventGrant_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ComMethodGrant_str, name: constant.ComMethodGrant_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ComFieldGDesign_str, name: constant.ComFieldGDesign_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ComEventGDesign_str, name: constant.ComEventGDesign_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.ComMethodGDesign_str, name: constant.ComMethodGDesign_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n    //                         {\r\n    //                             uuid: constant.UCM_str,\r\n    //                             name: constant.UCM_str,\r\n    //                             icon: \"mdi-folder\",\r\n    //                             validation: false,\r\n    //                             children: [{ uuid: constant.SWCluster_str, name: constant.SWCluster_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.SWPackage_str, name: constant.SWPackage_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                                 { uuid: constant.VehiclePackage_str, name: constant.VehiclePackage_str, icon: 'mdi-alpha-e-circle-outline', validation: false, children: [] },\r\n    //                             ]\r\n    //                         },\r\n\r\n    //                     ]\r\n    //                 }\r\n    //             ]\r\n    //         })\r\n    //         state.connectionLine.push({ start: [], end: [] })\r\n    //             //localStorage.setItem(\"SAHLProject\", JSON.stringify(state.SAHLProject))\r\n    //             //localStorage.setItem(\"navigatorList\", JSON.stringify(state.navigatorList))\r\n    //     },\r\n    //     deleteProject(state) {\r\n    //         state.ismakeProject = false\r\n    //         state.openProjectIndex = 0\r\n    //         state.SAHLProject = []\r\n    //         state.navigatorList = []\r\n    //         state.connectionLine = []\r\n    //         state.detailViewerList = []\r\n    //         state.detailViewer = { uuid: '', element: '' }\r\n    //         state.activeUUID = null\r\n    //         state.detailViewUUID = null\r\n    //         state.idexDetailView = undefined\r\n    //         state.strSavePath = []\r\n    //         EventBus.$emit('delete-line', 'all')\r\n    //             //localStorage.setItem(\"SAHLProject\", JSON.stringify(state.SAHLProject))\r\n    //             //localStorage.setItem(\"navigatorList\", JSON.stringify(state.navigatorList))\r\n    //     },\r\n    //     setuuid(state, payload) {\r\n    //         state.activeUUID = payload.uuid\r\n    //     },\r\n    //     copyElement(state, payload) {\r\n    //         var idxEle = null,\r\n    //             copyEle\r\n    //         const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //         const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //         if (payload.parent == constant.CompuMethod_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameCompuMethod\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.CompuMethod_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.DataConstr_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameDataConstr\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.DataConstr_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ApplicationArray_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameApplicationArray\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.ApplicationArray_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Implementation_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameImplementation\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Machine_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Machine.Machine[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.Machine[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameMachine\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.Machine.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.MachineDesigne_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameMachineDesign\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.EthernetCluster_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameEthernetCluster\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ModeDeclarationGroup_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameModeDeclarationGroup\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.ModeDeclarationGroup_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.HWElement_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameHWElement\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.HWElement.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.HWElement_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ProcesstoMachineMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameProcesstoMachineMapping\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.SWComponents_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameSWComponents\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Process_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameProcess\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ProcessDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameProcessDesign\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Executable_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameExecutable\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.StartupConfig_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameStartupConfig\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.StartupConfig_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.DeterministicClient_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameDeterministicClient\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.DeterministicClient_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameSomeIPService\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ServiceInterface_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameServiceInterface\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Client_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameClient\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Client_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Server_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameServer\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Server_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.SomeIPClient_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameSomeIPClient\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPClient_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.SomeIPServer_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameSomeIPServer\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPServer_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.SomeIPToMachineMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameSomeIPtoMachine\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ToPortPrototypeMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameToPortPrototype\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.RequiredSomeIP_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameRequiredSomeIP\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ProvidedSomeIP_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameProvidedSomeIP\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Error_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.Error[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.Error[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameError\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.Error.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.Errorset_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameErrorSet\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorSet.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ErrorDomain_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameErrorDomain\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.ErrorDomain_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.FileArray_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERFileArray.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERFileArray\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileArray.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileArray_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.FileProxyInterf_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERFileProxy[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileProxy[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERFileProxy\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileProxyInterf_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.KeyValueData_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERKeyValueD\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueData_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.KeyValueDI_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERKeyValueDI\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueDI_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.PortProtoFileA_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERPPtoFileArray\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.PortProtoKeyV_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNamePERPPtoKeyValue\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComFieldGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameFieldG\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldG.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComEventGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.EventG[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventG[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameEventG\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventG.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComMethodGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameMethodG\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodG.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComFieldGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameFieldGD\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldGD.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComEventGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameEventGD\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventGD.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         } else if (payload.parent == constant.ComMethodGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             copyEle = JSON.parse(JSON.stringify(state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxEle]))\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxEle].zindex = 2\r\n    //             copyEle.uuid = uuid.v1()\r\n    //             copyEle.name = this.getters.getNameMethodGD\r\n    //             copyEle.left = elementX\r\n    //             copyEle.top = elementY\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodGD.push(copyEle)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children.push({ uuid: copyEle.uuid, name: copyEle.name, icon: \"mdi-clipboard-outline\", validation: false, })\r\n    //         }\r\n    //         state.activeUUID = copyEle.uuid\r\n    //         Vue.nextTick(() => { // 선 하나씩 그려주기 때문에 끝날때 active line 해줘야한다.\r\n    //             EventBus.$emit('setLineActive', payload.uuid, false)\r\n    //             EventBus.$emit('new-element', copyEle.uuid)\r\n    //             Vue.nextTick(() => {\r\n    //                 var activeLine = this.getters.getactiveLine(payload.uuid)\r\n    //                 activeLine.forEach((i, n) => {\r\n    //                     console.log(i)\r\n    //                     var startUUID = state.connectionLine[state.openProjectIndex].start[i].split('/')\r\n    //                     var tableLine = startUUID[1].split('-')\r\n    //                     if (startUUID[0] == payload.uuid) {\r\n    //                         console.log(startUUID[1])\r\n    //                         Vue.nextTick(() => {\r\n    //                             this.commit('setConnectionline', { start: copyEle.uuid + '/' + startUUID[1], end: state.connectionLine[state.openProjectIndex].end[i] })\r\n    //                         })\r\n    //                         Vue.nextTick(() => {\r\n    //                             var changTab = null,\r\n    //                                 tabId = null //tab에서 선은 따로따로 그리기 때문에 하나씩 넣어야한다.\r\n    //                             if (tableLine[0] == 'field' || tableLine[0] == 'event' || tableLine[0] == 'argtable' || tableLine[0] == 'methoderrors' || tableLine[0] == 'methoderror' ||\r\n    //                                 tableLine[0] == 'providEventG' || tableLine[0] == 'providServer' || tableLine[0] == 'requiredEventG' || tableLine[0] == 'requiredClient' ||\r\n    //                                 tableLine[0] == 'fgcontext' || tableLine[0] == 'fgtarget' || tableLine[0] == 'processresorce' || tableLine[0] == 'processstartup' ||\r\n    //                                 tableLine[0] == 'comconet') {\r\n    //                                 changTab = true\r\n    //                                 if (tableLine[0] == 'argtable' || tableLine[0] == 'methoderrors' || tableLine[0] == 'methoderror') {\r\n    //                                     tabId = 'methods'\r\n    //                                 } else if (tableLine[0] == 'providEventG' || tableLine[0] == 'providServer') {\r\n    //                                     tabId = 'providE'\r\n    //                                 } else if (tableLine[0] == 'requiredEventG' || tableLine[0] == 'requiredClient') {\r\n    //                                     tabId = 'requiredE'\r\n    //                                 } else if (tableLine[0] == 'fgcontext' || tableLine[0] == 'fgtarget' || tableLine[0] == 'processresorce' || tableLine[0] == 'processstartup') {\r\n    //                                     tabId = 'processStarupC'\r\n    //                                 } else if (tableLine[0] == 'comconet') {\r\n    //                                     tabId = 'conditional'\r\n    //                                 } else {\r\n    //                                     tabId = tableLine[0]\r\n    //                                 }\r\n    //                             }\r\n    //                             EventBus.$emit('copy-line', copyEle.uuid, state.connectionLine[state.openProjectIndex].end[i], i, changTab, tabId)\r\n    //                             if (n == activeLine.length - 1) {\r\n    //                                 Vue.nextTick(() => {\r\n    //                                     //console.log(state.visibleLine)\r\n    //                                     if (state.visibleLine) {\r\n    //                                         EventBus.$emit('setLineActive', copyEle.uuid, true)\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             })\r\n    //         })\r\n    //     },\r\n    //     setConnectionline(state, payload) {\r\n    //         //console.log('setConnectionline ' + payload.start + ' /// ' + payload.end)\r\n    //         state.connectionLine[state.openProjectIndex].start.push(payload.start)\r\n    //         state.connectionLine[state.openProjectIndex].end.push(payload.end)\r\n    //     },\r\n    //     deletConnectionline(state, payload) {\r\n    //         state.connectionLine[state.openProjectIndex].start.splice(payload.startnum, 1)\r\n    //         state.connectionLine[state.openProjectIndex].end.splice(payload.startnum, 1)\r\n    //     },\r\n    //     setDetailView(state, payload) {\r\n    //         console.log('setDetailView**' + state.detailViewer.uuid + '//' + payload.uuid)\r\n    //         if (state.detailViewer.uuid != payload.uuid) {\r\n    //             console.log('...' + state.idexDetailView + '+' + state.detailViewerList.length)\r\n    //             if (state.idexDetailView < state.detailViewerList.length - 1) {\r\n    //                 console.log('.##.' + state.detailViewerList[state.idexDetailView + 1].uuid + '+' + payload.uuid)\r\n    //                 if (state.detailViewerList[state.idexDetailView + 1].uuid != payload.uuid) {\r\n    //                     state.detailViewerList.splice(state.idexDetailView + 1)\r\n    //                     console.log('splice' + state.idexDetailView)\r\n    //                 } else {\r\n    //                     this.commit('setfrontDetailView')\r\n    //                     console.log('splice else ' + state.idexDetailView)\r\n    //                     return\r\n    //                 }\r\n    //             }\r\n    //             state.detailViewer = { uuid: payload.uuid, element: payload.element }\r\n    //             state.detailViewerList.push({ uuid: payload.uuid, element: payload.element })\r\n    //             state.idexDetailView = state.detailViewerList.length - 1\r\n    //             state.detailViewUUID = payload.uuid\r\n    //             console.log('set//' + state.idexDetailView + '//' + state.detailViewer.element + '//' + state.detailViewer.uuid)\r\n    //             console.log(state.detailViewerList)\r\n    //         } else {\r\n    //             state.detailViewerList.splice(state.detailViewerList.length - 1, 1)\r\n    //             state.detailViewer = { uuid: payload.uuid, element: payload.element }\r\n    //             state.detailViewerList.push({ uuid: payload.uuid, element: payload.element })\r\n    //             state.idexDetailView = state.detailViewerList.length - 1\r\n    //             state.detailViewUUID = payload.uuid\r\n    //         }\r\n    //     },\r\n    //     setBackDetailView(state) {\r\n    //         if (state.idexDetailView == 0) {\r\n    //             return\r\n    //         }\r\n    //         state.idexDetailView -= 1\r\n    //         state.detailViewer = { uuid: state.detailViewerList[state.idexDetailView].uuid, element: state.detailViewerList[state.idexDetailView].element }\r\n    //         state.detailViewUUID = state.detailViewerList[state.idexDetailView].uuid\r\n    //         console.log('back' + state.detailViewerList[state.idexDetailView].element + '//' + state.detailViewer.uuid)\r\n    //     },\r\n    //     setfrontDetailView(state) {\r\n    //         if (state.idexDetailView == state.detailViewerList.length - 1) {\r\n    //             return\r\n    //         }\r\n    //         state.idexDetailView += 1\r\n    //         state.detailViewer = { uuid: state.detailViewerList[state.idexDetailView].uuid, element: state.detailViewerList[state.idexDetailView].element }\r\n    //         state.detailViewUUID = state.detailViewerList[state.idexDetailView].uuid\r\n    //         console.log('front' + state.detailViewer.element + '//' + state.detailViewer.uuid)\r\n\r\n    //     },\r\n    //     setVisibleDetailView(state, payload) {\r\n    //         state.visibleDetailView = payload.visible\r\n    //         localStorage.setItem(\"visibleDetailView\", JSON.stringify(state.visibleDetailView))\r\n    //     },\r\n    //     setVisibleLine(state, payload) {\r\n    //         state.visibleLine = payload.isvisible\r\n    //     },\r\n    //     setExit() {\r\n    //         console.log('setExit')\r\n    //             //, JSON.stringify(state.SAHLProject))\r\n    //             //localStorage.setItem(\"navigatorList\", JSON.stringify(state.navigatorList))\r\n    //     },\r\n    //     deleteDetailViewerList(state) {\r\n    //         state.detailViewerList = []\r\n    //         state.detailViewer = { uuid: '', element: '' }\r\n    //         state.detailViewUUID = null\r\n    //         console.log(state.detailViewerList)\r\n    //     },\r\n    //     setPanesNum(state, payload) {\r\n    //         state.numPanes = payload.panes\r\n    //     },\r\n    //     setSelectScreen(state, payload) {\r\n    //         state.selectScreen = payload.num\r\n    //     },\r\n    //     setZoomInOut(state, payload) {\r\n    //         if (payload.valueDetail == null) {\r\n    //             state.setting = { zoomMain: payload.valueMain, zoomDetail: state.setting.zoomDetail }\r\n    //         } else {\r\n    //             state.setting = { zoomMain: payload.valueMain, zoomDetail: payload.valueDetail }\r\n    //         }\r\n    //         // 이렇게 변경해야지 watch에서 변경되었는지 알수있다!!!!\r\n    //         localStorage.setItem(\"setting\", JSON.stringify(state.setting))\r\n    //     },\r\n    //     setOpenCloseSearch(state, payload) {\r\n    //         state.isOpenCloseSearch = payload.isopen\r\n    //     },\r\n    //     setOpenCloseDetailView(state, payload) {\r\n    //         state.isOpenCloseDetailView = payload.isopen\r\n    //     },\r\n    //     setOpenCloseNavigationView(state, payload) {\r\n    //         state.isOpenCloseNavigationView = payload.isopen\r\n    //     },\r\n    //     setPositionofLine(state, payload) {\r\n    //         state.isPositionLine = payload.up\r\n    //     },\r\n    //     setDraggable(state, payload) {\r\n    //         state.isDraggable = payload.drag\r\n    //     },\r\n    //     setSaveValidate(state, payload) {\r\n    //         console.log('setSaveValidate')\r\n    //         state.errorList = []\r\n    //         for (var data in state.SAHLProject[state.openProjectIndex]) {\r\n    //             if (data != 'uuid' && data != 'name') {\r\n    //                 for (var datatype in state.SAHLProject[state.openProjectIndex][data]) {\r\n    //                     state.SAHLProject[state.openProjectIndex][data][datatype].forEach((ele, elidx) => {\r\n    //                         payload.savelist.forEach(list => {\r\n    //                             list.saveFile.forEach(item => {\r\n    //                                 if (item.uuid == ele.uuid) {\r\n    //                                     if (ele.name == '') {\r\n    //                                         state.errorList.push({ uuid: ele.uuid, name: ele.name, parent: data, path: ele.path, error: 'name' })\r\n    //                                     }\r\n    //                                     if (ele.path == '') {\r\n    //                                         state.errorList.push({ uuid: ele.uuid, name: ele.name, parent: data, path: ele.path, error: 'path' })\r\n    //                                     }\r\n\r\n    //                                     if (ele.name == '' || ele.path == '') {\r\n    //                                         this.commit('checkVaildationElement', { datatype: datatype, elidx: elidx })\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n    //                         })\r\n    //                     })\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     },\r\n    //     setCheckValidate(state) {\r\n    //         console.log('setCheckValidate')\r\n    //         state.errorList = []\r\n    //         for (var data in state.SAHLProject[state.openProjectIndex]) {\r\n    //             if (data != 'uuid' && data != 'name') {\r\n    //                 for (var datatype in state.SAHLProject[state.openProjectIndex][data]) {\r\n    //                     state.SAHLProject[state.openProjectIndex][data][datatype].forEach((ele, elidx) => {\r\n    //                         var checkNameSpace = false\r\n\r\n    //                         if (ele.name == '') {\r\n    //                             state.errorList.push({ uuid: ele.uuid, name: ele.name, parent: data, path: ele.path, error: 'name' })\r\n    //                         }\r\n    //                         if (ele.path == '') {\r\n    //                             state.errorList.push({ uuid: ele.uuid, name: ele.name, parent: data, path: ele.path, error: 'path' })\r\n    //                         }\r\n    //                         if (ele.namespace != undefined) {\r\n    //                             var namespace = ele.namespace.split(',')\r\n    //                             console.log(namespace)\r\n    //                             namespace.forEach((item, i) => {\r\n    //                                 if (!(item == '' && i == namespace.length - 1)) {\r\n    //                                     var strSymble = item.split('/')\r\n    //                                     console.log(strSymble)\r\n    //                                     if (strSymble.length != 2 || strSymble[0] == '' || strSymble[0] == undefined || strSymble[1] == '' || strSymble[1] == undefined) {\r\n    //                                         if (checkNameSpace == false) {\r\n    //                                             state.errorList.push({ uuid: ele.uuid, name: ele.name, parent: data, path: ele.path, error: 'Name Space' })\r\n    //                                         }\r\n    //                                         checkNameSpace = true\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n\r\n    //                         }\r\n\r\n    //                         if (ele.name == '' || ele.path == '' || checkNameSpace == true) {\r\n    //                             this.commit('checkVaildationElement', { datatype: datatype, elidx: elidx })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n\r\n    //             }\r\n    //         }\r\n    //     },\r\n    //     checkVaildationElement(state, payload) {\r\n    //         var idxchild = null,\r\n    //             idxchildchild = null,\r\n    //             idxService = null\r\n\r\n    //         if (payload.datatype == 'CompuMethod') {\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.CompuMethod_index\r\n    //         } else if (payload.datatype == 'DataConstr') {\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.DataConstr_index\r\n    //         } else if (payload.datatype == 'ApplicationArrayDataType') {\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.ApplicationArray_index\r\n    //         } else if (payload.datatype == 'ImplementationDataType') {\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.Implementation_index\r\n    //         } else if (payload.datatype == 'Machine') {\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.Machine_index\r\n    //         } else if (payload.datatype == 'MachineDesign') {\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.MachineDesigne_index\r\n    //         } else if (payload.datatype == 'EthernetCluster') {\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.EthernetCluster_index\r\n    //         } else if (payload.datatype == 'ModeDeclarationGroup') {\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.ModeDeclarationGroup_index\r\n    //         } else if (payload.datatype == 'HWElement') {\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.HWElement_index\r\n    //         } else if (payload.datatype == 'ProtoMachineMapping') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.ProcesstoMachineMapping_index\r\n    //         } else if (payload.datatype == 'SWComponents') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.SWComponents_index\r\n    //         } else if (payload.datatype == 'Process') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.Process_index\r\n    //         } else if (payload.datatype == 'Executable') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.Executable_index\r\n    //         } else if (payload.datatype == 'StartupConfig') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.StartupConfig_index\r\n    //         } else if (payload.datatype == 'DeterministicClient') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.DeterministicClient_index\r\n    //         } else if (payload.datatype == 'ProcessDesign') {\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.ProcessDesign_index\r\n    //         } else if (payload.datatype == 'SomeIPServiceInterfaceDeployment') {\r\n    //             idxService = constant.ServiceInterfaces_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.SomeIPServiceInterfaceDeployment_index\r\n    //         } else if (payload.datatype == 'ServiceInterface') {\r\n    //             idxService = constant.ServiceInterfaces_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.ServiceInterface_index\r\n    //         } else if (payload.datatype == 'SomeIPClientEvent') {\r\n    //             idxService = constant.SomeIPEvents_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.Client_index\r\n    //         } else if (payload.datatype == 'SomeIPServerEvent') {\r\n    //             idxService = constant.SomeIPEvents_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.Server_index\r\n    //         } else if (payload.datatype == 'Error') {\r\n    //             idxService = constant.Errors_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.Error_index\r\n    //         } else if (payload.datatype == 'ErrorSet') {\r\n    //             idxService = constant.Errors_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.Errorset_index\r\n    //         } else if (payload.datatype == 'ErrorDomain') {\r\n    //             idxService = constant.Errors_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.ErrorDomain_index\r\n    //         } else if (payload.datatype == 'SomeIPClientServiceInstance') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.SomeIPClient_index\r\n    //         } else if (payload.datatype == 'SomeIPServerServiceInstance') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.SomeIPServer_index\r\n    //         } else if (payload.datatype == 'SomeIPServiceInstanceToMachine') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.SomeIPToMachineMapping_index\r\n    //         } else if (payload.datatype == 'ServiceInstanceToPortPrototype') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.ToPortPrototypeMapping_index\r\n    //         } else if (payload.datatype == 'RequiredSomeIP') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.RequiredSomeIP_index\r\n    //         } else if (payload.datatype == 'ProvidedSomeIP') {\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxchild = constant.Service_index\r\n    //             idxchildchild = constant.ProvidedSomeIP_index\r\n    //         } else if (payload.datatype == 'PERFileArray') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.FileArray_index\r\n    //         } else if (payload.datatype == 'PERFileProxy') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.FileProxyInterf_index\r\n    //         } else if (payload.datatype == 'PERKeyValueD') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.KeyValueData_index\r\n    //         } else if (payload.datatype == 'PERKeyValueDI') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.KeyValueDI_index\r\n    //         } else if (payload.datatype == 'PERPPtoFileArray') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.PortProtoFileA_index\r\n    //         } else if (payload.datatype == 'PERPPtoKeyValue') {\r\n    //             idxService = constant.PER_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.PortProtoKeyV_index\r\n    //         } else if (payload.datatype == 'FieldG') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComFieldGrant_index\r\n    //         } else if (payload.datatype == 'EventG') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComEventGrant_index\r\n    //         } else if (payload.datatype == 'MethodG') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComMethodGrant_index\r\n    //         } else if (payload.datatype == 'FieldGD') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComFieldGDesign_index\r\n    //         } else if (payload.datatype == 'EventGD') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComEventGDesign_index\r\n    //         } else if (payload.datatype == 'MethodGD') {\r\n    //             idxService = constant.IAM_index\r\n    //             idxchild = constant.Platform_index\r\n    //             idxchildchild = constant.ComMethodGDesign_index\r\n    //         }\r\n\r\n    //         if (idxchild == constant.Service_index) {\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxService].children[idxchildchild].children[payload.elidx].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxService].children[idxchildchild].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxService].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].validation = true\r\n    //         } else {\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxchildchild].children[payload.elidx].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxchildchild].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].validation = true\r\n    //             state.navigatorList[state.openProjectIndex].validation = true\r\n    //         }\r\n    //     },\r\n    //     setSavePath(state, payload) {\r\n    //         state.strSavePath.push(payload.strPath)\r\n    //         localStorage.setItem(\"savePath\", JSON.stringify(state.strSavePath))\r\n    //     },\r\n    //     deleteSavePath(state, payload) {\r\n    //         state.strSavePath = state.strSavePath.filter(item => {\r\n    //             return payload.deletePath.indexOf(item) < 0\r\n    //         })\r\n    //         localStorage.setItem(\"savePath\", JSON.stringify(state.strSavePath))\r\n    //     },\r\n    //     setzIndex(state, payload) {\r\n    //         //console.log('setzIndex/  ' + payload.zindex)\r\n    //         //console.log(payload.parent)\r\n    //         //console.log(payload.uuid)\r\n    //         if (payload.parent == constant.CompuMethod_str) {\r\n    //             this.commit('editCompuMehtod', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.DataConstr_str) {\r\n    //             this.commit('editDataConstr', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ApplicationArray_str) {\r\n    //             this.commit('editApplicationArray', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Implementation_str) {\r\n    //             this.commit('editImplementation', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //             this.commit('editSomeIPService', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ServiceInterface_str) {\r\n    //             this.commit('editServiceInterface', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Client_str) {\r\n    //             this.commit('editClient', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Server_str) {\r\n    //             this.commit('editServer', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.SomeIPClient_str) {\r\n    //             this.commit('editSomeIPClient', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.SomeIPServer_str) {\r\n    //             this.commit('editSomeIPServer', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.SomeIPToMachineMapping_str) {\r\n    //             this.commit('editSomeIPtoMachine', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ToPortPrototypeMapping_str) {\r\n    //             this.commit('editToPortPrototype', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.RequiredSomeIP_str) {\r\n    //             this.commit('editRequiredSomeIP', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ProvidedSomeIP_str) {\r\n    //             this.commit('editProvidedSomeIP', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Error_str) {\r\n    //             this.commit('editError', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Errorset_str) {\r\n    //             this.commit('editErrorSet', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ErrorDomain_str) {\r\n    //             this.commit('editErrorDomain', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ProcesstoMachineMapping_str) {\r\n    //             this.commit('editProtoMachineMapping', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.SWComponents_str) {\r\n    //             this.commit('editSWComponents', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Process_str) {\r\n    //             this.commit('editProcess', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ProcessDesign_str) {\r\n    //             this.commit('editProcessDesign', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Executable_str) {\r\n    //             this.commit('editExecutable', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.StartupConfig_str) {\r\n    //             this.commit('editStartupConfig', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.DeterministicClient_str) {\r\n    //             this.commit('editDeterministicClien', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.Machine_str) {\r\n    //             this.commit('editMachine', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.MachineDesigne_str) {\r\n    //             this.commit('editMachineDesign', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.EthernetCluster_str) {\r\n    //             this.commit('editEthernetCluster', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ModeDeclarationGroup_str) {\r\n    //             this.commit('editModeDeclarationGroup', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.HWElement_str) {\r\n    //             this.commit('editHWElement', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.FileArray_str) {\r\n    //             this.commit('editPERFileArray', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.FileProxyInterf_str) {\r\n    //             this.commit('editPERFileProxy', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.KeyValueData_str) {\r\n    //             this.commit('editPERKeyValueD', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.KeyValueDI_str) {\r\n    //             this.commit('editPERKeyValueDI', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.PortProtoFileA_str) {\r\n    //             this.commit('editPERPPtoFileArray', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.PortProtoKeyV_str) {\r\n    //             this.commit('editPERPPtoKeyValue', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComMethodGDesign_str) {\r\n    //             this.commit('editMethodGD', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComEventGDesign_str) {\r\n    //             this.commit('editEventGD', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComFieldGDesign_str) {\r\n    //             this.commit('editFieldGD', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComMethodGrant_str) {\r\n    //             this.commit('editMethodG', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComEventGrant_str) {\r\n    //             this.commit('editEventG', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         } else if (payload.parent == constant.ComFieldGrant_str) {\r\n    //             this.commit('editFieldG', { compo: \"z\", uuid: payload.uuid, zindex: payload.zindex })\r\n    //         }\r\n    //     },\r\n    //     saveInputfile(state, payload) {\r\n    //         const getEditPath = (ele, path) => {\r\n    //             if (ele.parentNode.parentNode.nodeName == 'AR-PACKAGE') {\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         path = item.childNodes[0].nodeValue + '/' + path\r\n    //                     }\r\n    //                 })\r\n    //                 return getEditPath(ele.parentNode.parentNode, path)\r\n    //             }\r\n\r\n    //             ele.childNodes.forEach(item => {\r\n    //                 if (item.nodeName == \"SHORT-NAME\") {\r\n    //                     path = '/' + item.childNodes[0].nodeValue + '/' + path\r\n    //                 }\r\n    //             })\r\n    //             path = path.substr(0, path.length - 1)\r\n    //             return path\r\n    //         }\r\n\r\n    //         /// COMPU-METHOD\r\n    //         var compu = payload.xmlDoc.getElementsByTagName('COMPU-METHOD')\r\n    //         compu.forEach(ele => {\r\n    //                 var compuName = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     compuCate = ''\r\n    //                 var scalesItem = []\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         compuName = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"CATEGORY\") {\r\n    //                         compuCate = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"COMPU-INTERNAL-TO-PHYS\") {\r\n    //                         var scales = item.childNodes[1].childNodes\r\n    //                         scales.forEach((scale, s) => {\r\n    //                             if (s % 2 != 0) {\r\n    //                                 var editScaleItem = { const: '', symbol: '', lowerlimit: '', upperlimit: '', desc: '' }\r\n    //                                 scale.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"COMPU-CONST\") {\r\n    //                                             editScaleItem.const = data.childNodes[1].childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SYMBOL\") {\r\n    //                                             editScaleItem.symbol = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"LOWER-LIMIT\") {\r\n    //                                             editScaleItem.lowerlimit = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"UPPER-LIMIT\") {\r\n    //                                             editScaleItem.upperlimit = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"DESC\") {\r\n    //                                             editScaleItem.desc = data.childNodes[1].childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editScaleItem)\r\n    //                                 scalesItem.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementCompuMehtod', {\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     name: compuName,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     category: compuCate,\r\n    //                     scales: scalesItem,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + compuName, parent: constant.CompuMethod_str })\r\n    //                 EventBus.$emit('add-element', constant.DateType_str)\r\n    //                 EventBus.$emit('add-element', constant.CompuMethod_str)\r\n    //             })\r\n    //             /// Data-Constr\r\n    //         var datacon = payload.xmlDoc.getElementsByTagName('DATA-CONSTR')\r\n    //         datacon.forEach(ele => {\r\n    //                 var dataconName = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     dataconLow = '',\r\n    //                     dataconUpper = ''\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         dataconName = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DATA-CONSTR-RULES\") {\r\n    //                         var rules = item.childNodes[1].childNodes[1].childNodes\r\n    //                         rules.forEach(data => {\r\n    //                             if (data.nodeName == \"LOWER-LIMIT\") {\r\n    //                                 dataconLow = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"UPPER-LIMIT\") {\r\n    //                                 dataconUpper = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementDataConstr', {\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     name: dataconName,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     lowerlimit: dataconLow,\r\n    //                     upperlimit: dataconUpper,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + dataconName, parent: constant.DataConstr_str })\r\n    //                 EventBus.$emit('add-element', constant.DateType_str)\r\n    //                 EventBus.$emit('add-element', constant.DataConstr_str)\r\n    //             })\r\n    //             /// APPLICATION-ARRAY-DATA-TYPE\r\n    //         var application = payload.xmlDoc.getElementsByTagName('APPLICATION-ARRAY-DATA-TYPE')\r\n    //         application.forEach(ele => {\r\n    //                 var appliName = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     appliCategory = '',\r\n    //                     appliDynamicArrySize = '',\r\n    //                     appliElename = '',\r\n    //                     appliElehandling = null,\r\n    //                     appliElesemantics = null,\r\n    //                     appliElemaxnumber = ''\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         appliName = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"CATEGORY\") {\r\n    //                         appliCategory = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DYNAMIC-ARRAY-SIZE-PROFILE\") {\r\n    //                         appliDynamicArrySize = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ELEMENT\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                 appliElename = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"ARRAY-SIZE-HANDLING\") {\r\n    //                                 appliElehandling = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"ARRAY-SIZE-SEMANTICS\") {\r\n    //                                 appliElesemantics = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"MAX-NUMBER-OF-ELEMENTS\") {\r\n    //                                 appliElemaxnumber = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementApplicationArray', {\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     name: appliName,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     category: appliCategory,\r\n    //                     dynamicArrySize: appliDynamicArrySize,\r\n    //                     elename: appliElename,\r\n    //                     elehandling: appliElehandling,\r\n    //                     elesemantics: appliElesemantics,\r\n    //                     elemaxnumber: appliElemaxnumber,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + appliName, parent: constant.ApplicationArray_str })\r\n    //                 EventBus.$emit('add-element', constant.DateType_str)\r\n    //                 EventBus.$emit('add-element', constant.ApplicationArray_str)\r\n    //             })\r\n    //             //STD-CPP-IMPLEMENTATION-DATA-TYPE\r\n    //         var implement = payload.xmlDoc.getElementsByTagName('STD-CPP-IMPLEMENTATION-DATA-TYPE')\r\n    //         implement.forEach(ele => {\r\n    //                 var impName = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     impcategory = '',\r\n    //                     impnamespace = '',\r\n    //                     imparraysize = '',\r\n    //                     imptypeemitter = '',\r\n    //                     imptyperef = null,\r\n    //                     imptemplatetype = null,\r\n    //                     impdesc = ''\r\n    //                 var DDPCItem = [],\r\n    //                     IDTElementItem = []\r\n    //                 console.log(ele.childNodes)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         impName = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"CATEGORY\") {\r\n    //                         impcategory = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"NAMESPACES\") {\r\n    //                         item.childNodes.forEach((symbol, s) => {\r\n    //                             if (s % 2 != 0) {\r\n    //                                 symbol.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         impnamespace += data.childNodes[0].nodeValue\r\n    //                                         impnamespace += '/'\r\n    //                                     }\r\n    //                                 })\r\n    //                                 impnamespace = impnamespace.substr(0, impnamespace.length - 1)\r\n    //                                 impnamespace += ','\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"ARRAY-SIZE\") {\r\n    //                         imparraysize = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TYPE-EMITTER\") {\r\n    //                         imptypeemitter = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TYPE-REFERENCE-REF\") {\r\n    //                         imptyperef = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TEMPLATE-ARGUMENTS\") {\r\n    //                         imptemplatetype = item.childNodes[1].childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESC\") {\r\n    //                         impdesc = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SW-DATA-DEF-PROPS\") {\r\n    //                         var swdata = item.childNodes[1].childNodes\r\n    //                         swdata.forEach((condi, c) => {\r\n    //                             var editDDPCItem = { compumethod: null, dataconstr: null }\r\n    //                             if (c % 2 != 0) {\r\n    //                                 condi.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"COMPU-METHOD-REF\") {\r\n    //                                             editDDPCItem.compumethod = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"DATA-CONSTR-REF\") {\r\n    //                                             editDDPCItem.dataconstr = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editDDPCItem)\r\n    //                                 DDPCItem.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"SUB-ELEMENTS\") {\r\n    //                         item.childNodes.forEach((cppImp, c) => {\r\n    //                             var editIDTElementItem = { name: '', typeref: null, inplace: false, desc: '' }\r\n    //                             if (c % 2 != 0) {\r\n    //                                 cppImp.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editIDTElementItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"DESC\") {\r\n    //                                             editIDTElementItem.desc = data.childNodes[1].childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TYPE-REFERENCE\") {\r\n    //                                             data.childNodes.forEach((typeR, t) => {\r\n    //                                                 if (t % 2 != 0) {\r\n    //                                                     if (typeR.nodeName == \"INPLACE\") {\r\n    //                                                         editIDTElementItem.inplace = typeR.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (typeR.nodeName == \"TYPE-REFERENCE-REF\") {\r\n    //                                                         editIDTElementItem.typeref = typeR.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editIDTElementItem)\r\n    //                                 IDTElementItem.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementImplementation', {\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     name: impName,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     category: impcategory,\r\n    //                     namespace: impnamespace,\r\n    //                     arraysize: imparraysize,\r\n    //                     typeemitter: imptypeemitter,\r\n    //                     typeref: imptyperef,\r\n    //                     templatetype: imptemplatetype,\r\n    //                     desc: impdesc,\r\n    //                     ddpc: DDPCItem,\r\n    //                     idtelement: IDTElementItem,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + impName, parent: constant.Implementation_str })\r\n    //                 EventBus.$emit('add-element', constant.DateType_str)\r\n    //                 EventBus.$emit('add-element', constant.Implementation_str)\r\n    //             })\r\n    //             // MACHINE\r\n    //         var machine = payload.xmlDoc.getElementsByTagName('MACHINE')\r\n    //         machine.forEach(ele => {\r\n    //                 var name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     machineDesign = null,\r\n    //                     timeout = '',\r\n    //                     exelaunch = null,\r\n    //                     admin = '',\r\n    //                     hwele = [],\r\n    //                     functionG = [],\r\n    //                     processor = [],\r\n    //                     module = []\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"MACHINE-DESIGN-REF\") {\r\n    //                         machineDesign = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DEFAULT-APPLICATION-TIMEOUT\") {\r\n    //                         timeout = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TRUSTED-PLATFORM-EXECUTABLE-LAUNCH-BEHAVIOR\") {\r\n    //                         exelaunch = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ADMIN-DATA\") {\r\n    //                         admin = item.childNodes[1].childNodes[1].childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"HW-ELEMENT-REFS\") {\r\n    //                         item.childNodes.forEach((data, d) => {\r\n    //                             var editHWItem = { hwelement: null }\r\n    //                             if (d % 2 != 0) {\r\n    //                                 if (data.nodeName == \"HW-ELEMENT-REF\") {\r\n    //                                     editHWItem.hwelement = data.childNodes[0].nodeValue\r\n    //                                     const addObj = Object.assign({}, editHWItem)\r\n    //                                     hwele.push(addObj)\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"FUNCTION-GROUPS\") {\r\n    //                         item.childNodes.forEach((mode, m) => {\r\n    //                             var editFunctionItem = { name: '', type: null, }\r\n    //                             if (m % 2 != 0) {\r\n    //                                 mode.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editFunctionItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TYPE-TREF\") {\r\n    //                                             editFunctionItem.type = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editFunctionItem)\r\n    //                                 functionG.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESSORS\") {\r\n    //                         item.childNodes.forEach((pros, p) => {\r\n    //                             var editPro = { name: '', core: [] }\r\n    //                             if (p % 2 != 0) {\r\n    //                                 pros.childNodes.forEach((pro, r) => {\r\n    //                                     if (r % 2 != 0) {\r\n    //                                         if (pro.nodeName == \"SHORT-NAME\") {\r\n    //                                             editPro.name = pro.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (pro.nodeName == \"CORES\") {\r\n    //                                             pro.childNodes.forEach((procor, o) => {\r\n    //                                                 if (o % 2 != 0) {\r\n    //                                                     var editCoreItem = { name: '', id: '' }\r\n    //                                                     procor.childNodes.forEach((data, d) => {\r\n    //                                                         if (d % 2 != 0) {\r\n    //                                                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                                                 editCoreItem.name = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                             if (data.nodeName == \"CORE-ID\") {\r\n    //                                                                 editCoreItem.id = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                     const addObjRes = Object.assign({}, editCoreItem)\r\n    //                                                     editPro.core.push(addObjRes)\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editPro)\r\n    //                                 processor.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"MODULE-INSTANTIATIONS\") {\r\n    //                         item.childNodes.forEach((os, o) => {\r\n    //                             var editModule = { name: '', resource: [] }\r\n    //                             if (o % 2 != 0) {\r\n    //                                 os.childNodes.forEach((osmodul, s) => {\r\n    //                                     if (s % 2 != 0) {\r\n    //                                         if (osmodul.nodeName == \"SHORT-NAME\") {\r\n    //                                             editModule.name = osmodul.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (osmodul.nodeName == \"RESOURCE-GROUPS\") {\r\n    //                                             osmodul.childNodes.forEach((group, g) => {\r\n    //                                                 var editModuleInsItem = { name: '', cpuUsage: '', memoryUsage: '' }\r\n    //                                                 if (g % 2 != 0) {\r\n    //                                                     group.childNodes.forEach((data, d) => {\r\n    //                                                         if (d % 2 != 0) {\r\n    //                                                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                                                 editModuleInsItem.name = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                             if (data.nodeName == \"CPU-USAGE\") {\r\n    //                                                                 editModuleInsItem.cpuUsage = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                             if (data.nodeName == \"MEM-USAGE\") {\r\n    //                                                                 editModuleInsItem.memoryUsage = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                     const addObjRes = Object.assign({}, editModuleInsItem)\r\n    //                                                     editModule.resource.push(addObjRes)\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editModule)\r\n    //                                 module.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementMachine', {\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     name: name,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     machinedesign: machineDesign,\r\n    //                     timeout: timeout,\r\n    //                     hwelement: hwele,\r\n    //                     executable: exelaunch,\r\n    //                     admin: admin,\r\n    //                     functiongroup: functionG,\r\n    //                     processor: processor,\r\n    //                     moduleinstant: module,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + name, parent: constant.Machine_str })\r\n    //                 EventBus.$emit('add-element', constant.Machines_str)\r\n    //                 EventBus.$emit('add-element', constant.Machine_str)\r\n    //             })\r\n    //             // MACHINE-DESIGN\r\n    //         var machineDesign = payload.xmlDoc.getElementsByTagName('MACHINE-DESIGN')\r\n    //         machineDesign.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     access = null,\r\n    //                     pntimer = '',\r\n    //                     communi = [],\r\n    //                     service = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ACCESS-CONTROL\") {\r\n    //                         access = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PN-RESET-TIMER\") {\r\n    //                         pntimer = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"COMMUNICATION-CONNECTORS\") {\r\n    //                         item.childNodes.forEach((ethernet, e) => {\r\n    //                             var editedItemCC = { name: '', mtu: '', mtuenable: null, timeout: '', endpoint: null, mask: '' }\r\n    //                             if (e % 2 != 0) {\r\n    //                                 ethernet.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editedItemCC.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MAXIMUM-TRANSMISSION-UNIT\") {\r\n    //                                             editedItemCC.mtu = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"PATH-MTU-ENABLED\") {\r\n    //                                             editedItemCC.mtuenable = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"PATH-MTU-TIMEOUT\") {\r\n    //                                             editedItemCC.timeout = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"UNICAST-NETWORK-ENDPOINT-REF\") {\r\n    //                                             editedItemCC.endpoint = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"PNC-FILTER-DATA-MASK\") {\r\n    //                                             editedItemCC.mask = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editedItemCC)\r\n    //                                 communi.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-DISCOVER-CONFIGS\") {\r\n    //                         item.childNodes.forEach((someIP, s) => {\r\n    //                             var editedItemSDC = { msia: null, ssdp: '' }\r\n    //                             if (s % 2 != 0) {\r\n    //                                 someIP.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"MULTICAST-SD-IP-ADDRESS-REF\") {\r\n    //                                             editedItemSDC.msia = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SOMEIP-SERVICE-DISCOVERY-PORT\") {\r\n    //                                             editedItemSDC.ssdp = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editedItemSDC)\r\n    //                                 service.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementMachineDesign', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     access: access,\r\n    //                     resettimer: pntimer,\r\n    //                     connector: communi,\r\n    //                     servicediscover: service,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.MachineDesigne_str })\r\n    //                 EventBus.$emit('add-element', constant.Machines_str)\r\n    //                 EventBus.$emit('add-element', constant.MachineDesigne_str)\r\n    //             })\r\n    //             // ETHERNET-CLUSTER\r\n    //         var ethernetCluster = payload.xmlDoc.getElementsByTagName('ETHERNET-CLUSTER')\r\n    //         ethernetCluster.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     condition = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ETHERNET-CLUSTER-VARIANTS\") {\r\n    //                         item.childNodes.forEach((ethernet, e) => {\r\n    //                             if (e % 2 != 0) {\r\n    //                                 var editedEthernet = { name: '', version: '', channel: [] }\r\n    //                                 ethernet.childNodes.forEach((protocol, p) => {\r\n    //                                     if (p % 2 != 0) {\r\n    //                                         if (protocol.nodeName == \"PROTOCOL-NAME\") {\r\n    //                                             editedEthernet.name = protocol.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (protocol.nodeName == \"PROTOCOL-VERSION\") {\r\n    //                                             editedEthernet.version = protocol.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (protocol.nodeName == \"PHYSICAL-CHANNELS\") {\r\n    //                                             protocol.childNodes.forEach((channels, c) => {\r\n    //                                                 if (c % 2 != 0) {\r\n    //                                                     var editChannel = { name: '', comconnect: [], endpoint: [] }\r\n    //                                                     channels.childNodes.forEach((channel, h) => {\r\n    //                                                         if (h % 2 != 0) {\r\n    //                                                             if (channel.nodeName == \"SHORT-NAME\") {\r\n    //                                                                 editChannel.name = channel.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                             if (channel.nodeName == \"COMM-CONNECTORS\") {\r\n    //                                                                 channel.childNodes.forEach((comm, o) => {\r\n    //                                                                     if (o % 2 != 0) {\r\n    //                                                                         var editCCItem = { connector: null }\r\n    //                                                                         comm.childNodes.forEach(data => {\r\n    //                                                                             if (data.nodeName == \"COMMUNICATION-CONNECTOR-REF\") {\r\n    //                                                                                 editCCItem.connector = data.childNodes[0].nodeValue\r\n    //                                                                             }\r\n    //                                                                         })\r\n    //                                                                         const addObj = Object.assign({}, editCCItem)\r\n    //                                                                         editChannel.comconnect.push(addObj)\r\n    //                                                                     }\r\n    //                                                                 })\r\n    //                                                             }\r\n    //                                                             if (channel.nodeName == \"NETWORK-ENDPOINTS\") {\r\n    //                                                                 channel.childNodes.forEach((network, n) => {\r\n    //                                                                     if (n % 2 != 0) {\r\n    //                                                                         var editNetwork = { name: '', domainname: '', ip4address: [], ip6address: [], priority: '' }\r\n    //                                                                         network.childNodes.forEach((endpoint, d) => {\r\n    //                                                                             if (d % 2 != 0) {\r\n    //                                                                                 if (endpoint.nodeName == \"SHORT-NAME\") {\r\n    //                                                                                     editNetwork.name = endpoint.childNodes[0].nodeValue\r\n    //                                                                                 }\r\n    //                                                                                 if (endpoint.nodeName == \"FULLY-QUALIFIED-DOMAIN-NAME\") {\r\n    //                                                                                     editNetwork.domainname = endpoint.childNodes[0].nodeValue\r\n    //                                                                                 }\r\n    //                                                                                 if (endpoint.nodeName == \"PRIORITY\") {\r\n    //                                                                                     editNetwork.priority = endpoint.childNodes[0].nodeValue\r\n    //                                                                                 }\r\n    //                                                                                 if (endpoint.nodeName == \"NETWORK-ENDPOINT-ADDRESSES\") {\r\n    //                                                                                     endpoint.childNodes.forEach((config, f) => {\r\n    //                                                                                         if (f % 2 != 0) {\r\n    //                                                                                             var editIP4Item = { gateway: '', behavior: null, address: '', addresssorce: null, mask: '', }\r\n    //                                                                                             var editIP6Item = { priority: '', behavior: null, prelength: '', address: '', addresssource: null, }\r\n    //                                                                                             if (config.nodeName == \"IPV-4-CONFIGURATION\") {\r\n    //                                                                                                 config.childNodes.forEach((data, a) => {\r\n    //                                                                                                     if (a % 2 != 0) {\r\n    //                                                                                                         if (data.nodeName == \"DEFAULT-GATEWAY\") {\r\n    //                                                                                                             editIP4Item.gateway = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IP-ADDRESS-KEEP-BEHAVIOR\") {\r\n    //                                                                                                             editIP4Item.behavior = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IPV-4-ADDRESS\") {\r\n    //                                                                                                             editIP4Item.address = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IPV-4-ADDRESS-SOURCE\") {\r\n    //                                                                                                             editIP4Item.addresssorce = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"NETWORK-MASK\") {\r\n    //                                                                                                             editIP4Item.mask = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                     }\r\n    //                                                                                                 })\r\n    //                                                                                                 const addObj = Object.assign({}, editIP4Item)\r\n    //                                                                                                 editNetwork.ip4address.push(addObj)\r\n    //                                                                                             }\r\n    //                                                                                             if (config.nodeName == \"IPV-6-CONFIGURATION\") {\r\n    //                                                                                                 config.childNodes.forEach((data, t) => {\r\n    //                                                                                                     if (t % 2 != 0) {\r\n    //                                                                                                         if (data.nodeName == \"ASSIGNMENT-PRIORITY\") {\r\n    //                                                                                                             editIP6Item.priority = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IP-ADDRESS-KEEP-BEHAVIOR\") {\r\n    //                                                                                                             editIP6Item.behavior = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IP-ADDRESS-PREFIX-LENGTH\") {\r\n    //                                                                                                             editIP6Item.prelength = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IPV-6-ADDRESS\") {\r\n    //                                                                                                             editIP6Item.address = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                         if (data.nodeName == \"IPV-6-ADDRESS-SOURCE\") {\r\n    //                                                                                                             editIP6Item.addresssource = data.childNodes[0].nodeValue\r\n    //                                                                                                         }\r\n    //                                                                                                     }\r\n    //                                                                                                 })\r\n    //                                                                                                 const addObj = Object.assign({}, editIP6Item)\r\n    //                                                                                                 editNetwork.ip6address.push(addObj)\r\n    //                                                                                             }\r\n    //                                                                                         }\r\n    //                                                                                     })\r\n    //                                                                                 }\r\n    //                                                                             }\r\n    //                                                                         })\r\n    //                                                                         const addObj = Object.assign({}, editNetwork)\r\n    //                                                                         editChannel.endpoint.push(addObj)\r\n    //                                                                     }\r\n    //                                                                 })\r\n    //                                                             }\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                     const addObjRes = Object.assign({}, editChannel)\r\n    //                                                     editedEthernet.channel.push(addObjRes)\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editedEthernet)\r\n    //                                 condition.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementEthernetCluster', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     conditional: condition,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.EthernetCluster_str })\r\n    //                 EventBus.$emit('add-element', constant.Machines_str)\r\n    //                 EventBus.$emit('add-element', constant.EthernetCluster_str)\r\n    //             })\r\n    //             // MODE-DECLARATION-GROUP\r\n    //         var modeDeclatation = payload.xmlDoc.getElementsByTagName('MODE-DECLARATION-GROUP')\r\n    //         modeDeclatation.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     mode = [],\r\n    //                     initmode = null\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"INITIAL-MODE-REF\") {\r\n    //                         initmode = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"MODE-DECLARATIONS\") {\r\n    //                         item.childNodes.forEach((modede, m) => {\r\n    //                             if (m % 2 != 0) {\r\n    //                                 modede.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             mode.push(data.childNodes[0].nodeValue)\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementModeDeclarationGroup', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     modedeclaration: mode,\r\n    //                     initmode: initmode,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ModeDeclarationGroup_str })\r\n    //                 EventBus.$emit('add-element', constant.Machines_str)\r\n    //                 EventBus.$emit('add-element', constant.ModeDeclarationGroup_str)\r\n    //             })\r\n    //             // HW-ELEMENT\r\n    //         var HWElement = payload.xmlDoc.getElementsByTagName('HW-ELEMENT')\r\n    //         HWElement.forEach(ele => {\r\n    //             var Name = '',\r\n    //                 path = '',\r\n    //                 strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                 category = null,\r\n    //                 attri = []\r\n    //             ele.childNodes.forEach(item => {\r\n    //                 if (item.nodeName == \"SHORT-NAME\") {\r\n    //                     Name = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"HW-CATEGORY-REFS\") {\r\n    //                     category = item.childNodes[1].childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"HW-ATTRIBUTE-VALUES\") {\r\n    //                     item.childNodes.forEach((value, v) => {\r\n    //                         if (v % 2 != 0) {\r\n    //                             var editAttributeItem = { attr: null, vt: '', v: '' }\r\n    //                             value.childNodes.forEach((data, d) => {\r\n    //                                 if (d % 2 != 0) {\r\n    //                                     if (data.nodeName == \"HW-ATTRIBUTE-DEF-REF\") {\r\n    //                                         editAttributeItem.attr = data.childNodes[0].nodeValue\r\n    //                                     }\r\n    //                                     if (data.nodeName == \"VT\") {\r\n    //                                         editAttributeItem.vt = data.childNodes[0].nodeValue\r\n    //                                     }\r\n    //                                     if (data.nodeName == \"V\") {\r\n    //                                         editAttributeItem.v = data.childNodes[0].nodeValue\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n    //                             const addObj = Object.assign({}, editAttributeItem)\r\n    //                             attri.push(addObj)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             })\r\n    //             var UUID = ele.getAttribute(\"UUID\")\r\n    //             var idxEle = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(data => data.uuid === UUID)\r\n    //             if (UUID == null || idxEle != -1) {\r\n    //                 UUID = uuid.v1()\r\n    //             }\r\n    //             const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //             const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //             this.commit('addElementHWElement', {\r\n    //                 name: Name,\r\n    //                 input: true,\r\n    //                 path: strPath,\r\n    //                 uuid: UUID,\r\n    //                 top: elementY,\r\n    //                 left: elementX,\r\n    //                 zindex: 2,\r\n    //                 category: category,\r\n    //                 attribute: attri,\r\n    //                 icon: \"mdi-clipboard-outline\",\r\n    //                 validation: false\r\n    //             })\r\n    //             state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.HWElement_str })\r\n    //             EventBus.$emit('add-element', constant.Machines_str)\r\n    //             EventBus.$emit('add-element', constant.HWElement_str)\r\n    //         })\r\n\r\n    //         // PROCESS-TO-MACHINE-MAPPING-SET\r\n    //         var processtoMachine = payload.xmlDoc.getElementsByTagName('PROCESS-TO-MACHINE-MAPPING-SET')\r\n    //         processtoMachine.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     ptmmname = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     machine = null,\r\n    //                     process = null\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-TO-MACHINE-MAPPINGS\") {\r\n    //                         item.childNodes.forEach((mapping, m) => {\r\n    //                             if (m % 2 != 0) {\r\n    //                                 mapping.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             ptmmname = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MACHINE-REF\") {\r\n    //                                             machine = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"PROCESS-REF\") {\r\n    //                                             process = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementProtoMachineMapping', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     ptmmname: ptmmname,\r\n    //                     ptmmMachine: machine,\r\n    //                     ptmmProcess: process,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ProcesstoMachineMapping_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.ProcesstoMachineMapping_str)\r\n    //             })\r\n    //             // ADAPTIVE-APPLICATION-SW-COMPONENT-TYPE\r\n    //         var SWComponent = payload.xmlDoc.getElementsByTagName('ADAPTIVE-APPLICATION-SW-COMPONENT-TYPE')\r\n    //         SWComponent.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     pPort = [],\r\n    //                     rPort = [],\r\n    //                     prPort = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PORTS\") {\r\n    //                         item.childNodes.forEach((port, p) => {\r\n    //                             if (p % 2 != 0) {\r\n    //                                 if (port.nodeName == \"P-PORT-PROTOTYPE\") {\r\n    //                                     var editPPortItem = { name: '', interface: null }\r\n    //                                     port.childNodes.forEach((data, d) => {\r\n    //                                         if (d % 2 != 0) {\r\n    //                                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                                 editPPortItem.name = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                             if (data.nodeName == \"PROVIDED-INTERFACE-TREF\") {\r\n    //                                                 editPPortItem.interface = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                     const addObj = Object.assign({}, editPPortItem)\r\n    //                                     pPort.push(addObj)\r\n    //                                 }\r\n    //                                 if (port.nodeName == \"PR-PORT-PROTOTYPE\") {\r\n    //                                     var editPRPortItem = { name: '', interface: null }\r\n    //                                     port.childNodes.forEach((data, d) => {\r\n    //                                         if (d % 2 != 0) {\r\n    //                                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                                 editPRPortItem.name = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                             if (data.nodeName == \"PROVIDED-REQUIRED-INTERFACE-TREF\") {\r\n    //                                                 editPRPortItem.interface = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                     const addObj = Object.assign({}, editPRPortItem)\r\n    //                                     prPort.push(addObj)\r\n    //                                 }\r\n    //                                 if (port.nodeName == \"R-PORT-PROTOTYPE\") {\r\n    //                                     var editRPortItem = { name: '', interface: null }\r\n    //                                     port.childNodes.forEach((data, d) => {\r\n    //                                         if (d % 2 != 0) {\r\n    //                                             if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                                 editRPortItem.name = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                             if (data.nodeName == \"REQUIRED-INTERFACE-TREF\") {\r\n    //                                                 editRPortItem.interface = data.childNodes[0].nodeValue\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                     const addObj = Object.assign({}, editRPortItem)\r\n    //                                     rPort.push(addObj)\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementSWComponents', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     pport: pPort,\r\n    //                     rport: rPort,\r\n    //                     prport: prPort,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.SWComponents_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.SWComponents_str)\r\n    //             })\r\n    //             // PROCESS\r\n    //         var process = payload.xmlDoc.getElementsByTagName('PROCESS')\r\n    //         process.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     design = null,\r\n    //                     determin = null,\r\n    //                     exe = null,\r\n    //                     proname = '',\r\n    //                     type = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     config = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESIGN-REF\") {\r\n    //                         design = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DETERMINISTIC-CLIENT-REF\") {\r\n    //                         determin = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EXECUTABLE-REF\") {\r\n    //                         exe = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-STATE-MACHINE\") {\r\n    //                         item.childNodes.forEach(machine => {\r\n    //                             if (machine.nodeName == \"SHORT-NAME\") {\r\n    //                                 proname = machine.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (machine.nodeName == \"TYPE-TREF\") {\r\n    //                                 type = machine.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"STATE-DEPENDENT-STARTUP-CONFIGS\") {\r\n    //                         item.childNodes.forEach((state, s) => {\r\n    //                             var editItem = { functionItem: [], resourceRef: null, startupConfigRef: null }\r\n    //                             if (s % 2 != 0) {\r\n    //                                 state.childNodes.forEach((con, c) => {\r\n    //                                     if (c % 2 != 0) {\r\n    //                                         if (con.nodeName == \"RESOURCE-GROUP-REF\") {\r\n    //                                             editItem.resourceRef = con.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (con.nodeName == \"STARTUP-CONFIG-REF\") {\r\n    //                                             editItem.startupConfigRef = con.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (con.nodeName == \"FUNCTION-GROUP-STATE-IREFS\") {\r\n    //                                             con.childNodes.forEach((iref, i) => {\r\n    //                                                 var editFunctionGItem = { contextMode: null, targetMode: null }\r\n    //                                                 if (i % 2 != 0) {\r\n    //                                                     iref.childNodes.forEach((data, d) => {\r\n    //                                                         if (d % 2 != 0) {\r\n    //                                                             if (data.nodeName == \"CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF\") {\r\n    //                                                                 editFunctionGItem.contextMode = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                             if (data.nodeName == \"TARGET-MODE-DECLARATION-REF\") {\r\n    //                                                                 editFunctionGItem.targetMode = data.childNodes[0].nodeValue\r\n    //                                                             }\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                     const addObj = Object.assign({}, editFunctionGItem)\r\n    //                                                     editItem.functionItem.push(addObj)\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 config.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementProcess', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     prodesign: design,\r\n    //                     determin: determin,\r\n    //                     execut: exe,\r\n    //                     machinname: proname,\r\n    //                     machinetype: type,\r\n    //                     dependent: config\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Process_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.Process_str)\r\n    //             })\r\n    //             // PROCESS-DESIGN\r\n    //         var processDesign = payload.xmlDoc.getElementsByTagName('PROCESS-DESIGN')\r\n    //         processDesign.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     determininistic = [],\r\n    //                     exe = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EXECUTABLE-REF\") {\r\n    //                         exe = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DETERMINISTIC-CLIENT-RESOURCE-NEEDSS\") {\r\n    //                         item.childNodes.forEach((need, n) => {\r\n    //                             var editItem = {\r\n    //                                 swname: '',\r\n    //                                 hardwareP: '',\r\n    //                                 initnofinstruction: '',\r\n    //                                 initsequentialbegin: '',\r\n    //                                 initsequentialend: '',\r\n    //                                 initspeedup: '',\r\n    //                                 runnofinstruction: '',\r\n    //                                 runsequentialbegin: '',\r\n    //                                 runsequentialend: '',\r\n    //                                 runspeedup: ''\r\n    //                             }\r\n    //                             if (n % 2 != 0) {\r\n    //                                 need.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editItem.swname = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"HARDWARE-PLATFORM\") {\r\n    //                                             editItem.hardwareP = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"INIT-RESOURCE\") {\r\n    //                                             data.childNodes.forEach((init, i) => {\r\n    //                                                 if (i % 2 != 0) {\r\n    //                                                     if (init.nodeName == \"NUMBER-OF-INSTRUCTIONS\") {\r\n    //                                                         editItem.initnofinstruction = init.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (init.nodeName == \"SEQUENTIAL-INSTRUCTIONS-BEGIN\") {\r\n    //                                                         editItem.initsequentialbegin = init.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (init.nodeName == \"SEQUENTIAL-INSTRUCTIONS-END\") {\r\n    //                                                         editItem.initsequentialend = init.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (init.nodeName == \"SPEEDUP\") {\r\n    //                                                         editItem.initspeedup = init.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"RUN-RESOURCE\") {\r\n    //                                             data.childNodes.forEach((run, r) => {\r\n    //                                                 if (r % 2 != 0) {\r\n    //                                                     if (run.nodeName == \"NUMBER-OF-INSTRUCTIONS\") {\r\n    //                                                         editItem.runnofinstruction = run.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (run.nodeName == \"SEQUENTIAL-INSTRUCTIONS-BEGIN\") {\r\n    //                                                         editItem.runsequentialbegin = run.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (run.nodeName == \"SEQUENTIAL-INSTRUCTIONS-END\") {\r\n    //                                                         editItem.runsequentialend = run.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (run.nodeName == \"SPEEDUP\") {\r\n    //                                                         editItem.runspeedup = run.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 determininistic.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n\r\n    //                 this.commit('addElementProcessDesign', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     executableref: exe,\r\n    //                     determin: determininistic\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ProcessDesign_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.ProcessDesign_str)\r\n    //             })\r\n    //             // EXECUTABLE\r\n    //         var executable = payload.xmlDoc.getElementsByTagName('EXECUTABLE')\r\n    //         executable.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     version = '',\r\n    //                     category = '',\r\n    //                     log = null,\r\n    //                     build = null,\r\n    //                     report = null,\r\n    //                     swname = '',\r\n    //                     appli = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"CATEGORY\") {\r\n    //                         category = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"BUILD-TYPE\") {\r\n    //                         build = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"LOGGING-BEHAVIOR\") {\r\n    //                         log = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REPORTING-BEHAVIOR\") {\r\n    //                         report = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"VERSION\") {\r\n    //                         version = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ROOT-SW-COMPONENT-PROTOTYPE\") {\r\n    //                         item.childNodes.forEach((data, d) => {\r\n    //                             if (d % 2 != 0) {\r\n    //                                 if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                     swname = data.childNodes[0].nodeValue\r\n    //                                 }\r\n    //                                 if (data.nodeName == \"APPLICATION-TYPE-TREF\") {\r\n    //                                     appli = data.childNodes[0].nodeValue\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementExecutable', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     version: version,\r\n    //                     category: category,\r\n    //                     buildType: build,\r\n    //                     loggingBehabior: log,\r\n    //                     reportingBehabior: report,\r\n    //                     swname: swname,\r\n    //                     applicationtyperef: appli,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Executable_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.Executable_str)\r\n    //             })\r\n    //             // STARTUP-CONFIG-SET\r\n    //         var startup = payload.xmlDoc.getElementsByTagName('STARTUP-CONFIG-SET')\r\n    //         startup.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     configName = '',\r\n    //                     policy = null,\r\n    //                     priority = '',\r\n    //                     enter = '',\r\n    //                     exit = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"STARTUP-CONFIGS\") {\r\n    //                         item.childNodes.forEach((configs, c) => {\r\n    //                             if (c % 2 != 0) {\r\n    //                                 configs.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             configName = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SCHEDULING-POLICY\") {\r\n    //                                             policy = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SCHEDULING-PRIORITY\") {\r\n    //                                             priority = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TIMEOUT\") {\r\n    //                                             data.childNodes.forEach(time => {\r\n    //                                                 if (time.nodeName == \"ENTER-TIMEOUT-VALUE\") {\r\n    //                                                     enter = time.childNodes[0].nodeValue\r\n    //                                                 }\r\n    //                                                 if (time.nodeName == \"EXIT-TIMEOUT-VALUE\") {\r\n    //                                                     exit = time.childNodes[0].nodeValue\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementStartupConfig', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     configname: configName,\r\n    //                     policy: policy,\r\n    //                     priority: priority,\r\n    //                     entertimeout: enter,\r\n    //                     exittimeout: exit\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.StartupConfig_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.StartupConfig_str)\r\n    //             })\r\n    //             // DETERMINISTIC-CLIENT\r\n    //         var deterministic = payload.xmlDoc.getElementsByTagName('DETERMINISTIC-CLIENT')\r\n    //         deterministic.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     cycle = '',\r\n    //                     number = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"CYCLE-TIME-VALUE\") {\r\n    //                         cycle = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"NUMBER-OF-WORKERS\") {\r\n    //                         number = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementDeterministicClien', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     cycletiem: cycle,\r\n    //                     numofworkers: number,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.DeterministicClient_str })\r\n    //                 EventBus.$emit('add-element', constant.AdaptiveApplication_str)\r\n    //                 EventBus.$emit('add-element', constant.DeterministicClient_str)\r\n    //             })\r\n    //             // SOMEIP-SERVICE-INTERFACE-DEPLOYMENT\r\n    //         var someIPService = payload.xmlDoc.getElementsByTagName('SOMEIP-SERVICE-INTERFACE-DEPLOYMENT')\r\n    //         someIPService.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     service = null,\r\n    //                     majversion = '',\r\n    //                     minversion = '',\r\n    //                     id = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     eventG = [],\r\n    //                     eventD = [],\r\n    //                     methodD = [],\r\n    //                     fieldD = []\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EVENT-DEPLOYMENTS\") {\r\n    //                         item.childNodes.forEach((eve, e) => {\r\n    //                             var editEventD = { name: '', event: null, id: '', maxlength: '', time: '', serializer: null, protocal: null }\r\n    //                             if (e % 2 != 0) {\r\n    //                                 eve.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editEventD.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-REF\") {\r\n    //                                             editEventD.event = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-ID\") {\r\n    //                                             editEventD.id = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MAXIMUM-SEGMENT-LENGTH\") {\r\n    //                                             editEventD.maxlength = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT\") {\r\n    //                                             editEventD.time = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SEPARATION-TIME\") {\r\n    //                                             editEventD.serializer = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TRANSPORT-PROTOCOL\") {\r\n    //                                             editEventD.protocal = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editEventD)\r\n    //                                 eventD.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INTERFACE-REF\") {\r\n    //                         service = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EVENT-GROUPS\") {\r\n    //                         item.childNodes.forEach((eve, e) => {\r\n    //                             var editItem = { name: '', id: '', event: [] }\r\n    //                             if (e % 2 != 0) {\r\n    //                                 eve.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-GROUP-ID\") {\r\n    //                                             editItem.id = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-REFS\") {\r\n    //                                             var editEvent = { event: null }\r\n    //                                             data.childNodes.forEach((eventref, v) => {\r\n    //                                                 if (v % 2 != 0) {\r\n    //                                                     if (eventref.nodeName == \"EVENT-REF\") {\r\n    //                                                         editEvent.event = eventref.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                             const addObjObj = Object.assign({}, editEvent)\r\n    //                                             editItem.event.push(addObjObj)\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 eventG.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INTERFACE-ID\") {\r\n    //                         id = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INTERFACE-VERSION\") {\r\n    //                         item.childNodes.forEach((data, d) => {\r\n    //                             if (d % 2 != 0) {\r\n    //                                 if (data.nodeName == \"MAJOR-VERSION\") {\r\n    //                                     majversion = data.childNodes[0].nodeValue\r\n    //                                 }\r\n    //                                 if (data.nodeName == \"MINOR-VERSION\") {\r\n    //                                     minversion = data.childNodes[0].nodeValue\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"FIELD-DEPLOYMENTS\") {\r\n    //                         item.childNodes.forEach((fie, f) => {\r\n    //                             var editItem = {\r\n    //                                 name: '',\r\n    //                                 field: null,\r\n    //                                 getname: '',\r\n    //                                 getid: '',\r\n    //                                 getmaxreq: '',\r\n    //                                 getmaxres: '',\r\n    //                                 gettimereq: '',\r\n    //                                 gettimeres: '',\r\n    //                                 getproto: null,\r\n    //                                 setname: '',\r\n    //                                 setid: '',\r\n    //                                 setmaxreq: '',\r\n    //                                 setmaxres: '',\r\n    //                                 settimereq: '',\r\n    //                                 settimeres: '',\r\n    //                                 setproto: null,\r\n    //                                 notname: '',\r\n    //                                 notid: '',\r\n    //                                 notmax: '',\r\n    //                                 nottime: '',\r\n    //                                 notserial: null,\r\n    //                                 notproto: null\r\n    //                             }\r\n    //                             if (f % 2 != 0) {\r\n    //                                 fie.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"FIELD-REF\") {\r\n    //                                             editItem.field = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"GET\") {\r\n    //                                             data.childNodes.forEach((getfield, g) => {\r\n    //                                                 if (g % 2 != 0) {\r\n    //                                                     if (getfield.nodeName == \"SHORT-NAME\") {\r\n    //                                                         editItem.getname = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"METHOD-ID\") {\r\n    //                                                         editItem.getid = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"MAXIMUM-SEGMENT-LENGTH-REQUEST\") {\r\n    //                                                         editItem.getmaxreq = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"MAXIMUM-SEGMENT-LENGTH-RESPONSE\") {\r\n    //                                                         editItem.getmaxres = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"SEPARATION-TIME-REQUEST\") {\r\n    //                                                         editItem.gettimereq = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"SEPARATION-TIME-RESPONSE\") {\r\n    //                                                         editItem.gettimeres = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (getfield.nodeName == \"TRANSPORT-PROTOCOL\") {\r\n    //                                                         editItem.getproto = getfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SET\") {\r\n    //                                             data.childNodes.forEach((setfield, s) => {\r\n    //                                                 if (s % 2 != 0) {\r\n    //                                                     if (setfield.nodeName == \"SHORT-NAME\") {\r\n    //                                                         editItem.setname = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"METHOD-ID\") {\r\n    //                                                         editItem.setid = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"MAXIMUM-SEGMENT-LENGTH-REQUEST\") {\r\n    //                                                         editItem.setmaxreq = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"MAXIMUM-SEGMENT-LENGTH-RESPONSE\") {\r\n    //                                                         editItem.setmaxres = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"SEPARATION-TIME-REQUEST\") {\r\n    //                                                         editItem.settimereq = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"SEPARATION-TIME-RESPONSE\") {\r\n    //                                                         editItem.settimeres = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (setfield.nodeName == \"TRANSPORT-PROTOCOL\") {\r\n    //                                                         editItem.setproto = setfield.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"NOTIFIER\") {\r\n    //                                             data.childNodes.forEach((noti, n) => {\r\n    //                                                 if (n % 2 != 0) {\r\n    //                                                     if (noti.nodeName == \"SHORT-NAME\") {\r\n    //                                                         editItem.notname = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (noti.nodeName == \"EVENT-ID\") {\r\n    //                                                         editItem.notid = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (noti.nodeName == \"MAXIMUM-SEGMENT-LENGTH\") {\r\n    //                                                         editItem.notmax = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (noti.nodeName == \"SEPARATION-TIME\") {\r\n    //                                                         editItem.nottime = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (noti.nodeName == \"SERIALIZER\") {\r\n    //                                                         editItem.notserial = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                     if (noti.nodeName == \"TRANSPORT-PROTOCOL\") {\r\n    //                                                         editItem.notproto = noti.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 fieldD.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"METHOD-DEPLOYMENTS\") {\r\n    //                         item.childNodes.forEach((met, m) => {\r\n    //                             var editMethodD = { name: '', method: null, id: '', maxrequest: '', maxresponse: '', timerequest: '', timeresponse: '', protocal: null }\r\n    //                             if (m % 2 != 0) {\r\n    //                                 met.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editMethodD.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"METHOD-REF\") {\r\n    //                                             editMethodD.method = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"METHOD-ID\") {\r\n    //                                             editMethodD.id = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MAXIMUM-SEGMENT-LENGTH-REQUEST\") {\r\n    //                                             editMethodD.maxrequest = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MAXIMUM-SEGMENT-LENGTH-RESPONSE\") {\r\n    //                                             editMethodD.maxresponse = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SEPARATION-TIME-REQUEST\") {\r\n    //                                             editMethodD.timerequest = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SEPARATION-TIME-RESPONSE\") {\r\n    //                                             editMethodD.timeresponse = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TRANSPORT-PROTOCOL\") {\r\n    //                                             editMethodD.protocal = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editMethodD)\r\n    //                                 methodD.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementSomeIPService', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     service: service,\r\n    //                     majversion: majversion,\r\n    //                     minversion: minversion,\r\n    //                     id: id,\r\n    //                     eventG: eventG,\r\n    //                     eventD: eventD,\r\n    //                     methodD: methodD,\r\n    //                     fieldD: fieldD,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.SomeIPServiceInterfaceDeployment_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPServiceInterfaceDeployment_str)\r\n    //             })\r\n    //             // SERVICE-INTERFACE\r\n    //         var serviceInterface = payload.xmlDoc.getElementsByTagName('SERVICE-INTERFACE')\r\n    //         serviceInterface.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     max = '',\r\n    //                     min = '',\r\n    //                     namespace = '',\r\n    //                     isservice = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     events = [],\r\n    //                     fields = [],\r\n    //                     methods = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"NAMESPACES\") {\r\n    //                         item.childNodes.forEach((symbol, s) => {\r\n    //                             if (s % 2 != 0) {\r\n    //                                 symbol.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         namespace += data.childNodes[0].nodeValue\r\n    //                                         namespace += '/'\r\n    //                                     }\r\n    //                                 })\r\n    //                                 namespace = namespace.substr(0, namespace.length - 1)\r\n    //                                 namespace += ','\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"IS-SERVICE\") {\r\n    //                         isservice = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"MAJOR-VERSION\") {\r\n    //                         max = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"MINOR-VERSION\") {\r\n    //                         min = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EVENTS\") {\r\n    //                         item.childNodes.forEach((eve, e) => {\r\n    //                             var editEvent = { name: '', type: null }\r\n    //                             if (e % 2 != 0) {\r\n    //                                 eve.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editEvent.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TYPE-TREF\") {\r\n    //                                             editEvent.type = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editEvent)\r\n    //                                 events.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"FIELDS\") {\r\n    //                         item.childNodes.forEach((fie, f) => {\r\n    //                             var editField = { name: '', type: null, getter: null, setter: null, notifier: null }\r\n    //                             if (f % 2 != 0) {\r\n    //                                 fie.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editField.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"TYPE-TREF\") {\r\n    //                                             editField.type = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"HAS-GETTER\") {\r\n    //                                             editField.getter = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"HAS-SETTER\") {\r\n    //                                             editField.setter = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"HAS-NOTIFIER\") {\r\n    //                                             editField.notifier = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editField)\r\n    //                                 fields.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"METHODS\") {\r\n    //                         item.childNodes.forEach((met, m) => {\r\n    //                             var editedItem = { name: '', fireforget: null, argument: [], errorSet: [], error: [], descrip: '' }\r\n    //                             if (m % 2 != 0) {\r\n    //                                 met.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editedItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"ARGUMENTS\") {\r\n    //                                             data.childNodes.forEach((arg, a) => {\r\n    //                                                 var editArgItem = { name: '', type: null, dir: null, descrip: '' }\r\n    //                                                 if (a % 2 != 0) {\r\n    //                                                     arg.childNodes.forEach(proto => {\r\n    //                                                         if (proto.nodeName == \"SHORT-NAME\") {\r\n    //                                                             editArgItem.name = proto.childNodes[0].nodeValue\r\n    //                                                         }\r\n    //                                                         if (proto.nodeName == \"TYPE-TREF\") {\r\n    //                                                             editArgItem.type = proto.childNodes[0].nodeValue\r\n    //                                                         }\r\n    //                                                         if (proto.nodeName == \"DIRECTION\") {\r\n    //                                                             editArgItem.dir = proto.childNodes[0].nodeValue\r\n    //                                                         }\r\n    //                                                         if (proto.nodeName == \"DESC\") {\r\n    //                                                             editArgItem.descrip = proto.childNodes[1].childNodes[0].nodeValue\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                     const addObj = Object.assign({}, editArgItem)\r\n    //                                                     editedItem.argument.push(addObj)\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"FIRE-AND-FORGET\") {\r\n    //                                             editedItem.fireforget = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"POSSIBLE-AP-ERROR-SET-REFS\") {\r\n    //                                             var editErrorSetItem = { error: null }\r\n    //                                             data.childNodes.forEach((err, e) => {\r\n    //                                                 if (e % 2 != 0) {\r\n    //                                                     if (err.nodeName == \"POSSIBLE-AP-ERROR-SET-REF\") {\r\n    //                                                         editErrorSetItem.error = err.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                             const addObj = Object.assign({}, editErrorSetItem)\r\n    //                                             editedItem.errorSet.push(addObj)\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"POSSIBLE-AP-ERROR-REFS\") {\r\n    //                                             var editErrorItem = { error: null }\r\n    //                                             data.childNodes.forEach((err, e) => {\r\n    //                                                 if (e % 2 != 0) {\r\n    //                                                     if (err.nodeName == \"POSSIBLE-AP-ERROR-REF\") {\r\n    //                                                         editErrorItem.error = err.childNodes[0].nodeValue\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                             const addObj = Object.assign({}, editErrorItem)\r\n    //                                             editedItem.error.push(addObj)\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"DESC\") {\r\n    //                                             editedItem.descrip = data.childNodes[1].childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editedItem)\r\n    //                                 methods.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementService', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     versionMaj: max,\r\n    //                     versionMin: min,\r\n    //                     namespace: namespace,\r\n    //                     isservice: isservice,\r\n    //                     events: events,\r\n    //                     fields: fields,\r\n    //                     methods: methods\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ServiceInterface_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInterfaces_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInterface_str)\r\n    //             })\r\n    //             // SOMEIP-SD-CLIENT-EVENT-GROUP-TIMING-CONFIG\r\n    //         var client = payload.xmlDoc.getElementsByTagName('SOMEIP-SD-CLIENT-EVENT-GROUP-TIMING-CONFIG')\r\n    //         client.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     max = '',\r\n    //                     min = '',\r\n    //                     time = '',\r\n    //                     retryD = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     retryM = ''\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SUBSCRIBE-EVENTGROUP-RETRY-DELAY\") {\r\n    //                         retryD = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SUBSCRIBE-EVENTGROUP-RETRY-MAX\") {\r\n    //                         retryM = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TIME-TO-LIVE\") {\r\n    //                         time = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUEST-RESPONSE-DELAY\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"MAX-VALUE\") {\r\n    //                                 max = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"MIN-VALUE\") {\r\n    //                                 min = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementClient', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     delay: retryD,\r\n    //                     max: retryM,\r\n    //                     timetolive: time,\r\n    //                     delaymax: max,\r\n    //                     delaymin: min,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Client_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPEvents_str)\r\n    //                 EventBus.$emit('add-element', constant.Client_str)\r\n    //             })\r\n    //             // SOMEIP-SD-SERVER-EVENT-GROUP-TIMING-CONFIG\r\n    //         var server = payload.xmlDoc.getElementsByTagName('SOMEIP-SD-SERVER-EVENT-GROUP-TIMING-CONFIG')\r\n    //         server.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     max = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     min = ''\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUEST-RESPONSE-DELAY\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"MAX-VALUE\") {\r\n    //                                 max = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"MIN-VALUE\") {\r\n    //                                 min = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementServer', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     delaymax: max,\r\n    //                     delaymin: min,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Server_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPEvents_str)\r\n    //                 EventBus.$emit('add-element', constant.Server_str)\r\n    //             })\r\n    //             // SOMEIP-SD-CLIENT-SERVICE-INSTANCE-CONFIG\r\n    //         var someIPClient = payload.xmlDoc.getElementsByTagName('SOMEIP-SD-CLIENT-SERVICE-INSTANCE-CONFIG')\r\n    //         someIPClient.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     time = '',\r\n    //                     delayMax = '',\r\n    //                     delayMin = '',\r\n    //                     delay = '',\r\n    //                     max = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-FIND-TIME-TO-LIVE\") {\r\n    //                         time = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"INITIAL-FIND-BEHAVIOR\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"INITIAL-DELAY-MAX-VALUE\") {\r\n    //                                 delayMax = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-DELAY-MIN-VALUE\") {\r\n    //                                 delayMin = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-REPETITIONS-BASE-DELAY\") {\r\n    //                                 delay = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-REPETITIONS-MAX\") {\r\n    //                                 max = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementSomeIPClient', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     findtime: time,\r\n    //                     inidelaymax: delayMax,\r\n    //                     inidelaymin: delayMin,\r\n    //                     inibasedelay: delay,\r\n    //                     inirepetimax: max,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.SomeIPClient_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPClient_str)\r\n    //             })\r\n    //             // SOMEIP-SD-SERVER-SERVICE-INSTANCE-CONFIG\r\n    //         var someIPServer = payload.xmlDoc.getElementsByTagName('SOMEIP-SD-SERVER-SERVICE-INSTANCE-CONFIG')\r\n    //         someIPServer.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     time = '',\r\n    //                     delayMax = '',\r\n    //                     delayMin = '',\r\n    //                     delay = '',\r\n    //                     max = '',\r\n    //                     cyclic = '',\r\n    //                     maxvalue = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     minvalue = ''\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"INITIAL-OFFER-BEHAVIOR\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"INITIAL-DELAY-MAX-VALUE\") {\r\n    //                                 delayMax = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-DELAY-MIN-VALUE\") {\r\n    //                                 delayMin = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-REPETITIONS-BASE-DELAY\") {\r\n    //                                 delay = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"INITIAL-REPETITIONS-MAX\") {\r\n    //                                 max = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"OFFER-CYCLIC-DELAY\") {\r\n    //                         cyclic = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUEST-RESPONSE-DELAY\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             if (data.nodeName == \"MAX-VALUE\") {\r\n    //                                 maxvalue = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                             if (data.nodeName == \"MIN-VALUE\") {\r\n    //                                 minvalue = data.childNodes[0].nodeValue\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-OFFER-TIME-TO-LIVE\") {\r\n    //                         time = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementSomeIPServer', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     inidelaymax: delayMax,\r\n    //                     inidelaymin: delayMin,\r\n    //                     inibasedelay: delay,\r\n    //                     inirepetimax: max,\r\n    //                     delaymax: maxvalue,\r\n    //                     delaymin: minvalue,\r\n    //                     offer: cyclic,\r\n    //                     tiemtolive: time,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.SomeIPServer_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPServer_str)\r\n    //             })\r\n    //             // SOMEIP-SERVICE-INSTANCE-TO-MACHINE-MAPPING\r\n    //         var someIPtoMachine = payload.xmlDoc.getElementsByTagName('SOMEIP-SERVICE-INSTANCE-TO-MACHINE-MAPPING')\r\n    //         someIPtoMachine.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     connect = null,\r\n    //                     service = null,\r\n    //                     udp = '',\r\n    //                     tcp = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"COMMUNICATION-CONNECTOR-REF\") {\r\n    //                         connect = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-REFS\") {\r\n    //                         service = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"UDP-PORT\") {\r\n    //                         udp = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"TCP-PORT\") {\r\n    //                         tcp = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementSomeIPtoMachine', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     ccref: connect,\r\n    //                     udp: udp,\r\n    //                     tcp: tcp,\r\n    //                     siref: service,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.SomeIPToMachineMapping_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.SomeIPToMachineMapping_str)\r\n    //             })\r\n    //             // SERVICE-INSTANCE-TO-PORT-PROTOTYPE-MAPPING\r\n    //         var toProtProto = payload.xmlDoc.getElementsByTagName('SERVICE-INSTANCE-TO-PORT-PROTOTYPE-MAPPING')\r\n    //         toProtProto.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     selectPort = null,\r\n    //                     porttype = null,\r\n    //                     process = null,\r\n    //                     selectServiceIns = null,\r\n    //                     serviceIns = null\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PORT-PROTOTYPE-IREF\") {\r\n    //                         selectPort = item.childNodes[1].getAttribute(\"DEST\")\r\n    //                         porttype = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-REF\") {\r\n    //                         process = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-REF\") {\r\n    //                         selectServiceIns = item.getAttribute(\"DEST\")\r\n    //                         serviceIns = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementToPortPrototype', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     selectPort: selectPort,\r\n    //                     porttype: porttype,\r\n    //                     process: process,\r\n    //                     selectServiceIns: selectServiceIns,\r\n    //                     serviceIns: serviceIns,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ToPortPrototypeMapping_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.ToPortPrototypeMapping_str)\r\n    //             })\r\n    //             // REQUIRED-SOMEIP-SERVICE-INSTANCE\r\n    //         var required = payload.xmlDoc.getElementsByTagName('REQUIRED-SOMEIP-SERVICE-INSTANCE')\r\n    //         required.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     deployref = null,\r\n    //                     minorver = '',\r\n    //                     id = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     clientref = null,\r\n    //                     ver = null,\r\n    //                     methodP = [],\r\n    //                     requiredevent = []\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INTERFACE-DEPLOYMENT-REF\") {\r\n    //                         deployref = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUIRED-MINOR-VERSION\") {\r\n    //                         minorver = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUIRED-SERVICE-INSTANCE-ID\") {\r\n    //                         id = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SD-CLIENT-CONFIG-REF\") {\r\n    //                         clientref = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"VERSION-DRIVEN-FIND-BEHAVIOR\") {\r\n    //                         ver = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"METHOD-REQUEST-PROPSS\") {\r\n    //                         item.childNodes.forEach((prop, p) => {\r\n    //                             var editMethodItem = { method: null }\r\n    //                             if (p % 2 != 0) {\r\n    //                                 prop.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"METHOD-REF\") {\r\n    //                                             editMethodItem.method = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editMethodItem)\r\n    //                                 methodP.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"REQUIRED-EVENT-GROUPS\") {\r\n    //                         item.childNodes.forEach((group, g) => {\r\n    //                             var editItem = { name: '', eventG: null, client: null }\r\n    //                             if (g % 2 != 0) {\r\n    //                                 group.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-GROUP-REF\") {\r\n    //                                             editItem.eventG = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SD-CLIENT-EVENT-GROUP-TIMING-CONFIG-REF\") {\r\n    //                                             editItem.client = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 requiredevent.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementRequiredSomeIP', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     deployref: deployref,\r\n    //                     minover: minorver,\r\n    //                     id: id,\r\n    //                     clientref: clientref,\r\n    //                     ver: ver,\r\n    //                     method: methodP,\r\n    //                     requiredevent: requiredevent\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.RequiredSomeIP_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.RequiredSomeIP_str)\r\n    //             })\r\n    //             // PROVIDED-SOMEIP-SERVICE-INSTANCE\r\n    //         var provided = payload.xmlDoc.getElementsByTagName('PROVIDED-SOMEIP-SERVICE-INSTANCE')\r\n    //         provided.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     deployref = null,\r\n    //                     someips = null,\r\n    //                     id = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path),\r\n    //                     eventP = [],\r\n    //                     method = [],\r\n    //                     eventG = []\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INTERFACE-DEPLOYMENT-REF\") {\r\n    //                         deployref = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SD-SERVER-CONFIG-REF\") {\r\n    //                         someips = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-ID\") {\r\n    //                         id = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EVENT-PROPSS\") {\r\n    //                         item.childNodes.forEach((prop, p) => {\r\n    //                             var editItem = { event: null }\r\n    //                             if (p % 2 != 0) {\r\n    //                                 prop.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"EVENT-REF\") {\r\n    //                                             editItem.event = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 eventP.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"METHOD-RESPONSE-PROPSS\") {\r\n    //                         item.childNodes.forEach((prop, p) => {\r\n    //                             var editMethodItem = { method: null }\r\n    //                             if (p % 2 != 0) {\r\n    //                                 prop.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"METHOD-REF\") {\r\n    //                                             editMethodItem.method = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editMethodItem)\r\n    //                                 method.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROVIDED-EVENT-GROUPS\") {\r\n    //                         item.childNodes.forEach((group, g) => {\r\n    //                             var editItem = { name: '', eventG: null, udp: '', ipv4: '', ipv6: '', threshold: '', server: null }\r\n    //                             if (g % 2 != 0) {\r\n    //                                 group.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         if (data.nodeName == \"SHORT-NAME\") {\r\n    //                                             editItem.name = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-GROUP-REF\") {\r\n    //                                             editItem.eventG = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"EVENT-MULTICAST-UDP-PORT\") {\r\n    //                                             editItem.udp = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"IPV-4-MULTICAST-IP-ADDRESS\") {\r\n    //                                             editItem.ipv4 = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"IPV-6-MULTICAST-IP-ADDRESS\") {\r\n    //                                             editItem.ipv6 = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"MULTICAST-THRESHOLD\") {\r\n    //                                             editItem.threshold = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                         if (data.nodeName == \"SD-SERVER-EVENT-GROUP-TIMING-CONFIG-REF\") {\r\n    //                                             editItem.server = data.childNodes[0].nodeValue\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 eventG.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementProvidedSomeIP', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     deployref: deployref,\r\n    //                     someips: someips,\r\n    //                     id: id,\r\n    //                     eventP: eventP,\r\n    //                     method: method,\r\n    //                     eventG: eventG\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ProvidedSomeIP_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.ServiceInstances_str)\r\n    //                 EventBus.$emit('add-element', constant.ProvidedSomeIP_str)\r\n    //             })\r\n    //             // AP-APPLICATION-ERROR\r\n    //         var error = payload.xmlDoc.getElementsByTagName('AP-APPLICATION-ERROR')\r\n    //         error.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     desc = '',\r\n    //                     code = '',\r\n    //                     domain = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESC\") {\r\n    //                         desc = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ERROR-CODE\") {\r\n    //                         code = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ERROR-DOMAIN-REF\") {\r\n    //                         domain = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementError', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     desc: desc,\r\n    //                     errorcode: code,\r\n    //                     errorDref: domain\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Error_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.Errors_str)\r\n    //                 EventBus.$emit('add-element', constant.Error_str)\r\n    //             })\r\n    //             // AP-APPLICATION-ERROR-SET\r\n    //         var errorSet = payload.xmlDoc.getElementsByTagName('AP-APPLICATION-ERROR-SET')\r\n    //         errorSet.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     errorref = [],\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"AP-APPLICATION-ERROR-REFS\") {\r\n    //                         item.childNodes.forEach(data => {\r\n    //                             var editItem = { error: null }\r\n    //                             if (data.nodeName == \"AP-APPLICATION-ERROR-REF\") {\r\n    //                                 editItem.error = data.childNodes[0].nodeValue\r\n    //                                 const addObj = Object.assign({}, editItem)\r\n    //                                 errorref.push(addObj)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementErrorSet', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     errorref: errorref\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.Errorset_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.Errors_str)\r\n    //                 EventBus.$emit('add-element', constant.Errorset_str)\r\n    //             })\r\n    //             // AP-APPLICATION-ERROR-DOMAIN\r\n    //         var errorDomain = payload.xmlDoc.getElementsByTagName('AP-APPLICATION-ERROR-DOMAIN')\r\n    //         errorDomain.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     namespace = '',\r\n    //                     value = '',\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"NAMESPACES\") {\r\n    //                         item.childNodes.forEach((symbol, s) => {\r\n    //                             if (s % 2 != 0) {\r\n    //                                 symbol.childNodes.forEach((data, d) => {\r\n    //                                     if (d % 2 != 0) {\r\n    //                                         namespace += data.childNodes[0].nodeValue\r\n    //                                         namespace += '/'\r\n    //                                     }\r\n    //                                 })\r\n    //                                 namespace = namespace.substr(0, namespace.length - 1)\r\n    //                                 namespace += ','\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (item.nodeName == \"VALUE\") {\r\n    //                         value = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementErrorDomain', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     namespace: namespace,\r\n    //                     value: value,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ErrorDomain_str })\r\n    //                 EventBus.$emit('add-element', constant.Service_str)\r\n    //                 EventBus.$emit('add-element', constant.Errors_str)\r\n    //                 EventBus.$emit('add-element', constant.ErrorDomain_str)\r\n    //             })\r\n    //             // PERSISTENCY-PORT-PROTOTYPE-TO-FILE-ARRAY-MAPPING\r\n    //         var perPPtoFileArray = payload.xmlDoc.getElementsByTagName('PERSISTENCY-PORT-PROTOTYPE-TO-FILE-ARRAY-MAPPING')\r\n    //         perPPtoFileArray.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     fileArray = null,\r\n    //                     port = null,\r\n    //                     process = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PERSISTENCY-FILE-ARRAY-REF\") {\r\n    //                         fileArray = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PORT-PROTOTYPE-IREF\") {\r\n    //                         port = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-REF\") {\r\n    //                         process = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementPERPPtoFileArray', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     fileArray: fileArray,\r\n    //                     port: port,\r\n    //                     process: process\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.PortProtoFileA_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.PER_str)\r\n    //                 EventBus.$emit('add-element', constant.PortProtoFileA_str)\r\n    //             })\r\n    //             // PERSISTENCY-PORT-PROTOTYPE-TO-KEY-VALUE-DATABASE-MAPPING\r\n    //         var perPPtoKeyValue = payload.xmlDoc.getElementsByTagName('PERSISTENCY-PORT-PROTOTYPE-TO-KEY-VALUE-DATABASE-MAPPING')\r\n    //         perPPtoKeyValue.forEach(ele => {\r\n    //             var Name = '',\r\n    //                 keyValue = null,\r\n    //                 port = null,\r\n    //                 process = null,\r\n    //                 path = '',\r\n    //                 strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //             ele.childNodes.forEach(item => {\r\n    //                 if (item.nodeName == \"SHORT-NAME\") {\r\n    //                     Name = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"KEY-VALUE-STORAGE-REF\") {\r\n    //                     keyValue = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"PORT-PROTOTYPE-IREF\") {\r\n    //                     port = item.childNodes[1].childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"PROCESS-REF\") {\r\n    //                     process = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //             })\r\n    //             var UUID = ele.getAttribute(\"UUID\")\r\n    //             var idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === UUID)\r\n    //             if (UUID == null || idxEle != -1) {\r\n    //                 UUID = uuid.v1()\r\n    //             }\r\n    //             const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //             const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //             this.commit('addElementPERPPtoKeyValue', {\r\n    //                 name: Name,\r\n    //                 input: true,\r\n    //                 path: strPath,\r\n    //                 uuid: UUID,\r\n    //                 top: elementY,\r\n    //                 left: elementX,\r\n    //                 zindex: 2,\r\n    //                 icon: \"mdi-clipboard-outline\",\r\n    //                 validation: false,\r\n    //                 keyValue: keyValue,\r\n    //                 port: port,\r\n    //                 process: process\r\n    //             })\r\n    //             state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.PortProtoKeyV_str })\r\n    //             EventBus.$emit('add-element', constant.Platform_str)\r\n    //             EventBus.$emit('add-element', constant.PER_str)\r\n    //             EventBus.$emit('add-element', constant.PortProtoKeyV_str)\r\n    //         })\r\n\r\n    //         // COM-FIELD-GRANT\r\n    //         var fieldG = payload.xmlDoc.getElementsByTagName('COM-FIELD-GRANT')\r\n    //         fieldG.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     designR = null,\r\n    //                     provide = null,\r\n    //                     role = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESIGN-REF\") {\r\n    //                         designR = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-REF\") {\r\n    //                         provide = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ROLE\") {\r\n    //                         role = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementFieldG', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     fieldD: designR,\r\n    //                     provide: provide,\r\n    //                     role: role\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComFieldGrant_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.IAM_str)\r\n    //                 EventBus.$emit('add-element', constant.ComFieldGrant_str)\r\n    //             })\r\n    //             // COM-EVENT-GRANT\r\n    //         var eventG = payload.xmlDoc.getElementsByTagName('COM-EVENT-GRANT')\r\n    //         eventG.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     designR = null,\r\n    //                     provide = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESIGN-REF\") {\r\n    //                         designR = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-REF\") {\r\n    //                         provide = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementEventG', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     eventD: designR,\r\n    //                     provide: provide,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComEventGrant_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.IAM_str)\r\n    //                 EventBus.$emit('add-element', constant.ComEventGrant_str)\r\n    //             })\r\n    //             // COM-METHOD-GRANT\r\n    //         var methodG = payload.xmlDoc.getElementsByTagName('COM-METHOD-GRANT')\r\n    //         methodG.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     designR = null,\r\n    //                     provide = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"DESIGN-REF\") {\r\n    //                         designR = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"SERVICE-INSTANCE-REF\") {\r\n    //                         provide = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementMethodG', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     methodD: designR,\r\n    //                     provide: provide,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComMethodGrant_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.IAM_str)\r\n    //                 EventBus.$emit('add-element', constant.ComMethodGrant_str)\r\n    //             })\r\n    //             // COM-FIELD-GRANT-DESIGN\r\n    //         var fieldGD = payload.xmlDoc.getElementsByTagName('COM-FIELD-GRANT-DESIGN')\r\n    //         fieldGD.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     serviceI = null,\r\n    //                     processD = null,\r\n    //                     role = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"FIELD-IREF\") {\r\n    //                         serviceI = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-DESIGN-REF\") {\r\n    //                         processD = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"ROLE\") {\r\n    //                         role = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementFieldGD', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     processD: processD,\r\n    //                     SIField: serviceI,\r\n    //                     role: role\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComFieldGDesign_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.IAM_str)\r\n    //                 EventBus.$emit('add-element', constant.ComFieldGDesign_str)\r\n    //             })\r\n    //             // COM-EVENT-GRANT-DESIGN\r\n    //         var eventGD = payload.xmlDoc.getElementsByTagName('COM-EVENT-GRANT-DESIGN')\r\n    //         eventGD.forEach(ele => {\r\n    //                 var Name = '',\r\n    //                     serviceI = null,\r\n    //                     processD = null,\r\n    //                     path = '',\r\n    //                     strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //                 ele.childNodes.forEach(item => {\r\n    //                     if (item.nodeName == \"SHORT-NAME\") {\r\n    //                         Name = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"EVENT-IREF\") {\r\n    //                         serviceI = item.childNodes[1].childNodes[0].nodeValue\r\n    //                     }\r\n    //                     if (item.nodeName == \"PROCESS-DESIGN-REF\") {\r\n    //                         processD = item.childNodes[0].nodeValue\r\n    //                     }\r\n    //                 })\r\n    //                 var UUID = ele.getAttribute(\"UUID\")\r\n    //                 var idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === UUID)\r\n    //                 if (UUID == null || idxEle != -1) {\r\n    //                     UUID = uuid.v1()\r\n    //                 }\r\n    //                 const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //                 const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //                 this.commit('addElementEventGD', {\r\n    //                     name: Name,\r\n    //                     input: true,\r\n    //                     path: strPath,\r\n    //                     uuid: UUID,\r\n    //                     top: elementY,\r\n    //                     left: elementX,\r\n    //                     zindex: 2,\r\n    //                     icon: \"mdi-clipboard-outline\",\r\n    //                     validation: false,\r\n    //                     processD: processD,\r\n    //                     SIEvent: serviceI,\r\n    //                 })\r\n    //                 state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComEventGDesign_str })\r\n    //                 EventBus.$emit('add-element', constant.Platform_str)\r\n    //                 EventBus.$emit('add-element', constant.IAM_str)\r\n    //                 EventBus.$emit('add-element', constant.ComEventGDesign_str)\r\n    //             })\r\n    //             // COM-METHOD-GRANT-DESIGN\r\n    //         var methodGD = payload.xmlDoc.getElementsByTagName('COM-METHOD-GRANT-DESIGN')\r\n    //         methodGD.forEach(ele => {\r\n    //             var Name = '',\r\n    //                 serviceI = null,\r\n    //                 processD = null,\r\n    //                 path = '',\r\n    //                 strPath = getEditPath(ele.parentNode.parentNode, path)\r\n\r\n    //             ele.childNodes.forEach(item => {\r\n    //                 if (item.nodeName == \"SHORT-NAME\") {\r\n    //                     Name = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"METHOD-IREF\") {\r\n    //                     serviceI = item.childNodes[1].childNodes[0].nodeValue\r\n    //                 }\r\n    //                 if (item.nodeName == \"PROCESS-DESIGN-REF\") {\r\n    //                     processD = item.childNodes[0].nodeValue\r\n    //                 }\r\n    //             })\r\n    //             var UUID = ele.getAttribute(\"UUID\")\r\n    //             var idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === UUID)\r\n    //             if (UUID == null || idxEle != -1) {\r\n    //                 UUID = uuid.v1()\r\n    //             }\r\n    //             const elementX = Array.from({ length: 4 }, () => Math.floor(Math.random() * (1400 - 11)) + 10) // (max - min) + min\r\n    //             const elementY = Array.from({ length: 4 }, () => Math.floor(Math.random() * (200 - 6)) + 5)\r\n\r\n    //             this.commit('addElementMethodGD', {\r\n    //                 name: Name,\r\n    //                 input: true,\r\n    //                 path: strPath,\r\n    //                 uuid: UUID,\r\n    //                 top: elementY,\r\n    //                 left: elementX,\r\n    //                 zindex: 2,\r\n    //                 icon: \"mdi-clipboard-outline\",\r\n    //                 validation: false,\r\n    //                 processD: processD,\r\n    //                 SIMethod: serviceI,\r\n    //             })\r\n    //             state.inputFileList.push({ uuid: UUID, path: strPath + '/' + Name, parent: constant.ComMethodGDesign_str })\r\n    //             EventBus.$emit('add-element', constant.Platform_str)\r\n    //             EventBus.$emit('add-element', constant.IAM_str)\r\n    //             EventBus.$emit('add-element', constant.ComMethodGDesign_str)\r\n    //         })\r\n\r\n\r\n\r\n\r\n    //     },\r\n    //     setInputFileComplate(state) { //바로 라인 그리면 element가 다 그려지기 전이라 선의 id값을 찾지 못한다.\r\n    //         state.isInputFileComplate = false // element들이 다 그려졌다는걸 알려 주는것임\r\n    //     },\r\n    //     checkLineInputXml(state) {\r\n    //         console.log(state.inputFileList)\r\n    //         state.inputFileList.forEach(ele => {\r\n    //             var idxelement = null\r\n    //             if (ele.parent == constant.Implementation_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].typeref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].typeref == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/typeref', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/typeref', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].templatetype != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                         console.log(state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].templatetype + ' ==== ' + item.path + '/' + item.name)\r\n    //                         if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].templatetype == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/templateType', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/templateType', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].ddpc.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].ddpc.forEach((data, i) => {\r\n    //                         if (data.compumethod != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.forEach(item => {\r\n    //                                 if (data.compumethod == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/ddpccompu-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/DDPC', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                         if (data.dataconstr != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.forEach(item => {\r\n    //                                 if (data.dataconstr == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/ddpcdata-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/DDPC', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].idtelement.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxelement].idtelement.forEach((data, i) => {\r\n    //                         if (data.typeref != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                                 if (data.typeref == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/idtetable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/idtetable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.Machine_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].machinedesign != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].machinedesign == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/machinedesign', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/machinedesign', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].hwelement.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].hwelement.forEach((data, i) => {\r\n    //                         if (data.hwelement != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Machine.HWElement.forEach(item => {\r\n    //                                 if (data.hwelement == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/hwelement-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/hwelement', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].functiongroup != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.Machine[idxelement].functiongroup.forEach((data, i) => {\r\n    //                         if (data.type != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.forEach(item => {\r\n    //                                 if (data.type == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/functiontable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/functiontable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.MachineDesigne_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxelement].connector.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxelement].connector.forEach((data, i) => {\r\n    //                         if (data.endpoint != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.forEach(item => {\r\n    //                                 if (item.conditional.length > 0) {\r\n    //                                     item.conditional.forEach(condi => {\r\n    //                                         if (condi.channel != null) {\r\n    //                                             condi.channel.forEach(channel => {\r\n    //                                                 if (channel.endpoint != null) {\r\n    //                                                     channel.endpoint.forEach(end => {\r\n    //                                                         if (data.endpoint == (item.path + '/' + item.name + '/' + condi.name + '/' + channel.name + '/' + end.name)) {\r\n    //                                                             this.commit('setConnectionline', { start: ele.uuid + '/cctable-' + i, end: item.uuid })\r\n    //                                                             EventBus.$emit('new-line', ele.uuid + '/cctable', item.uuid)\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     })\r\n\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxelement].servicediscover.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxelement].servicediscover.forEach((data, i) => {\r\n    //                         if (data.msia != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.forEach(item => {\r\n    //                                 if (item.conditional.length > 0) {\r\n    //                                     item.conditional.forEach(condi => {\r\n    //                                         if (condi.channel != null) {\r\n    //                                             condi.channel.forEach(channel => {\r\n    //                                                 if (channel.endpoint != null) {\r\n    //                                                     channel.endpoint.forEach(end => {\r\n    //                                                         if (data.msia == (item.path + '/' + item.name + '/' + condi.name + '/' + channel.name + '/' + end.name)) {\r\n    //                                                             this.commit('setConnectionline', { start: ele.uuid + '/sdctable-' + i, end: item.uuid })\r\n    //                                                             EventBus.$emit('new-line', ele.uuid + '/sdctable', item.uuid)\r\n    //                                                         }\r\n    //                                                     })\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.EthernetCluster_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxelement].conditional.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxelement].conditional.forEach((condi, n) => {\r\n    //                         if (condi.channel != null) {\r\n    //                             condi.channel.forEach((channel, v) => {\r\n    //                                 if (channel.comconnect != null) {\r\n    //                                     channel.comconnect.forEach((connect, c) => {\r\n    //                                         if (connect.connector != null) {\r\n    //                                             state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.forEach(data => {\r\n    //                                                 data.connector.forEach(con => {\r\n    //                                                     if (connect.connector == (data.path + '/' + data.name + '/' + con.name)) {\r\n    //                                                         this.commit('setConnectionline', { start: ele.uuid + '/comconet-' + c + '-' + v + '-' + n, end: data.uuid })\r\n    //                                                         if (n == 0 && v == 0) {\r\n    //                                                             EventBus.$emit('new-line', ele.uuid + '/comconet-' + channel.name + '-' + condi.name, data.uuid)\r\n    //                                                         } else if (n == 0 && v != 0) {\r\n    //                                                             EventBus.$emit('new-line', ele.uuid + '/channel' + condi.name, data.uuid)\r\n    //                                                         } else {\r\n    //                                                             EventBus.$emit('new-line', ele.uuid + '/conditional', data.uuid)\r\n    //                                                         }\r\n    //                                                     }\r\n    //                                                 })\r\n    //                                             })\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ProcesstoMachineMapping_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxelement].ptmmMachine != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.Machine.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxelement].ptmmMachine == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/machinefromptmm', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/machinefromptmm', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxelement].ptmmProcess != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxelement].ptmmProcess == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/processfromptmm', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/processfromptmm', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.SWComponents_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].pport.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].pport.forEach((data, i) => {\r\n    //                         if (data.interface != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 if (data.interface == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/pporttable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/pporttable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].rport.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].rport.forEach((data, i) => {\r\n    //                         if (data.interface != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 if (data.interface == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/rporttable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/rporttable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].prport.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxelement].prport.forEach((data, i) => {\r\n    //                         if (data.interface != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 if (data.interface == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/prporttable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/prporttable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.Process_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].prodesign != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].prodesign == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/processprodesign', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/processprodesign', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].determin != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].determin == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/processdetermin', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/processdetermin', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].execut != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].execut == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/processexecut', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/processexecut', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].machinetype != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].machinetype == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/processmodedeclar', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/processmodedeclar', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxelement].dependent.forEach((data, i) => {\r\n    //                     if (data.resourceRef != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].Machine.Machine.forEach(machine => {\r\n    //                             machine.moduleinstant.forEach(item => {\r\n    //                                 if (data.resourceRef == (machine.path + '/' + machine.name + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/processresorce-' + i, end: machine.uuid })\r\n    //                                     if (i == 0) {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/processresorce' + i, machine.uuid)\r\n    //                                     } else {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/processStarupC', machine.uuid)\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n    //                         })\r\n    //                     }\r\n    //                     if (data.startupConfigRef != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.forEach(item => {\r\n    //                             if (data.startupConfigRef == (item.path + '/' + item.name)) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/processstartup-' + i, end: item.uuid })\r\n    //                                 EventBus.$emit('new-line', ele.uuid + '/processstartup', item.uuid)\r\n    //                                 if (i == 0) {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/processresorce' + i, item.uuid)\r\n    //                                 } else {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/processStarupC', item.uuid)\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (data.functionItem != null) {\r\n    //                         data.functionItem.forEach((func, f) => {\r\n    //                             if (func.contextMode != null) {\r\n    //                                 state.SAHLProject[state.openProjectIndex].Machine.Machine.forEach(item => {\r\n    //                                     item.functiongroup.forEach(group => {\r\n    //                                         if (func.contextMode == (item.path + '/' + item.name + '/' + group.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/fgcontext-' + f + '-' + i, end: item.uuid })\r\n    //                                             if (i == 0) {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/fgtable' + i, item.uuid)\r\n    //                                             } else {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/processStarupC', item.uuid)\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                 })\r\n    //                             }\r\n    //                             if (func.targetMode != null) {\r\n    //                                 state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.forEach(item => {\r\n    //                                     item.modedeclaration.forEach(mode => {\r\n    //                                         if (func.targetMode == (item.path + '/' + item.name + '/' + mode)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/fgtarget-' + f + '-' + i, end: item.uuid })\r\n    //                                             if (i == 0) {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/fgtable' + i, item.uuid)\r\n    //                                             } else {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/processStarupC', item.uuid)\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (ele.parent == constant.ProcessDesign_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxelement].executableref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxelement].executableref == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/prodesignexecutable', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/prodesignexecutable', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.Executable_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxelement].applicationtyperef != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxelement].applicationtyperef == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/applicationtyperef', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/applicationtyperef', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].service != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].service == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/service', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/service', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].fieldD.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].fieldD.forEach((data, i) => {\r\n    //                         if (data.field != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 item.fields.forEach(service => {\r\n    //                                     if (data.field == (item.path + '/' + item.name + '/' + service.name)) {\r\n    //                                         this.commit('setConnectionline', { start: ele.uuid + '/field-' + i, end: item.uuid })\r\n    //                                         if (i == 0) {\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/fieldtab' + data.name, item.uuid)\r\n    //                                         } else {\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/field', item.uuid)\r\n    //                                         }\r\n    //                                     }\r\n    //                                 })\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].eventG.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].eventG.forEach((eve, i) => {\r\n    //                         if (eve.event != null) {\r\n    //                             eve.event.forEach((group, g) => {\r\n    //                                 if (group.event != null) {\r\n    //                                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                                         if (item.eventD.length > 0) {\r\n    //                                             item.eventD.forEach(data => {\r\n    //                                                 if (group.event == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                                     this.commit('setConnectionline', { start: ele.uuid + '/event-' + g + '-' + i, end: item.uuid })\r\n    //                                                     if (i == 0) {\r\n    //                                                         EventBus.$emit('new-line', ele.uuid + '/eventtab' + eve.name, item.uuid)\r\n    //                                                     } else {\r\n    //                                                         EventBus.$emit('new-line', ele.uuid + '/event', item.uuid)\r\n    //                                                     }\r\n    //                                                 }\r\n    //                                             })\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].eventD.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].eventD.forEach((eve, i) => {\r\n    //                         if (eve.event != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 if (item.events.length > 0) {\r\n    //                                     item.events.forEach(data => {\r\n    //                                         if (eve.event == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/serviceEventD-' + i, end: item.uuid })\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/serviceEventD', item.uuid)\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].methodD.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxelement].methodD.forEach((method, i) => {\r\n    //                         if (method.method != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                                 if (item.methods.length > 0) {\r\n    //                                     item.methods.forEach(data => {\r\n    //                                         if (method.method == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/serviceMethodD-' + i, end: item.uuid })\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/serviceMethodD', item.uuid)\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ServiceInterface_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].events.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].events.forEach((eve, i) => {\r\n    //                         if (eve.type != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                                 if (eve.type == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/Eventtable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/Eventtable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].fields.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].fields.forEach((data, i) => {\r\n    //                         if (data.type != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                                 if (data.type == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/Fieldtable-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/Fieldtable', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].methods.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxelement].methods.forEach((data, i) => {\r\n    //                         if (data.argument != null) {\r\n    //                             data.argument.forEach((arg, a) => {\r\n    //                                 if (arg.type != null) {\r\n    //                                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.forEach(item => {\r\n    //                                         if (arg.type == (item.path + '/' + item.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/argtable-' + a + '-' + i, end: item.uuid })\r\n    //                                             if (i == 0) {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/argtable' + data.name, item.uuid)\r\n    //                                             } else {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/methods', item.uuid)\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                         if (data.errorSet != null) {\r\n    //                             data.errorSet.forEach((error, e) => {\r\n    //                                 if (error.error != null) {\r\n    //                                     state.SAHLProject[state.openProjectIndex].Service.ErrorSet.forEach(item => {\r\n    //                                         if (error.error == (item.path + '/' + item.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/methoderrors-' + e + '-' + i, end: item.uuid })\r\n    //                                             if (i == 0) {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/methoderrors' + data.name, item.uuid)\r\n    //                                             } else {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/methods', item.uuid)\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                         if (data.error != null) {\r\n    //                             data.error.forEach((err, e) => {\r\n    //                                 if (err.error != null) {\r\n    //                                     state.SAHLProject[state.openProjectIndex].Service.Error.forEach(item => {\r\n    //                                         if (err.error == (item.path + '/' + item.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/methoderror-' + e + '-' + i, end: item.uuid })\r\n    //                                             if (i == 0) {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/methoderror' + data.name, item.uuid)\r\n    //                                             } else {\r\n    //                                                 EventBus.$emit('new-line', ele.uuid + '/methods', item.uuid)\r\n    //                                             }\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.SomeIPToMachineMapping_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxelement].ccref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.forEach(data => {\r\n    //                         data.connector.forEach(item => {\r\n    //                             if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxelement].ccref == data.path + '/' + data.name + '/' + item.name) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/tomachinCC', end: data.uuid })\r\n    //                                 EventBus.$emit('new-line', ele.uuid + '/tomachinCC', data.uuid)\r\n    //                             }\r\n    //                         })\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxelement].siref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.forEach(data => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxelement].siref == data.path + '/' + data.name) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/tomachinServiceIns', end: data.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/tomachinServiceIns', data.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ToPortPrototypeMapping_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].porttype != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].selectPort == 'P-PORT-PROTOTYPE') {\r\n    //                             item.pport.forEach(data => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].porttype == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/toportport', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/toportport', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         } else if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].selectPort == 'R-PORT-PROTOTYPE') {\r\n    //                             item.rport.forEach(data => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].porttype == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/toportport', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/toportport', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         } else if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].selectPort == 'PR-PORT-PROTOTYPE') {\r\n    //                             item.prport.forEach(data => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].porttype == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/toportport', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/toportport', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].process != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].process == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/toportprocess', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/toportprocess', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].serviceIns != null) {\r\n    //                     if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].selectServiceIns == 'PROVIDED-SOMEIP-SERVICE-INSTANCE') {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach(item => {\r\n    //                             if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].serviceIns == (item.path + '/' + item.name)) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/toportservice', end: item.uuid })\r\n    //                                 EventBus.$emit('new-line', ele.uuid + '/toportservice', item.uuid)\r\n    //                             }\r\n    //                         })\r\n    //                     } else if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].selectServiceIns == 'REQUIRED-SOMEIP-SERVICE-INSTANCE') {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.forEach(item => {\r\n    //                             if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxelement].serviceIns == (item.path + '/' + item.name)) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/toportservice', end: item.uuid })\r\n    //                                 EventBus.$emit('new-line', ele.uuid + '/toportservice', item.uuid)\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 }\r\n    //             } else if (ele.parent == constant.RequiredSomeIP_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].deployref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].deployref == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/requiredDeploy', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/requiredDeploy', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].someipclient != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].someipclient == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/requiredSomeIPC', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/requiredSomeIPC', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].method.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].method.forEach((method, i) => {\r\n    //                         if (method.method != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                                 if (item.methodD.length > 0) {\r\n    //                                     item.methodD.forEach(data => {\r\n    //                                         if (method.method == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/requiredMethod-' + i, end: item.uuid })\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/requiredMethod', item.uuid)\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxelement].requiredevent.forEach((data, i) => {\r\n    //                     if (data.eventG != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(eve => {\r\n    //                             eve.eventG.forEach(item => {\r\n    //                                 if (data.eventG == (eve.path + '/' + eve.name + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/requiredEventG-' + i, end: eve.uuid })\r\n    //                                     if (i == 0) {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/requiredEventG' + data.name, eve.uuid)\r\n    //                                     } else {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/requiredE', eve.uuid)\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n    //                         })\r\n    //                     }\r\n    //                     if (data.client != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.forEach(item => {\r\n    //                             if (data.client == (item.path + '/' + item.name)) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/requiredClient-' + i, end: item.uuid })\r\n    //                                 if (i == 0) {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/requiredClient' + data.name, item.uuid)\r\n    //                                 } else {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/requiredE', item.uuid)\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (ele.parent == constant.ProvidedSomeIP_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].deployref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].deployref == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/providDeploy', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/providDeploy', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].someipserver != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.forEach(item => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].someipserver == (item.path + '/' + item.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/providSomeIPS', end: item.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/providSomeIPS', item.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].eventP.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].eventP.forEach((eventp, i) => {\r\n    //                         if (eventp.event != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                                 if (item.eventD.length > 0) {\r\n    //                                     item.eventD.forEach(data => {\r\n    //                                         if (eventp.event == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/proviedEventP-' + i, end: item.uuid })\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/proviedEventP', item.uuid)\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].method != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].method.forEach((method, i) => {\r\n    //                         if (method.method != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(item => {\r\n    //                                 if (item.methodD.length > 0) {\r\n    //                                     item.methodD.forEach(data => {\r\n    //                                         if (method.method == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                             this.commit('setConnectionline', { start: ele.uuid + '/proviedMethod-' + i, end: item.uuid })\r\n    //                                             EventBus.$emit('new-line', ele.uuid + '/proviedMethod', item.uuid)\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxelement].eventG.forEach((data, i) => {\r\n    //                     if (data.eventG != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach(eve => {\r\n    //                             eve.eventG.forEach(item => {\r\n    //                                 if (data.eventG == (eve.path + '/' + eve.name + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/providEventG-' + i, end: eve.uuid })\r\n    //                                     if (i == 0) {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/providEventG' + data.name, eve.uuid)\r\n    //                                     } else {\r\n    //                                         EventBus.$emit('new-line', ele.uuid + '/providE', eve.uuid)\r\n    //                                     }\r\n    //                                 }\r\n    //                             })\r\n    //                         })\r\n    //                     }\r\n    //                     if (data.server != null) {\r\n    //                         state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.forEach(item => {\r\n    //                             if (data.server == (item.path + '/' + item.name)) {\r\n    //                                 this.commit('setConnectionline', { start: ele.uuid + '/providServer-' + i, end: item.uuid })\r\n    //                                 if (i == 0) {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/providServer' + data.name, item.uuid)\r\n    //                                 } else {\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/providE', item.uuid)\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (ele.parent == constant.Error_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.Error[idxelement].errorDref != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.forEach(domain => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Service.Error[idxelement].errorDref == (domain.path + '/' + domain.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/errordomain', end: domain.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/errordomain', domain.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.Errorset_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxelement].errorref.length > 0) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxelement].errorref.forEach((data, i) => {\r\n    //                         if (data.error != null) {\r\n    //                             state.SAHLProject[state.openProjectIndex].Service.Error.forEach(item => {\r\n    //                                 if (data.error == (item.path + '/' + item.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/error-' + i, end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/error', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.PortProtoFileA_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].fileArray != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERFileArray.forEach(data => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].fileArray == (data.path + '/' + data.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/PPPtoFileArray', end: data.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/PPPtoFileArray', data.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].port != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.forEach(item => {\r\n    //                         if (item.prport.length > 0) {\r\n    //                             item.prport.forEach(data => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].port == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/PPPtoFilePRPort', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/PPPtoFilePRPort', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].process != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach(pro => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxelement].process == (pro.path + '/' + pro.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/PPPtoFileProcess', end: pro.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/PPPtoFileProcess', pro.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.PortProtoKeyV_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].keyValue != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.forEach(data => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].keyValue == (data.path + '/' + data.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/PPPtoKeyValue', end: data.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/PPPtoKeyValue', data.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].port != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.forEach(item => {\r\n    //                         if (item.prport.length > 0) {\r\n    //                             item.prport.forEach(data => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].port == (item.path + '/' + item.name + '/' + data.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/PPPtoKeyPRPort', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/PPPtoKeyPRPort', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].process != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach(pro => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxelement].process == (pro.path + '/' + pro.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/PPPtoKeyProcess', end: pro.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/PPPtoKeyProcess', pro.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComFieldGrant_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxelement].fieldD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.FieldGD.forEach(design => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxelement].fieldD == (design.path + '/' + design.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/FieldGD', end: design.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/FieldGD', design.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxelement].provide != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach(pro => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxelement].provide == (pro.path + '/' + pro.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/FGProvide', end: pro.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/FGProvide', pro.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComEventGrant_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.EventG[idxelement].eventD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.EventGD.forEach(design => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.EventG[idxelement].eventD == (design.path + '/' + design.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/EventGD', end: design.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/EventGD', design.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.EventG[idxelement].provide != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach(pro => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.EventG[idxelement].provide == (pro.path + '/' + pro.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/EGProvide', end: pro.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/EGProvide', pro.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComMethodGrant_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxelement].methodD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.MethodGD.forEach(design => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxelement].methodD == (design.path + '/' + design.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/MethodGD', end: design.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/MethodGD', design.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxelement].provide != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach(pro => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxelement].provide == (pro.path + '/' + pro.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/MGProvide', end: pro.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/MGProvide', pro.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComFieldGDesign_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxelement].processD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.forEach(proce => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxelement].processD == (proce.path + '/' + proce.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/FGDproD', end: proce.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/FGDproD', proce.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxelement].SIField != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                         if (item.fields.length > 0) {\r\n    //                             item.fields.forEach(service => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxelement].SIField == (item.path + '/' + item.name + '/' + service.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/FGDserviceI', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/FGDserviceI', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComEventGDesign_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxelement].processD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.forEach(proce => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxelement].processD == (proce.path + '/' + proce.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/EGDproD', end: proce.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/EGDproD', proce.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxelement].SIEvent != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                         if (item.events.length > 0) {\r\n    //                             item.events.forEach(service => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxelement].SIEvent == (item.path + '/' + item.name + '/' + service.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/EGDserviceI', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/EGDserviceI', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             } else if (ele.parent == constant.ComMethodGDesign_str) {\r\n    //                 idxelement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(item => item.uuid === ele.uuid)\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxelement].processD != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.forEach(proce => {\r\n    //                         if (state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxelement].processD == (proce.path + '/' + proce.name)) {\r\n    //                             this.commit('setConnectionline', { start: ele.uuid + '/MGDproD', end: proce.uuid })\r\n    //                             EventBus.$emit('new-line', ele.uuid + '/MGDproD', proce.uuid)\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //                 if (state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxelement].SIMethod != null) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.forEach(item => {\r\n    //                         if (item.methods.length > 0) {\r\n    //                             item.methods.forEach(service => {\r\n    //                                 if (state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxelement].SIMethod == (item.path + '/' + item.name + '/' + service.name)) {\r\n    //                                     this.commit('setConnectionline', { start: ele.uuid + '/MGDserviceI', end: item.uuid })\r\n    //                                     EventBus.$emit('new-line', ele.uuid + '/MGDserviceI', item.uuid)\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             }\r\n    //         })\r\n    //         state.inputFileList = []\r\n    //     },\r\n\r\n    //     addElementCompuMehtod(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             category: payload.category,\r\n    //             scales: payload.scales,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.CompuMethod_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editCompuMehtod(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(data => data.uuid === payload.uuid)\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.CompuMethod_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].left[payload.location] = payload.left\r\n    //                 //console.log(state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].top[payload.location] + ' / ' + state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].left[payload.location])\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementDataConstr(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             lowerlimit: payload.lowerlimit,\r\n    //             upperlimit: payload.upperlimit,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.DataConstr_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editDataConstr(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(data => data.uuid === payload.uuid)\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.DataConstr_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementApplicationArray(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             category: payload.category,\r\n    //             dynamicArrySize: payload.dynamicArrySize,\r\n    //             elename: payload.elename,\r\n    //             elehandling: payload.elehandling,\r\n    //             elesemantics: payload.elesemantics,\r\n    //             elemaxnumber: payload.elemaxnumber,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.ApplicationArray_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editApplicationArray(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.ApplicationArray_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementImplementation(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         //console.log('!!! UUID !!!' + newUUid)\r\n    //         state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             category: payload.category,\r\n    //             namespace: payload.namespace,\r\n    //             arraysize: payload.arraysize,\r\n    //             typeemitter: payload.typeemitter,\r\n    //             typeref: payload.typeref,\r\n    //             templatetype: payload.templatetype,\r\n    //             desc: payload.desc,\r\n    //             ddpc: payload.ddpc,\r\n    //             idtelement: payload.idtelement,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editImplementation(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementMachine(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Machine.Machine.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             machinedesign: payload.machinedesign,\r\n    //             timeout: payload.timeout,\r\n    //             hwelement: payload.hwelement,\r\n    //             executable: payload.executable,\r\n    //             admin: payload.admin,\r\n    //             functiongroup: payload.functiongroup,\r\n    //             processor: payload.processor,\r\n    //             moduleinstant: payload.moduleinstant,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editMachine(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementHWElement(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Machine.HWElement.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             category: payload.category,\r\n    //             attribute: payload.attribute,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.HWElement_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editHWElement(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.HWElement_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n\r\n    //     addElementMachineDesign(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             access: payload.access,\r\n    //             resettimer: payload.resettimer,\r\n    //             connector: payload.connector,\r\n    //             servicediscover: payload.servicediscover\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editMachineDesign(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementModeDeclarationGroup(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             modedeclaration: payload.modedeclaration,\r\n    //             initmode: payload.initmode,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.ModeDeclarationGroup_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editModeDeclarationGroup(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.ModeDeclarationGroup_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementEthernetCluster(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             conditional: payload.conditional,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editEthernetCluster(state, payload) {\r\n    //         //console.log('editEthernetCluster' + payload.uuid + '///' + payload.zindex)\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementProtoMachineMapping(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             ptmmname: payload.ptmmname,\r\n    //             ptmmMachine: payload.ptmmMachine,\r\n    //             ptmmProcess: payload.ptmmProcess,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editProtoMachineMapping(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementSWComponents(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             pport: payload.pport,\r\n    //             rport: payload.rport,\r\n    //             prport: payload.prport,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editSWComponents(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementProcess(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             prodesign: payload.prodesign,\r\n    //             determin: payload.determin,\r\n    //             execut: payload.execut,\r\n    //             machinname: payload.machinname,\r\n    //             machinetype: payload.machinetype,\r\n    //             dependent: payload.dependent,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editProcess(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementProcessDesign(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             executableref: payload.executableref,\r\n    //             determin: payload.determin\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editProcessDesign(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementExecutable(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             version: payload.version,\r\n    //             category: payload.category,\r\n    //             buildType: payload.buildType,\r\n    //             loggingBehabior: payload.loggingBehabior,\r\n    //             reportingBehabior: payload.reportingBehabior,\r\n    //             swname: payload.swname,\r\n    //             applicationtyperef: payload.applicationtyperef\r\n\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editExecutable(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].left, payload.location, payload.left)\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].top[payload.location] = payload.top\r\n    //                 //state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].left[payload.location] = payload.left\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementStartupConfig(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             configname: payload.configname,\r\n    //             policy: payload.policy,\r\n    //             priority: payload.priority,\r\n    //             entertimeout: payload.entertimeout,\r\n    //             exittimeout: payload.exittimeout,\r\n\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.StartupConfig_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editStartupConfig(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.StartupConfig_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementDeterministicClien(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             cycletiem: payload.cycletiem,\r\n    //             numofworkers: payload.numofworkers,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.DeterministicClient_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editDeterministicClien(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.DeterministicClient_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxElement].zindex = payload.zindex\r\n    //         }\r\n\r\n    //     },\r\n    //     addElementSomeIPService(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             service: payload.service,\r\n    //             majversion: payload.majversion,\r\n    //             minversion: payload.minversion,\r\n    //             id: payload.id,\r\n    //             eventG: payload.eventG,\r\n    //             eventD: payload.eventD,\r\n    //             methodD: payload.methodD,\r\n    //             fieldD: payload.fieldD,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editSomeIPService(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementService(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             majversion: payload.versionMaj,\r\n    //             minversion: payload.versionMin,\r\n    //             namespace: payload.namespace,\r\n    //             isservice: payload.isservice,\r\n    //             events: payload.events,\r\n    //             fields: payload.fields,\r\n    //             methods: payload.methods\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editServiceInterface(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementClient(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             retrydelay: payload.delay,\r\n    //             retrymax: payload.max,\r\n    //             timetolive: payload.timetolive,\r\n    //             delaymax: payload.delaymax,\r\n    //             delaymin: payload.delaymin,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Client_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editClient(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Client_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementServer(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             delaymax: payload.delaymax,\r\n    //             delaymin: payload.delaymin,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Server_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editServer(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Server_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementSomeIPClient(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             findtime: payload.findtime,\r\n    //             inidelaymax: payload.inidelaymax,\r\n    //             inidelaymin: payload.inidelaymin,\r\n    //             inibasedelay: payload.inibasedelay,\r\n    //             inirepetimax: payload.inirepetimax,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPClient_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editSomeIPClient(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPClient_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementSomeIPServer(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             inidelaymax: payload.inidelaymax,\r\n    //             inidelaymin: payload.inidelaymin,\r\n    //             inibasedelay: payload.inibasedelay,\r\n    //             inirepetimax: payload.inirepetimax,\r\n    //             delaymax: payload.delaymax,\r\n    //             delaymin: payload.delaymin,\r\n    //             offer: payload.offer,\r\n    //             timetolive: payload.tiemtolive,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPServer_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editSomeIPServer(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPServer_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementSomeIPtoMachine(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             ccref: payload.ccref,\r\n    //             udp: payload.udp,\r\n    //             tcp: payload.tcp,\r\n    //             siref: payload.siref,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editSomeIPtoMachine(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementToPortPrototype(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             selectPort: payload.selectPort,\r\n    //             porttype: payload.porttype,\r\n    //             process: payload.process,\r\n    //             selectServiceIns: payload.selectServiceIns,\r\n    //             serviceIns: payload.serviceIns,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editToPortPrototype(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementRequiredSomeIP(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             deployref: payload.deployref,\r\n    //             minorver: payload.minover,\r\n    //             serviceInsid: payload.id,\r\n    //             someipclient: payload.clientref,\r\n    //             version: payload.ver,\r\n    //             method: payload.method,\r\n    //             requiredevent: payload.requiredevent\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editRequiredSomeIP(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementProvidedSomeIP(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             deployref: payload.deployref,\r\n    //             someipserver: payload.someips,\r\n    //             instanceid: payload.id,\r\n    //             eventP: payload.eventP,\r\n    //             method: payload.method,\r\n    //             eventG: payload.eventG\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editProvidedSomeIP(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n\r\n    //     addElementError(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.Error.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             desc: payload.desc,\r\n    //             errorcode: payload.errorcode,\r\n    //             errorDref: payload.errorDref\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editError(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.Error[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.Error[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.Error[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementErrorSet(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.ErrorSet.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             errorref: payload.errorref\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editErrorSet(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementErrorDomain(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             namespace: payload.namespace,\r\n    //             value: payload.value,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.ErrorDomain_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editErrorDomain(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.ErrorDomain_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     ////////////////////////////////////\r\n    //     addElementPERFileArray(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Per.PERFileArray.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileArray_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editPERFileArrayD(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Per.PERFileArray.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileArray_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n\r\n    //     addElementPERKeyValueD(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueData_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editPERPPKeyValueD(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueData_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementPERPPtoFileArray(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             fileArray: payload.fileArray,\r\n    //             port: payload.port,\r\n    //             process: payload.process\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editPERPPtoFileArray(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementPERPPtoKeyValue(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             keyValue: payload.keyValue,\r\n    //             port: payload.port,\r\n    //             process: payload.process\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editPERPPtoKeyValue(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementMethodGD(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.MethodGD.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             processD: payload.processD,\r\n    //             SIMethod: payload.SIMethod,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editMethodGD(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementEventGD(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.EventGD.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             processD: payload.processD,\r\n    //             SIEvent: payload.SIEvent,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editEventGD(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementFieldGD(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.FieldGD.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             processD: payload.processD,\r\n    //             SIField: payload.SIField,\r\n    //             role: payload.role\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editFieldGD(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementMethodG(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.MethodG.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             methodD: payload.methodD,\r\n    //             provide: payload.provide,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editMethodG(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementEventG(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.EventG.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             eventD: payload.eventD,\r\n    //             provide: payload.provide,\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editEventG(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.EventG[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.EventG[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventG[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n    //     addElementFieldG(state, payload) {\r\n    //         var newUUid\r\n    //         if (!payload.input) {\r\n    //             newUUid = uuid.v1()\r\n    //         } else {\r\n    //             newUUid = payload.uuid\r\n    //         }\r\n    //         state.SAHLProject[state.openProjectIndex].IamG.FieldG.push({\r\n    //             uuid: newUUid,\r\n    //             path: payload.path,\r\n    //             top: payload.top,\r\n    //             left: payload.left,\r\n    //             zindex: payload.zindex,\r\n    //             name: payload.name,\r\n    //             fieldD: payload.fieldD,\r\n    //             provide: payload.provide,\r\n    //             role: payload.role\r\n    //         })\r\n    //         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children.push({ uuid: newUUid, name: payload.name, icon: payload.icon, validation: false, })\r\n    //         if (!payload.input) {\r\n    //             state.activeUUID = newUUid\r\n    //         }\r\n    //         EventBus.$emit('new-element', newUUid)\r\n    //     },\r\n    //     editFieldG(state, payload) {\r\n    //         var idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === payload.uuid)\r\n\r\n    //         if (payload.compo == \"Name\") {\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children[idxElement].name = payload.name\r\n    //         } else if (payload.compo == \"drag\") {\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxElement].top, payload.location, payload.top)\r\n    //             Vue.set(state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxElement].left, payload.location, payload.left)\r\n    //         } else if (payload.compo == \"z\") {\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxElement].zindex = payload.zindex\r\n    //         }\r\n    //     },\r\n\r\n\r\n\r\n    //     renameElement(state, payload) {\r\n    //         var idxEle, ele, editmethod\r\n    //         if (payload.parent == constant.CompuMethod_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod[idxEle]\r\n    //             editmethod = 'editCompuMehtod'\r\n    //         } else if (payload.parent == constant.DataConstr_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr[idxEle]\r\n    //             editmethod = 'editDataConstr'\r\n    //         } else if (payload.parent == constant.ApplicationArray_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType[idxEle]\r\n    //             editmethod = 'editApplicationArray'\r\n    //         } else if (payload.parent == constant.Implementation_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxEle]\r\n    //             editmethod = 'editImplementation'\r\n    //         } else if (payload.parent == constant.Machine_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Machine.Machine[idxEle]\r\n    //             editmethod = 'editMachine'\r\n    //         } else if (payload.parent == constant.MachineDesigne_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxEle]\r\n    //             editmethod = 'editMachineDesign'\r\n    //         } else if (payload.parent == constant.EthernetCluster_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxEle]\r\n    //             editmethod = 'editEthernetCluster'\r\n    //         } else if (payload.parent == constant.ModeDeclarationGroup_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup[idxEle]\r\n    //             editmethod = 'editModeDeclarationGroup'\r\n    //         } else if (payload.parent == constant.HWElement_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Machine.HWElement[idxEle]\r\n    //             editmethod = 'editHWElement'\r\n    //         } else if (payload.parent == constant.ProcesstoMachineMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxEle]\r\n    //             editmethod = 'editProtoMachineMapping'\r\n    //         } else if (payload.parent == constant.SWComponents_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxEle]\r\n    //             editmethod = 'editSWComponents'\r\n    //         } else if (payload.parent == constant.Process_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxEle]\r\n    //             editmethod = 'editProcess'\r\n    //         } else if (payload.parent == constant.ProcessDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxEle]\r\n    //             editmethod = 'editProcessDesign'\r\n    //         } else if (payload.parent == constant.Executable_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxEle]\r\n    //             editmethod = 'editExecutable'\r\n    //         } else if (payload.parent == constant.StartupConfig_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig[idxEle]\r\n    //             editmethod = 'editStartupConfig'\r\n    //         } else if (payload.parent == constant.DeterministicClient_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient[idxEle]\r\n    //             editmethod = 'editDeterministicClien'\r\n    //         } else if (payload.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxEle]\r\n    //             editmethod = 'editSomeIPService'\r\n    //         } else if (payload.parent == constant.ServiceInterface_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxEle]\r\n    //             editmethod = 'editServiceInterface'\r\n    //         } else if (payload.parent == constant.Client_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent[idxEle]\r\n    //             editmethod = 'editClient'\r\n    //         } else if (payload.parent == constant.Server_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent[idxEle]\r\n    //             editmethod = 'editServer'\r\n    //         } else if (payload.parent == constant.SomeIPClient_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance[idxEle]\r\n    //             editmethod = 'editSomeIPClient'\r\n    //         } else if (payload.parent == constant.SomeIPServer_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance[idxEle]\r\n    //             editmethod = 'editSomeIPServer'\r\n    //         } else if (payload.parent == constant.SomeIPToMachineMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxEle]\r\n    //             editmethod = 'editSomeIPtoMachine'\r\n    //         } else if (payload.parent == constant.ToPortPrototypeMapping_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxEle]\r\n    //             editmethod = 'editToPortPrototype'\r\n    //         } else if (payload.parent == constant.RequiredSomeIP_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxEle]\r\n    //             editmethod = 'editRequiredSomeIP'\r\n    //         } else if (payload.parent == constant.ProvidedSomeIP_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxEle]\r\n    //             editmethod = 'editProvidedSomeIP'\r\n    //         } else if (payload.parent == constant.Error_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.Error[idxEle]\r\n    //             editmethod = 'editError'\r\n    //         } else if (payload.parent == constant.Errorset_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxEle]\r\n    //             editmethod = 'editErrorSet'\r\n    //         } else if (payload.parent == constant.ErrorDomain_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain[idxEle]\r\n    //             editmethod = 'editErrorDomain'\r\n    //         } else if (payload.parent == constant.FileArray_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERFileArray.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERFileArray[idxEle]\r\n    //             editmethod = 'editPERFileArray'\r\n    //         } else if (payload.parent == constant.FileProxyInterf_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERFileProxy[idxEle]\r\n    //             editmethod = 'editPERFileProxy'\r\n    //         } else if (payload.parent == constant.KeyValueData_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD[idxEle]\r\n    //             editmethod = 'editPERKeyValueD'\r\n    //         } else if (payload.parent == constant.KeyValueDI_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI[idxEle]\r\n    //             editmethod = 'editPERKeyValueDI'\r\n    //         } else if (payload.parent == constant.PortProtoFileA_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxEle]\r\n    //             editmethod = 'editPERPPtoFileArray'\r\n    //         } else if (payload.parent == constant.PortProtoKeyV_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxEle]\r\n    //             editmethod = 'editPERPPtoKeyValue'\r\n    //         } else if (payload.parent == constant.ComFieldGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxEle]\r\n    //             editmethod = 'editFieldG'\r\n    //         } else if (payload.parent == constant.ComEventGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.EventG[idxEle]\r\n    //             editmethod = 'editEventG'\r\n    //         } else if (payload.parent == constant.ComMethodGrant_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxEle]\r\n    //             editmethod = 'editMethodG'\r\n    //         } else if (payload.parent == constant.ComFieldGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxEle]\r\n    //             editmethod = 'editFieldGD'\r\n    //         } else if (payload.parent == constant.ComEventGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxEle]\r\n    //             editmethod = 'editEventGD'\r\n    //         } else if (payload.parent == constant.ComMethodGDesign_str) {\r\n    //             idxEle = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(item => item.uuid === payload.uuid)\r\n    //             ele = state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxEle]\r\n    //             editmethod = 'editMethodGD'\r\n    //         }\r\n\r\n    //         ele.name = payload.name\r\n    //         this.commit(editmethod, { compo: \"Name\", uuid: payload.uuid, name: payload.name })\r\n    //         this.commit('changePathElement', { uuid: payload.uuid, path: ele.path, name: ele.name })\r\n    //     },\r\n    //     changePathElement(state, payload) {\r\n    //         var indices = this.getters.getchangenamelist(payload.uuid)\r\n    //         indices.forEach(idx => {\r\n    //             var startUUID = state.connectionLine[state.openProjectIndex].start[idx].split('/')\r\n    //             var tableLine = startUUID[1].split('-')\r\n    //             var idxElement = null,\r\n    //                 intablename = null\r\n    //             if (tableLine[0] == 'ddpccompu') { // compu method 변경시 => implementation 에서 compu method ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].ddpc[tableLine[1]].compumethod = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'ddpcdata') { // data constr변경시 => implementation 에서 data constr ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].ddpc[tableLine[1]].dataconstr = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'typeref') { //implementation 변경시 =>  implementation 에서 implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].typeref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'templateType') { //implementation 변경시 =>   implementation 에서 implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].templatetype = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'idtetable') { //implementation 변경시 =>   implementation 에서 implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxElement].idtelement[tableLine[1]].typeref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'Eventtable') { //implementation 변경시 =>   ServiceInterface 에서 Implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].events[tableLine[1]].type = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'Fieldtable') { //implementation 변경시 =>   ServiceInterface 에서 Implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].fields[tableLine[1]].type = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'argtable') { //implementation 변경시 =>   ServiceInterface 에서 Implementation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].methods[tableLine[2]].argument[tableLine[1]].type = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'machinefromptmm') { // Machine 변경시 => Process to Machine Mapping set 에서 Machine ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].ptmmMachine = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processresorce') { //Machine 변경시 =>  Process 에서 Machine -> Module Instantiation ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'ModuleIns') {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[1]].resourceRef = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[1]].resourceRef.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[1]].resourceRef = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'fgcontext') { //Machine 변경시 =>  Process 에서 Machine -> Function Group ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'functionG') {\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[2]].functionItem[tableLine[1]].contextMode = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[2]].functionItem[tableLine[1]].contextMode.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[2]].functionItem[tableLine[1]].contextMode = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'machinedesign') { //MachineDesign 변경시 =>  machin에서 machinDesign ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].machinedesign = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'comconet') { //MachineDesign 변경시 =>   EthernetCluster에서 MachineDesign -> Communication Connector ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'CommunicationC') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].conditional[tableLine[3]].channel[tableLine[2]].comconnect[tableLine[1]].connector = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].conditional[tableLine[3]].channel[tableLine[2]].comconnect[tableLine[1]].connector.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxElement].conditional[tableLine[3]].channel[tableLine[2]].comconnect[tableLine[1]].connector = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'tomachinCC') { //MachineDesign 변경시 =>   SomeIPtoMachineMapping 에서 MachineDesgin의 Communication Connected ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'CommunicationC') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].ccref = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].ccref.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].ccref = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'cctable') { //EthernetCluster 변경시 => machinDesign에서 EthernetCluster Endpoint ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].connector[tableLine[1]].endpoint = payload.path + '/' + payload.name + '/' + payload.condi + '/' + payload.channl + '/' + payload.endpoint\r\n    //             } else if (tableLine[0] == 'sdctable') { //EthernetCluster 변경시 =>  machinDesign에서 EthernetCluster Endpoint ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxElement].servicediscover[tableLine[1]].msia = payload.path + '/' + payload.name + '/' + payload.condi + '/' + payload.channl + '/' + payload.endpoint\r\n    //             } else if (tableLine[0] == 'functiontable') { //Mode Declaration  변경시 =>  machin에서 Mode Declaration ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].functiongroup[tableLine[1]].type = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processmodedeclar') { //Mode Declaration  변경시 =>  Process 에서 Mode Declaration ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].machinetype = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'fgtarget') { //Mode Declaration  변경시 =>  Process 에서  Module Declaration-> mode Declarations ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 intablename = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[2]].functionItem[tableLine[1]].targetMode.split('/')\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[2]].functionItem[tableLine[1]].targetMode = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //             } else if (tableLine[0] == 'hwelement') { //HW Element 변경시 =>  machin에서 HWElement ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxElement].hwelement[tableLine[1]].hwelement = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'applicationtyperef') { //SW Component 변경시 =>  Executable 에서 SW Components ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxElement].applicationtyperef = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'toportport') { //SW Component 변경시 =>   Service Instance to port prototype 에서 SWComponent port ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'pPort' && state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].selectPort == 'P-PORT-PROTOTYPE') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].porttype = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else if (payload.changeName == 'prPort' && state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].selectPort == 'PR-PORT-PROTOTYPE') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].porttype = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else if (payload.changeName == 'rPort' && state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].selectPort == 'R-PORT-PROTOTYPE') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].porttype = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].porttype.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].porttype = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'PPPtoFilePRPort') { //SW Component 변경시 =>  PPP to File Array 에서 SW Component ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'prPort') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].port = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else if (payload.changeName == undefined) {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].port.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].port = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'PPPtoKeyPRPort') { //SW Component 변경시 =>  PPP to Key Value 에서 SW Component ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'prPort') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].port = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else if (payload.changeName == undefined) {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].port.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].port = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'processfromptmm') { //Process 변경 시  =>  Process to Machine Mapping set 에서 Process ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxElement].ptmmProcess = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'PPPtoFileProcess') { //Process 변경시 =>  PPP to File Array 에서 Process ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].process = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'PPPtoKeyProcess') { //Process 변경시 =>  PPP to Key Value 에서 Process ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].process = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processprodesign') { //ProcessDesign 변경 시  =>   Process 에서 Process Design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].prodesign = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'toportprocess') { //ProcessDesign 변경 시  =>   Service Instance to port prototype 에서 process design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].process = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'MGDproD') { //ProcessDesign 변경 시  =>   MethodGD 에서 process design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].processD = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'EGDproD') { //ProcessDesign 변경 시  =>   EventGD 에서 process design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].processD = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'FGDproD') { //ProcessDesign 변경 시  =>   FieldGD 에서 process design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].processD = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'prodesignexecutable') { //Executable 변경시 =>  ProcessDesign 에서  Executable ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxElement].executableref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processexecut') { //Executable 변경시 =>  Process 에서 Executable ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].execut = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processstartup') { // Startup Config 변경시 =>  Process 에서 Startup Config ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].dependent[tableLine[1]].startupConfigRef = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'processdetermin') { //Deterministric  변경시 =>  Process 에서 Deterministric ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxElement].determin = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'event') { //Service Deployment 변경시 =>  ServiceInterface Deploymant에서에서 serviceinterface Deploymant Event Deployment ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'EventD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventG[tableLine[2]].event[tableLine[1]].event = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventG[tableLine[2]].event[tableLine[1]].event.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventG[tableLine[2]].event[tableLine[1]].event = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'requiredDeploy') { //Service Deployment 변경시 => Required SomeIP Service Instance 에서 Service Deployment ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].deployref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'requiredMethod') { //Service Deployment 변경시 =>  Required SomeIP Service Instance 에서 Service Deployment Method Deployment ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'MethodD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].method[tableLine[1]].method = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].method[tableLine[1]].method.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].method[tableLine[1]].method = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'requiredEventG') { //Service Deployment 변경시 =>  Required SomeIP Service Instance 에서 Service Deployment Event Group ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'EventG') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].requiredevent[tableLine[1]].eventG = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].requiredevent[tableLine[1]].eventG.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].requiredevent[tableLine[1]].eventG = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'providDeploy') { //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deployment ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].deployref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'proviedEventP') { //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의  eventD ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'EventD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventP[tableLine[1]].event = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventP[tableLine[1]].event.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventP[tableLine[1]].event = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'proviedMethod') { //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의 MethodD ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'MethodD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].method[tableLine[1]].method = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].method[tableLine[1]].method.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].method[tableLine[1]].method = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'providEventG') { //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의 eventG ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'EventG') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventG[tableLine[1]].eventG = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventG[tableLine[1]].eventG.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventG[tableLine[1]].eventG = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'pporttable') { //ServiceInterface 변경 시 =>  SW Components 에서 ServiceInterface ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].pport[tableLine[1]].interface = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'prporttable') { //ServiceInterface 변경 시 =>  SW Components 에서 ServiceInterface ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].prport[tableLine[1]].interface = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'rporttable') { //ServiceInterface 변경 시 =>  SW Components 에서 ServiceInterface ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxElement].rport[tableLine[1]].interface = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'service') { //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서 serviceInterface ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].service = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'serviceEventD') { //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서 serviceinterface Event ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'serviceEventD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventD[tableLine[1]].event = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventD[tableLine[1]].event.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].eventD[tableLine[1]].event = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'serviceMethodD') { //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서 serviceinterface Method ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'serviceMethodD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].methodD[tableLine[1]].method = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].methodD[tableLine[1]].method.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].methodD[tableLine[1]].method = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'field') { //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서 serviceinterface Field ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'field') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].fieldD[tableLine[1]].field = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].fieldD[tableLine[1]].field.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxElement].fieldD[tableLine[1]].field = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'MGDserviceI') { //ServiceInterface 변경 시 =>  MethodGD에서 serviceinterface Method ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'serviceMethodD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].SIMethod = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].SIMethod.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxElement].SIMethod = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'EGDserviceI') { //ServiceInterface 변경 시 =>  EventGD에서 serviceinterface Event ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'serviceEventD') {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].SIEvent = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].SIEvent.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxElement].SIEvent = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'FGDserviceI') { //ServiceInterface 변경 시 =>  FieldGD에서 serviceinterface Field ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.changeName == 'field') {\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].SIField = payload.path + '/' + payload.name + '/' + payload.listname\r\n    //                 } else {\r\n    //                     intablename = state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].SIField.split('/')\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxElement].SIField = payload.path + '/' + payload.name + '/' + intablename[intablename.length - 1]\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'requiredClient') { //Client event 변경시 => Required SomeIP Service Instance 에서 Client event ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].requiredevent[tableLine[1]].client = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'providServer') { //Server event 변경시 =>  Provided SomeIP Service Instance 에서 Server ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].eventG[tableLine[1]].server = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'requiredSomeIPC') { //SomeIP Client 변경시 => Required SomeIP Service Instance 에서 SomeIP Client ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxElement].someipclient = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'providSomeIPS') { //SomeIP Server 변경시 =>  Provided SomeIP Service Instance 에서 SomIP Server ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxElement].someipserver = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'tomachinServiceIns') { //Required SomeIP 변경시 =>  SomeIPtoMachineMapping 에서 Required SomeIP ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxElement].siref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'toportservice') { //Required Provided 변경시 => Service Instance to port prototype 에서 provided,required ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].selectServiceIns == \"PROVIDED-SOMEIP-SERVICE-INSTANCE\" && payload.req == false) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].serviceIns = payload.path + '/' + payload.name\r\n    //                 } else if (state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].selectServiceIns == \"REQUIRED-SOMEIP-SERVICE-INSTANCE\" && payload.req == true) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxElement].serviceIns = payload.path + '/' + payload.name\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'FGProvide') { //Provided 변경시 =>  Field Grant 에서 Provided ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxElement].provide = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'EGProvide') { //Provided 변경시 =>  Event Grant 에서 Provided ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventG[idxElement].provide = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'MGProvide') { //Provided 변경시 =>  Method Grant 에서 Provided ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxElement].provide = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'methoderrors') { // Error 변경시 => ServiceInterface 에서 Error ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].methods[tableLine[2]].errorSet[tableLine[1]].error = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'error') { //Error 변경시 =>  Error Set 에서 Error  ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxElement].errorref[tableLine[1]].error = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'methoderror') { // Error set 변경시 =>  ServiceInterface 에서 ErrorSet ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxElement].methods[tableLine[2]].error[tableLine[1]].error = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'errordomain') { //ErrorDomain 변경시 =>  Error 에서 Error Domain ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.Error[idxElement].errorDref = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'PPPtoFileArray') { //Per File Array 변경시 =>  PPP to File Array 에서 Per File Array ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxElement].fileArray = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'PPPtoKeyValue') { //per Key Value Data 변경시 =>  PPP to Key Value 에서 per Key Value Data ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxElement].keyValue = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'FieldGD') { //Field Grant Design 변경시 =>  Field Grant 에서 Field Grant Design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxElement].fieldD = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'EventGD') { //Event Grant Design 변경시 =>  Event Grant 에서 Event Grant Design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventG[idxElement].eventD = payload.path + '/' + payload.name\r\n    //             } else if (tableLine[0] == 'MethodGD') { //Method Grant Design 변경시 =>  Method Grant 에서 Method Grant Design ref할때\r\n    //                 idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxElement].methodD = payload.path + '/' + payload.name\r\n    //             }\r\n    //         })\r\n    //     },\r\n    //     isintoErrorList(state, payload) {\r\n    //         state.errorList.forEach((item, i) => {\r\n    //             if (item.uuid == payload.uuid) {\r\n    //                 if (item.error == 'name' && payload.name != '') {\r\n    //                     state.errorList.splice(i, 1)\r\n    //                 }\r\n    //                 if (item.error == 'path' && payload.path != '') {\r\n    //                     state.errorList.splice(i, 1)\r\n    //                 }\r\n    //                 if (item.error == 'Name Space') {\r\n    //                     var namespace = payload.namespace.split(',')\r\n    //                     var isTrue = true\r\n    //                     namespace.forEach((item, i) => {\r\n    //                         if (!(item == '' && i == namespace.length - 1)) {\r\n    //                             var strSymble = item.split('/')\r\n    //                             console.log(strSymble)\r\n    //                             if (strSymble.length != 2 || strSymble[0] == '' || strSymble[0] == undefined || strSymble[1] == '' || strSymble[1] == undefined) {\r\n    //                                 isTrue = false\r\n    //                             }\r\n    //                         }\r\n    //                     })\r\n    //                     if (isTrue) {\r\n    //                         state.errorList.splice(i, 1)\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         })\r\n    //     },\r\n\r\n    //     deleteRefTable(state, payload) {\r\n    //         //console.log(payload.deletItemList)\r\n    //         if (payload.deleteTab) {\r\n    //             if (payload.deleteName == 'ModuleIns') { //Machine 변경시 =>  Process 에서 Machine -> Module Instantiation ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach((ele, i) => {\r\n    //                     if (ele.dependent.length > 0) {\r\n    //                         ele.dependent.forEach((data, n) => {\r\n    //                             if (data.resourceRef == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                                 var idx = this.getters.getconnectLineNum(ele.uuid + '/processresorce-' + n)\r\n    //                                 data.resourceRef = null\r\n    //                                 if (idx != -1) {\r\n    //                                     EventBus.$emit('delete-line', idx)\r\n    //                                     this.commit('deletConnectionline', { startnum: idx })\r\n    //                                 }\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[i].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (payload.deleteName == 'modeDeclar') { //Mode Declaration  변경시 =>  Process 에서  Module Declaration-> mode Declarations ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach((ele, i) => {\r\n    //                     if (ele.dependent.length > 0) {\r\n    //                         ele.dependent.forEach((data, n) => {\r\n    //                             if (data.functionItem != null) {\r\n    //                                 data.functionItem.forEach((item, f) => {\r\n    //                                     if (item.targetMode == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                                         var idx = this.getters.getconnectLineNum(ele.uuid + '/fgtarget-' + f + '-' + n)\r\n    //                                         item.targetMode = null\r\n    //                                         if (idx != -1) {\r\n    //                                             EventBus.$emit('delete-line', idx)\r\n    //                                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                                         }\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[i].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (payload.deleteName == 'methodSI') {\r\n    //                 //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서에서 serviceinterface Method ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach((ele, i) => {\r\n    //                         if (ele.methodD.length > 0) {\r\n    //                             ele.methodD.forEach((item, n) => {\r\n    //                                 if (item.method == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                                     var idx = this.getters.getconnectLineNum(ele.uuid + '/serviceMethodD-' + n)\r\n    //                                     item.method = null\r\n    //                                     if (idx != -1) {\r\n    //                                         EventBus.$emit('delete-line', idx)\r\n    //                                         this.commit('deletConnectionline', { startnum: idx })\r\n    //                                     }\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                     //ServiceInterface 변경 시 =>  MethodGD에서에서 serviceinterface Event ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodGD.forEach((ele, i) => {\r\n    //                     if (ele.SIMethod == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                         var idx = this.getters.getconnectLineNum(ele.uuid + '/MGDserviceI')\r\n    //                         ele.SIMethod = null\r\n    //                         if (idx != -1) {\r\n    //                             EventBus.$emit('delete-line', idx)\r\n    //                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                         }\r\n    //                         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children[i].validation = true\r\n    //                         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].validation = true\r\n    //                         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                         state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                     }\r\n    //                 })\r\n    //             } else if (payload.deleteName == 'eventG') {\r\n    //                 //Service Deployment 변경시 =>  Required SomeIP Service Instance 에서 Service Deployment Event Group ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.forEach((ele, i) => {\r\n    //                         if (ele.requiredevent.length > 0) {\r\n    //                             ele.requiredevent.forEach((item, n) => {\r\n    //                                 if (item.eventG == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                                     var idx = this.getters.getconnectLineNum(ele.uuid + '/requiredEventG-' + n)\r\n    //                                     item.eventG = null\r\n    //                                     if (idx != -1) {\r\n    //                                         EventBus.$emit('delete-line', idx)\r\n    //                                         this.commit('deletConnectionline', { startnum: idx })\r\n    //                                     }\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                     //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의 eventG ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach((ele, i) => {\r\n    //                     if (ele.eventG.length > 0) {\r\n    //                         ele.eventG.forEach((item, n) => {\r\n    //                             if (item.eventG == (payload.path + '/' + payload.name + '/' + payload.tabName)) {\r\n    //                                 var idx = this.getters.getconnectLineNum(ele.uuid + '/providEventG-' + n)\r\n    //                                 item.eventG = null\r\n    //                                 if (idx != -1) {\r\n    //                                     EventBus.$emit('delete-line', idx)\r\n    //                                     this.commit('deletConnectionline', { startnum: idx })\r\n    //                                 }\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[i].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             } else if (payload.deleteName == 'machineD') { //EthernetCluster 변경기 => MachineDesign에서 communication-C, service discover -> endpoint ref할때\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.forEach((ele, i) => {\r\n    //                     if (ele.connector.length > 0) {\r\n    //                         ele.connector.forEach(item => {\r\n    //                             if (item.endpoint != null) {\r\n    //                                 var tabName = item.endpoint.split('/')\r\n    //                                 if ((item.endpoint == (payload.path + '/' + payload.name + '/' + payload.tabName) && payload.deletTab == '3') ||\r\n    //                                     ((tabName[0] + '/' + tabName[1]) == (payload.path + '/' + payload.name) && payload.deletTab == '2' && (tabName[2] + '/' + tabName[3] == payload.tabName)) ||\r\n    //                                     ((tabName[0] + '/' + tabName[1]) == (payload.path + '/' + payload.name) && payload.deletTab == '1' && (tabName[2] == payload.tabName))) {\r\n    //                                     item.endpoint = null\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if (ele.servicediscover.length > 0) {\r\n    //                         ele.servicediscover.forEach(item => {\r\n    //                             if (item.msia != null) {\r\n    //                                 var tabName = item.msias.split('/')\r\n    //                                 if ((item.msia == (payload.path + '/' + payload.name + '/' + payload.tabName) && payload.deletTab == '3') ||\r\n    //                                     ((tabName[0] + '/' + tabName[1]) == (payload.path + '/' + payload.name) && payload.deletTab == '2' && (tabName[2] + '/' + tabName[3] == payload.tabName)) ||\r\n    //                                     ((tabName[0] + '/' + tabName[1]) == (payload.path + '/' + payload.name) && payload.deletTab == '1' && (tabName[2] == payload.tabName))) {\r\n    //                                     item.msia = null\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             }\r\n    //         } else {\r\n    //             payload.deletItemList.forEach(deleteList => {\r\n    //                 if (payload.deleteName == 'functionG') { //Machine 변경시 =>  Process 에서 Machine -> Function Group ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.forEach((ele, i) => {\r\n    //                         if (ele.dependent.length > 0) {\r\n    //                             ele.dependent.forEach((data, n) => {\r\n    //                                 if (data.functionItem != null) {\r\n    //                                     data.functionItem.forEach((item, f) => {\r\n    //                                         if (item.contextMode == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                             var idx = this.getters.getconnectLineNum(ele.uuid + '/fgcontext-' + f + '-' + n)\r\n    //                                             item.contextMode = null\r\n    //                                             if (idx != -1) {\r\n    //                                                 EventBus.$emit('delete-line', idx)\r\n    //                                                 this.commit('deletConnectionline', { startnum: idx })\r\n    //                                             }\r\n    //                                             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[i].validation = true\r\n    //                                             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                                             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                                             state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                         }\r\n    //                                     })\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 } else if (payload.deleteName == 'CommunicationC') {\r\n    //                     //MachineDesign 변경시 =>   EthernetCluster에서 MachineDesign -> Communication Connector ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.forEach((ele, i) => {\r\n    //                             if (ele.conditional.length > 0) {\r\n    //                                 ele.conditional.forEach((condi, c) => {\r\n    //                                     if (condi.channel != null) {\r\n    //                                         condi.channel.forEach((channel, n) => {\r\n    //                                             if (channel.comconnect != null) {\r\n    //                                                 channel.comconnect.forEach((com, v) => {\r\n    //                                                     if (com.connector == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                                         var idx = this.getters.getconnectLineNum(ele.uuid + '/comconet-' + v + '-' + n + '-' + c)\r\n    //                                                         com.connector = null\r\n    //                                                         if (idx != -1) {\r\n    //                                                             EventBus.$emit('delete-line', idx)\r\n    //                                                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                                                         }\r\n    //                                                         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children[i].validation = true\r\n    //                                                         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].validation = true\r\n    //                                                         state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                                                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                                     }\r\n    //                                                 })\r\n    //                                             }\r\n    //                                         })\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                         //MachineDesign 변경시 =>   SomeIPtoMachineMapping 에서 MachineDesgin의 Communication Connected ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.forEach((ele, i) => {\r\n    //                             if (ele.ccref == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                 var idx = this.getters.getconnectLineNum(ele.uuid + '/tomachinCC')\r\n    //                                 ele.ccref = null\r\n    //                                 if (idx != -1) {\r\n    //                                     EventBus.$emit('delete-line', idx)\r\n    //                                     this.commit('deletConnectionline', { startnum: idx })\r\n    //                                 }\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children[i].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //                             }\r\n    //                         }) //SW Component 변경시 =>   Service Instance to port prototype 에서 SWComponent port ref할때\r\n    //                 } else if (payload.deleteName == 'pPort' || payload.deleteName == 'prPort' || payload.deleteName == 'rPort') {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.forEach((ele, i) => {\r\n    //                         if ((ele.selectPort == 'P-PORT-PROTOTYPE' && payload.deleteName == 'pPort' && ele.porttype == (payload.path + '/' + payload.name + '/' + deleteList.name)) ||\r\n    //                             (ele.selectPort == 'R-PORT-PROTOTYPE' && payload.deleteName == 'rPort' && ele.porttype == (payload.path + '/' + payload.name + '/' + deleteList.name)) ||\r\n    //                             (ele.selectPort == 'PR-PORT-PROTOTYPE' && payload.deleteName == 'prPort' && ele.porttype == (payload.path + '/' + payload.name + '/' + deleteList.name))) {\r\n    //                             var idx = this.getters.getconnectLineNum(ele.uuid + '/toportport')\r\n    //                             ele.porttype = null\r\n    //                             if (idx != -1) {\r\n    //                                 EventBus.$emit('delete-line', idx)\r\n    //                                 this.commit('deletConnectionline', { startnum: idx })\r\n    //                             }\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children[i].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].validation = true\r\n    //                         }\r\n    //                     })\r\n    //                     if (payload.deleteName == 'prPort') {\r\n    //                         //SWComponemt 변경 시 =>  PERPPtoFileArray에서 SWComponemt PR port ref할때\r\n    //                         state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.forEach((ele, i) => {\r\n    //                                 if (ele.port == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                     var idx = this.getters.getconnectLineNum(ele.uuid + '/PPPtoFilePRPort')\r\n    //                                     ele.port = null\r\n    //                                     if (idx != -1) {\r\n    //                                         EventBus.$emit('delete-line', idx)\r\n    //                                         this.commit('deletConnectionline', { startnum: idx })\r\n    //                                     }\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             })\r\n    //                             //SWComponemt 변경 시 =>  PERPPtoKeyValue에서 SWComponemt PR port ref할때\r\n    //                         state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.forEach((ele, i) => {\r\n    //                             if (ele.port == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                 var idx = this.getters.getconnectLineNum(ele.uuid + '/PPPtoKeyPRPort')\r\n    //                                 ele.port = null\r\n    //                                 if (idx != -1) {\r\n    //                                     EventBus.$emit('delete-line', idx)\r\n    //                                     this.commit('deletConnectionline', { startnum: idx })\r\n    //                                 }\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children[i].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 } else if (payload.deleteName == 'eventSI') {\r\n    //                     //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서에서 serviceinterface Event ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach((ele, i) => {\r\n    //                             if (ele.eventD.length > 0) {\r\n    //                                 ele.eventD.forEach((item, n) => {\r\n    //                                     if (item.event == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                         var idx = this.getters.getconnectLineNum(ele.uuid + '/serviceEventD-' + n)\r\n    //                                         item.event = null\r\n    //                                         if (idx != -1) {\r\n    //                                             EventBus.$emit('delete-line', idx)\r\n    //                                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                                         }\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[i].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                         //ServiceInterface 변경 시 =>  EventGD에서에서 serviceinterface Event ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.EventGD.forEach((ele, i) => {\r\n    //                         if (ele.SIEvent == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                             var idx = this.getters.getconnectLineNum(ele.uuid + '/EGDserviceI')\r\n    //                             ele.SIEvent = null\r\n    //                             if (idx != -1) {\r\n    //                                 EventBus.$emit('delete-line', idx)\r\n    //                                 this.commit('deletConnectionline', { startnum: idx })\r\n    //                             }\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children[i].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].validation = true\r\n    //                         }\r\n    //                     })\r\n    //                 } else if (payload.deleteName == 'fieldSI') {\r\n    //                     //ServiceInterface 변경 시 =>  ServiceInterface Deploymant에서에서 serviceinterface Field ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach((ele, i) => {\r\n    //                             if (ele.fieldD.length > 0) {\r\n    //                                 ele.fieldD.forEach((item, n) => {\r\n    //                                     if (item.field == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                         var idx = this.getters.getconnectLineNum(ele.uuid + '/field-' + n)\r\n    //                                         item.field = null\r\n    //                                         if (idx != -1) {\r\n    //                                             EventBus.$emit('delete-line', idx)\r\n    //                                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                                         }\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[i].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                         //ServiceInterface 변경 시 =>  FieldGD에서에서 serviceinterface Field ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].IamG.FieldGD.forEach((ele, i) => {\r\n    //                         if (ele.SIField == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                             var idx = this.getters.getconnectLineNum(ele.uuid + '/FGDserviceI')\r\n    //                             ele.SIField = null\r\n    //                             if (idx != -1) {\r\n    //                                 EventBus.$emit('delete-line', idx)\r\n    //                                 this.commit('deletConnectionline', { startnum: idx })\r\n    //                             }\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children[i].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                             state.navigatorList[state.openProjectIndex].validation = true\r\n    //                         }\r\n    //                     })\r\n    //                 } else if (payload.deleteName == 'eventD') {\r\n    //                     //Service Deployment 변경시 =>  ServiceInterface Deploymant에서에서 serviceinterface Deploymant Event Deployment ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.forEach((ele, i) => {\r\n    //                             if (ele.eventG.length > 0) {\r\n    //                                 ele.eventG.forEach((item, n) => {\r\n    //                                     if (item.event != null) {\r\n    //                                         item.event.forEach((data, d) => {\r\n    //                                             if (data.event == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                                 var idx = this.getters.getconnectLineNum(ele.uuid + '/event-' + d + '-' + n)\r\n    //                                                 data.event = null\r\n    //                                                 if (idx != -1) {\r\n    //                                                     EventBus.$emit('delete-line', idx)\r\n    //                                                     this.commit('deletConnectionline', { startnum: idx })\r\n    //                                                 }\r\n    //                                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[i].validation = true\r\n    //                                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                                                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                             }\r\n    //                                         })\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n    //                         })\r\n    //                         //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의  eventD ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach((ele, i) => {\r\n    //                         if (ele.eventP.length > 0) {\r\n    //                             ele.eventP.forEach((item, n) => {\r\n    //                                 if (item.event == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                     var idx = this.getters.getconnectLineNum(ele.uuid + '/proviedEventP-' + n)\r\n    //                                     item.event = null\r\n    //                                     if (idx != -1) {\r\n    //                                         EventBus.$emit('delete-line', idx)\r\n    //                                         this.commit('deletConnectionline', { startnum: idx })\r\n    //                                     }\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 } else if (payload.deleteName == 'methodD') {\r\n    //                     //Service Deployment 변경시 =>  Required SomeIP Service Instance 에서 Service Deployment Method Deployment ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.forEach((ele, i) => {\r\n    //                             if (ele.method.length > 0) {\r\n    //                                 ele.method.forEach((item, n) => {\r\n    //                                     if (item.method == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                         var idx = this.getters.getconnectLineNum(ele.uuid + '/requiredMethod-' + n)\r\n    //                                         item.method = null\r\n    //                                         if (idx != -1) {\r\n    //                                             EventBus.$emit('delete-line', idx)\r\n    //                                             this.commit('deletConnectionline', { startnum: idx })\r\n    //                                         }\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[i].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                         state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                     }\r\n    //                                 })\r\n    //                             }\r\n\r\n    //                         })\r\n    //                         //Service Deployment 변경시 =>  Provided SomeIP Service Instance 에서 Service Deploment의 MethodD ref할때\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.forEach((ele, i) => {\r\n    //                         if (ele.method != null) {\r\n    //                             ele.method.forEach((item, n) => {\r\n    //                                 if (item.method == (payload.path + '/' + payload.name + '/' + deleteList.name)) {\r\n    //                                     var idx = this.getters.getconnectLineNum(ele.uuid + '/proviedMethod-' + n)\r\n    //                                     item.method = null\r\n    //                                     if (idx != -1) {\r\n    //                                         EventBus.$emit('delete-line', idx)\r\n    //                                         this.commit('deletConnectionline', { startnum: idx })\r\n    //                                     }\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[i].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                                 }\r\n    //                             })\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     },\r\n    //     deleteRefElement(state, payload) { // 지울 element를  ref하는곳 찾기 => 화살표의 끝\r\n    //         var indices = this.getters.getchangenamelist(payload.uuid)\r\n    //             //console.log('==deleteRefElement==' + indices)\r\n\r\n    //         for (let i = 0; i < indices.length; i++) {\r\n    //             var startUUID = state.connectionLine[state.openProjectIndex].start[indices[i]].split('/')\r\n    //             var tableLine = startUUID[1].split('-')\r\n\r\n    //             if (tableLine[0] == 'ddpccompu') { // implementation 에서 compu method ref할때\r\n    //                 var idxImpleCom = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxImpleCom].ddpc[tableLine[1]].compumethod = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxImpleCom].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'ddpcdata') { // implementation 에서 data constr ref할때\r\n    //                 var idxImpleDa = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxImpleDa].ddpc[tableLine[1]].dataconstr = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxImpleDa].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.DateType_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'typeref') { // implementation 에서 implementation ref할때\r\n    //                 var idxImpletype = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.uuid != startUUID[0]) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxImpletype].typeref = null\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxImpletype].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'templateType') { // implementation 에서 implementation ref할때\r\n    //                 var idxImpletemp = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.uuid != startUUID[0]) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxImpletemp].templatetype = null\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxImpletemp].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'idtetable') { // implementation 에서 implementation ref할때\r\n    //                 var idxImpleImple = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.uuid != startUUID[0]) {\r\n    //                     state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType[idxImpleImple].idtelement[tableLine[1]].typeref = ''\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children[idxImpleImple].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.DateType_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'machinedesign') { // machin에서 machinDesign ref할때\r\n    //                 var idxMachineD = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxMachineD].machinedesign = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children[idxMachineD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'hwelement') { // machin에서 HWElement ref할때\r\n    //                 var idxMachineHWE = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxMachineHWE].hwelement[tableLine[1]].hwelement = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children[idxMachineHWE].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'functiontable') { // machin에서 Mode Declaration ref할때\r\n    //                 var idxMachineMD = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.Machine[idxMachineMD].functiongroup[tableLine[1]].type = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children[idxMachineMD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'cctable') { // machinDesign에서 EthernetCluster Endpoint ref할때\r\n    //                 var idxMachineDCC = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxMachineDCC].connector[tableLine[1]].endpoint = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children[idxMachineDCC].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'sdctable') { // machinDesign에서 EthernetCluster Endpoint ref할때\r\n    //                 var idxMachineDSDC = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.MachineDesign[idxMachineDSDC].servicediscover[tableLine[1]].msia = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children[idxMachineDSDC].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'comconet') { // EthernetCluster에서 MachineDesign -> Communication Connector ref할때\r\n    //                 var idxEthernet = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster[idxEthernet].conditional[tableLine[3]].channel[tableLine[2]].comconnect[tableLine[1]].connector = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children[idxEthernet].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Machines_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'machinefromptmm') { // Process to Machine Mapping set 에서 Machine ref할때\r\n    //                 var idxPTMMMachine = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxPTMMMachine].ptmmMachine = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children[idxPTMMMachine].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processfromptmm') { // Process to Machine Mapping set 에서 Process ref할때\r\n    //                 var idxPTMMProcess = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping[idxPTMMProcess].ptmmProcess = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children[idxPTMMProcess].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'pporttable') { // SW Components 에서 ServiceInterface ref할때\r\n    //                 var idxpport = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxpport].pport[tableLine[1]].interface = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children[idxpport].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'prporttable') { // SW Components 에서 ServiceInterface ref할때\r\n    //                 var idxprport = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxprport].prport[tableLine[1]].interface = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children[idxprport].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'rporttable') { // SW Components 에서 ServiceInterface ref할때\r\n    //                 var idxrport = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents[idxrport].rport[tableLine[1]].interface = ''\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children[idxrport].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'applicationtyperef') { // Executable 에서 SW Components ref할때\r\n    //                 var idxExecutable = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable[idxExecutable].applicationtyperef = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].children[idxExecutable].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'prodesignexecutable') { // ProcessDesign 에서  Executable ref할때\r\n    //                 var idxProDExecutable = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign[idxProDExecutable].executableref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].children[idxProDExecutable].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processprodesign') { // Process 에서 Process Design ref할때\r\n    //                 var idxProProDesign = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProProDesign].prodesign = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProProDesign].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processdetermin') { // Process 에서 Deterministric ref할때\r\n    //                 var idxProDetermin = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProDetermin].determin = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProDetermin].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processexecut') { // Process 에서 Executable ref할때\r\n    //                 var idxProExe = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProExe].execut = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProExe].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processmodedeclar') { // Process 에서 Mode Declaration ref할때\r\n    //                 var idxProMod = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProMod].machinetype = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProMod].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processstartup') { // Process 에서 Startup Config ref할때\r\n    //                 var idxProStart = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProStart].dependent[tableLine[1]].startupConfigRef = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProStart].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'processresorce') { // Process 에서 Machine -> Module Instantiation ref할때\r\n    //                 var idxProMI = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProMI].dependent[tableLine[1]].resourceRef = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProMI].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'fgcontext') { // Process 에서 Machine -> Function Group ref할때\r\n    //                 var idxProMachine = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProMachine].dependent[tableLine[2]].functionItem[tableLine[1]].contextMode = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProMachine].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'fgtarget') { // Process 에서  Module Declaration-> mode Declarations ref할때\r\n    //                 var idxProMD = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process[idxProMD].dependent[tableLine[2]].functionItem[tableLine[1]].targetMode = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children[idxProMD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'errordomain') { // Error 에서 Error Domain ref할때\r\n    //                 var idxErrorD = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.Error[idxErrorD].errorDref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].children[idxErrorD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'error') { // Error Set 에서 Error  ref할때\r\n    //                 var idxError = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ErrorSet[idxError].errorref[tableLine[1]].error = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].children[idxError].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'service') { // ServiceInterface Deploymant에서 serviceInterface ref할때\r\n    //                 var idxSIDservice = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxSIDservice].service = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxSIDservice].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'event') { // ServiceInterface Deploymant에서에서 serviceinterface Deploymant Event Deployment ref할때\r\n    //                 var idxSIDeventG = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 if (payload.uuid != startUUID[0]) {\r\n    //                     state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxSIDeventG].eventG[tableLine[2]].event[tableLine[1]].event = null\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxSIDeventG].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                     state.navigatorList[state.openProjectIndex].validation = true\r\n    //                 }\r\n    //             } else if (tableLine[0] == 'serviceEventD') { // ServiceInterface Deploymant에서에서 serviceinterface Event ref할때\r\n    //                 var idxSIDeventD = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxSIDeventD].eventD[tableLine[1]].event = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxSIDeventD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'serviceMethodD') { // ServiceInterface Deploymant에서에서 serviceinterface Method ref할때\r\n    //                 var idxSIDMethodD = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxSIDMethodD].methodD[tableLine[1]].method = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxSIDMethodD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'field') { // ServiceInterface Deploymant에서에서 serviceinterface Field ref할때\r\n    //                 var idxSIDFieldD = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment[idxSIDFieldD].fieldD[tableLine[1]].field = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children[idxSIDFieldD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'Eventtable') { // ServiceInterface 에서 Implementation ref할때\r\n    //                 var idxSIevent = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxSIevent].events[tableLine[1]].type = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxSIevent].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'Fieldtable') { // ServiceInterface 에서 Implementation ref할때\r\n    //                 var idxSIfield = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxSIfield].fields[tableLine[1]].type = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxSIfield].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'argtable') { // ServiceInterface 에서 Implementation ref할때\r\n    //                 var idxSIImp = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxSIImp].methods[tableLine[2]].argument[tableLine[1]].type = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxSIImp].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'methoderrors') { // ServiceInterface 에서 Error ref할때\r\n    //                 var idxSIError = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxSIError].methods[tableLine[2]].errorSet[tableLine[1]].error = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxSIError].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'methoderror') { // ServiceInterface 에서 ErrorSet ref할때\r\n    //                 var idxSIErrorS = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInterface[idxSIErrorS].methods[tableLine[2]].error[tableLine[1]].error = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children[idxSIErrorS].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'tomachinCC') { // SomeIPtoMachineMapping 에서 MachineDesgin의 Communication Connected ref할때\r\n    //                 var idxSIMMCC = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxSIMMCC].ccref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children[idxSIMMCC].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'tomachinServiceIns') { // SomeIPtoMachineMapping 에서 Required SomeIP ref할때\r\n    //                 var idxSIRequired = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine[idxSIRequired].siref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children[idxSIRequired].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'toportport') { // Service Instance to port prototype 에서 SWComponent port ref할때\r\n    //                 var idxtoportport = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxtoportport].selectPort = null\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxtoportport].porttype = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children[idxtoportport].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'toportprocess') { // Service Instance to port prototype 에서 process design ref할때\r\n    //                 var idxtoportproess = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxtoportproess].process = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children[idxtoportproess].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'toportservice') { // Service Instance to port prototype 에서 provided,required ref할때\r\n    //                 var idxtoportservice = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxtoportservice].selectServiceIns = null\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype[idxtoportservice].serviceIns = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children[idxtoportservice].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'requiredDeploy') { // Required SomeIP Service Instance 에서 Service Deployment ref할때\r\n    //                 var idxRequiredD = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxRequiredD].deployref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxRequiredD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'requiredSomeIPC') { // Required SomeIP Service Instance 에서 SomeIP Client ref할때\r\n    //                 var idxRequiredS = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxRequiredS].someipclient = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxRequiredS].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'requiredMethod') { // Required SomeIP Service Instance 에서 Service Deployment Method Deployment ref할때\r\n    //                 var idxRequiredM = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxRequiredM].method[tableLine[1]].method = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxRequiredM].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'requiredEventG') { // Required SomeIP Service Instance 에서 Service Deployment Event Group ref할때\r\n    //                 var idxRequiredE = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxRequiredE].requiredevent[tableLine[1]].eventG = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxRequiredE].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'requiredClient') { // Required SomeIP Service Instance 에서 Client event ref할때\r\n    //                 var idxRequiredC = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP[idxRequiredC].requiredevent[tableLine[1]].client = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children[idxRequiredC].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'providDeploy') { // Provided SomeIP Service Instance 에서 Service Deployment ref할때\r\n    //                 var idxProvidD = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidD].deployref = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'providSomeIPS') { // Provided SomeIP Service Instance 에서 SomIP Server ref할때\r\n    //                 var idxProvidSS = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidSS].someipserver = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidSS].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'proviedEventP') { // Provided SomeIP Service Instance 에서 Service Deploment의  eventD ref할때\r\n    //                 var idxProvidEP = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidEP].eventP[tableLine[1]].event = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidEP].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'proviedMethod') { // Provided SomeIP Service Instance 에서 Service Deploment의 MethodD ref할때\r\n    //                 var idxProvidM = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidM].method[tableLine[1]].method = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidM].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'providEventG') { // Provided SomeIP Service Instance 에서 Service Deploment의 eventG ref할때\r\n    //                 var idxProvidEG = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidEG].eventG[tableLine[1]].eventG = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidEG].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'providServer') { // Provided SomeIP Service Instance 에서 Server ref할때\r\n    //                 var idxProvidS = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP[idxProvidS].eventG[tableLine[1]].server = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children[idxProvidS].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Service_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             }\r\n    //             /////////\r\n    //             else if (tableLine[0] == 'PPPtoFileArray') { // PPP to File Array에서 PERSISTENCY-FILE-ARRAY ref할때\r\n    //                 var idxPPPtoFileArray = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxPPPtoFileArray].fileArray = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children[idxPPPtoFileArray].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'PPPtoFilePRPort') { // PPP to File Array에서 PR port ref할때\r\n    //                 var idxPPPtoFilePort = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxPPPtoFilePort].port = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children[idxPPPtoFilePort].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'PPPtoFileProcess') { // PPP to File Array에서 Process ref할때\r\n    //                 var idxPPPtoFileProce = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray[idxPPPtoFileProce].process = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children[idxPPPtoFileProce].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'PPPtoKeyValue') { // PPP to Key Value에서 PERSISTENCY-FILE-ARRAY ref할때\r\n    //                 var idxPPPtoKeyValue = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxPPPtoKeyValue].keyValue = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children[idxPPPtoKeyValue].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'PPPtoKeyPRPort') { // PPP to Key Value에서 PR port ref할때\r\n    //                 var idxPPPtoKeyPort = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxPPPtoKeyPort].port = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children[idxPPPtoKeyPort].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'PPPtoKeyProcess') { // PPP to Key Value에서 Process ref할때\r\n    //                 var idxPPPtoKeyProce = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue[idxPPPtoKeyProce].process = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children[idxPPPtoKeyProce].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'FGDproD') { // Field Grant Design에서 Process Design ref할때\r\n    //                 var idxFGDPro = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxFGDPro].processD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children[idxFGDPro].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'EGDproD') { // Event Grant Design에서 Process Design ref할때\r\n    //                 var idxEGDPro = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxEGDPro].processD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children[idxEGDPro].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'MGDproD') { // Method Grant Design에서 Process Design ref할때\r\n    //                 var idxMGDPro = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxMGDPro].processD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children[idxMGDPro].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'FGDserviceI') { // Field Grant Design에서 Service Interface Field ref할때\r\n    //                 var idxFGDSI = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldGD[idxFGDSI].SIField = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children[idxFGDSI].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'EGDserviceI') { // Event Grant Design에서 Service Interface Event ref할때\r\n    //                 var idxEGDSI = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventGD[idxEGDSI].SIEvent = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children[idxEGDSI].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'MGDserviceI') { // Method Grant Design에서 Service Interface Method ref할때\r\n    //                 var idxMGDSI = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodGD[idxMGDSI].SIMethod = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children[idxMGDSI].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'FieldGD') { // Field Grant 에서 Field Grant Design ref할때\r\n    //                 var idxFGD = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxFGD].fieldD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children[idxFGD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'EventGD') { // Event Grant 에서 Event Grant Design ref할때\r\n    //                 var idxEGD = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventG[idxEGD].eventD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children[idxEGD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'MethodGD') { // Method Grant 에서 Method Grant Design ref할때\r\n    //                 var idxMGD = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxMGD].methodD = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children[idxMGD].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'FGProvide') { // Field Grant 에서 Provide SomeIP ref할때\r\n    //                 var idxFGProvide = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.FieldG[idxFGProvide].provide = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children[idxFGProvide].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'EGProvide') { // Event Grant 에서 Provide SomeIP ref할때\r\n    //                 var idxEGProvide = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.EventG[idxEGProvide].provide = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children[idxEGProvide].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             } else if (tableLine[0] == 'MGProvide') { // Method Grant 에서 Provide SomeIP ref할때\r\n    //                 var idxMGProvide = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === startUUID[0])\r\n    //                 state.SAHLProject[state.openProjectIndex].IamG.MethodG[idxMGProvide].provide = null\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children[idxMGProvide].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].children[constant.Platform_index].validation = true\r\n    //                 state.navigatorList[state.openProjectIndex].validation = true\r\n    //             }\r\n    //         }\r\n\r\n    //         for (let n = indices.length; n >= 0; n--) {\r\n    //             if (indices[n] != undefined) {\r\n    //                 state.connectionLine[state.openProjectIndex].start.splice(indices[n], 1)\r\n    //                 state.connectionLine[state.openProjectIndex].end.splice(indices[n], 1)\r\n    //                 EventBus.$emit('delete-line', indices[n])\r\n    //             }\r\n    //         }\r\n    //     },\r\n    //     deleteElementLine(state, payload) { //지우는 element에서 line 나가는것 지우기 ==> 화살표의 시작\r\n    //         var endLine = []\r\n    //             //console.log('deleteE ' + endLine)\r\n    //         state.connectionLine[state.openProjectIndex].start.forEach(item => {\r\n    //             var startUUID = item.split('/')\r\n    //             if (startUUID[0] == payload.uuid) {\r\n    //                 endLine.push(this.getters.getconnectLineNum(item))\r\n    //             }\r\n    //         })\r\n\r\n    //         for (let n = endLine.length; n >= 0; n--) {\r\n    //             if (endLine[n] != undefined) {\r\n    //                 state.connectionLine[state.openProjectIndex].start.splice(endLine[n], 1)\r\n    //                 state.connectionLine[state.openProjectIndex].end.splice(endLine[n], 1)\r\n    //                 EventBus.$emit('delete-line', endLine[n])\r\n    //             }\r\n    //         }\r\n    //     },\r\n\r\n    //     deleteElement(state, payload) {\r\n    //         var idxElement\r\n    //             //console.log('deleteElement' + payload.parent)\r\n    //         if (payload.parent == constant.CompuMethod_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.CompuMethod_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.DataConstr_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.DataConstr_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ApplicationArray_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.ApplicationArray_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Implementation_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.DateType_index].children[constant.Implementation_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Machine_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.Machine.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.Machine_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.MachineDesigne_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.MachineDesigne_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.EthernetCluster_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.EthernetCluster_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ModeDeclarationGroup_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.ModeDeclarationGroup_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.HWElement_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Machine.HWElement.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Machines_index].children[constant.HWElement_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ProcesstoMachineMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcesstoMachineMapping_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.SWComponents_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.SWComponents_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Process_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Process_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ProcessDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.ProcessDesign_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Executable_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.Executable_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.StartupConfig_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.StartupConfig_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.DeterministicClient_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.AdaptiveApplication_index].children[constant.DeterministicClient_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.SomeIPServiceInterfaceDeployment_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ServiceInterface_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInterfaces_index].children[constant.ServiceInterface_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Client_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Client_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Server_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.SomeIPEvents_index].children[constant.Server_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.SomeIPClient_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPClient_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.SomeIPServer_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPServer_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.SomeIPToMachineMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.SomeIPToMachineMapping_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ToPortPrototypeMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ToPortPrototypeMapping_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.RequiredSomeIP_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.RequiredSomeIP_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ProvidedSomeIP_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.ServiceInstances_index].children[constant.ProvidedSomeIP_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Error_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.Error.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Error_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.Errorset_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorSet.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.Errorset_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ErrorDomain_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Service_index].children[constant.Errors_index].children[constant.ErrorDomain_index].children.splice(idxElement, 1)\r\n    //         }\r\n    //         //////////////\r\n    //         else if (payload.parent == constant.FileArray_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERFileArray.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileArray.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileArray_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.FileProxyInterf_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.FileProxyInterf_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.KeyValueData_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueData_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.KeyValueDI_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.KeyValueDI_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.PortProtoFileA_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoFileA_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.PortProtoKeyV_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.PER_index].children[constant.PortProtoKeyV_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComFieldGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldG.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGrant_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComEventGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventG.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGrant_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComMethodGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodG.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGrant_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComFieldGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.FieldGD.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComFieldGDesign_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComEventGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.EventGD.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComEventGDesign_index].children.splice(idxElement, 1)\r\n    //         } else if (payload.parent == constant.ComMethodGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             state.SAHLProject[state.openProjectIndex].IamG.MethodGD.splice(idxElement, 1)\r\n    //             state.navigatorList[state.openProjectIndex].children[constant.Platform_index].children[constant.IAM_index].children[constant.ComMethodGDesign_index].children.splice(idxElement, 1)\r\n    //         }\r\n    //         state.detailViewerList.forEach((data, i) => {\r\n    //             if (data.uuid == payload.uuid) {\r\n    //                 state.detailViewerList.splice(i, 1)\r\n    //             }\r\n    //         })\r\n    //         if (state.detailViewer.uuid == payload.uuid) {\r\n    //             state.detailViewer = { uuid: '', element: '' }\r\n    //             state.detailViewUUID = null\r\n    //         }\r\n    //         state.idexDetailView = state.detailViewerList.length - 1\r\n    //         state.activeUUID = null\r\n    //     },\r\n    //     setValidation(state, payload) {\r\n    //         var idxElement = null,\r\n    //             isValidation = false,\r\n    //             idxchild = null,\r\n    //             idxchildchild = null,\r\n    //             idxService = null,\r\n    //             idxParent = null\r\n    //         if (payload.parent == constant.CompuMethod_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.CompuMethod.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.CompuMethod_index\r\n    //         } else if (payload.parent == constant.DataConstr_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.DataConstr.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.DataConstr_index\r\n    //         } else if (payload.parent == constant.ApplicationArray_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ApplicationArrayDataType.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.ApplicationArray_index\r\n    //         } else if (payload.parent == constant.Implementation_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].DataTypes.ImplementationDataType.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.DateType_index\r\n    //             idxchildchild = constant.Implementation_index\r\n    //         } else if (payload.parent == constant.Machine_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.Machine.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.Machine_index\r\n    //         } else if (payload.parent == constant.MachineDesigne_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.MachineDesign.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.MachineDesigne_index\r\n    //         } else if (payload.parent == constant.EthernetCluster_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.EthernetCluster.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.EthernetCluster_index\r\n    //         } else if (payload.parent == constant.ModeDeclarationGroup_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.ModeDeclarationGroup.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.ModeDeclarationGroup_index\r\n    //         } else if (payload.parent == constant.HWElement_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Machine.HWElement.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.Machines_index\r\n    //             idxchildchild = constant.HWElement_index\r\n    //         } else if (payload.parent == constant.ProcesstoMachineMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProtoMachineMapping.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.ProcesstoMachineMapping_index\r\n    //         } else if (payload.parent == constant.SWComponents_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.SWComponents.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.SWComponents_index\r\n    //         } else if (payload.parent == constant.Process_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Process.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.Process_index\r\n    //         } else if (payload.parent == constant.ProcessDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.ProcessDesign.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.ProcessDesign_index\r\n    //         } else if (payload.parent == constant.Executable_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.Executable.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.Executable_index\r\n    //         } else if (payload.parent == constant.StartupConfig_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.StartupConfig.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.StartupConfig_index\r\n    //         } else if (payload.parent == constant.DeterministicClient_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].AdaptiveApplication.DeterministicClient.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchild = constant.AdaptiveApplication_index\r\n    //             idxchildchild = constant.DeterministicClient_index\r\n    //         } else if (payload.parent == constant.SomeIPServiceInterfaceDeployment_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInterfaceDeployment.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.SomeIPServiceInterfaceDeployment_index\r\n    //             idxService = constant.ServiceInterfaces_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.ServiceInterface_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInterface.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ServiceInterface_index\r\n    //             idxService = constant.ServiceInterfaces_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.Client_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientEvent.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.Client_index\r\n    //             idxService = constant.SomeIPEvents_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.Server_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerEvent.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.Server_index\r\n    //             idxService = constant.SomeIPEvents_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.SomeIPClient_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPClientServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.SomeIPClient_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.SomeIPServer_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServerServiceInstance.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.SomeIPServer_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.SomeIPToMachineMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.SomeIPServiceInstanceToMachine.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.SomeIPToMachineMapping_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.ToPortPrototypeMapping_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ServiceInstanceToPortPrototype.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ToPortPrototypeMapping_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.RequiredSomeIP_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.RequiredSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.RequiredSomeIP_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.ProvidedSomeIP_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ProvidedSomeIP.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ProvidedSomeIP_index\r\n    //             idxService = constant.ServiceInstances_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.Error_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.Error.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.Error_index\r\n    //             idxService = constant.Errors_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.Errorset_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorSet.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.Errorset_index\r\n    //             idxService = constant.Errors_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.ErrorDomain_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Service.ErrorDomain.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ErrorDomain_index\r\n    //             idxService = constant.Errors_index\r\n    //             idxParent = constant.Service_index\r\n    //         } else if (payload.parent == constant.FileArray_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERFileArray.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.FileArray_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.FileProxyInterf_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERFileProxy.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.FileProxyInterf_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.KeyValueData_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueD.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.KeyValueData_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.KeyValueDI_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERKeyValueDI.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.KeyValueDI_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.PortProtoFileA_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoFileArray.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.PortProtoFileA_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.PortProtoKeyV_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].Per.PERPPtoKeyValue.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.PortProtoKeyV_index\r\n    //             idxService = constant.PER_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComFieldGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldG.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComFieldGrant_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComEventGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventG.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComEventGrant_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComMethodGrant_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodG.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComMethodGrant_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComFieldGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.FieldGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComFieldGDesign_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComEventGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.EventGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComEventGDesign_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         } else if (payload.parent == constant.ComMethodGDesign_str) {\r\n    //             idxElement = state.SAHLProject[state.openProjectIndex].IamG.MethodGD.findIndex(data => data.uuid === payload.uuid)\r\n    //             idxchildchild = constant.ComMethodGDesign_index\r\n    //             idxService = constant.IAM_index\r\n    //             idxParent = constant.Platform_index\r\n    //         }\r\n\r\n    //         if (idxService == null) {\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxchildchild].children[idxElement].validation = false\r\n    //             state.navigatorList[state.openProjectIndex].children[idxchild].children[idxchildchild].children.forEach(item => {\r\n    //                 if (item.validation == true) {\r\n    //                     isValidation = true\r\n    //                 }\r\n    //             })\r\n    //             if (!isValidation) {\r\n    //                 state.navigatorList[state.openProjectIndex].children[idxchild].children[idxchildchild].validation = false\r\n    //                 state.navigatorList[state.openProjectIndex].children[idxchild].children.forEach(child => {\r\n    //                     if (child.validation == true) {\r\n    //                         isValidation = true\r\n    //                     }\r\n    //                 })\r\n    //                 if (!isValidation) {\r\n    //                     state.navigatorList[state.openProjectIndex].children[idxchild].validation = false\r\n    //                     state.navigatorList[state.openProjectIndex].children.forEach(childchild => {\r\n    //                         if (childchild.validation == true) {\r\n    //                             isValidation = true\r\n    //                         }\r\n    //                     })\r\n    //                     if (!isValidation) {\r\n    //                         state.navigatorList[state.openProjectIndex].validation = false\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         } else {\r\n    //             state.navigatorList[state.openProjectIndex].children[idxParent].children[idxService].children[idxchildchild].children[idxElement].validation = false\r\n    //             state.navigatorList[state.openProjectIndex].children[idxParent].children[idxService].children[idxchildchild].children.forEach(item => {\r\n    //                 if (item.validation == true) {\r\n    //                     isValidation = true\r\n    //                 }\r\n    //             })\r\n    //             if (!isValidation) {\r\n    //                 state.navigatorList[state.openProjectIndex].children[idxParent].children[idxService].children[idxchildchild].validation = false\r\n    //                 state.navigatorList[state.openProjectIndex].children[idxParent].children[idxService].children.forEach(item => {\r\n    //                     if (item.validation == true) {\r\n    //                         isValidation = true\r\n    //                     }\r\n    //                 })\r\n    //                 if (!isValidation) {\r\n    //                     state.navigatorList[state.openProjectIndex].children[idxParent].children[idxService].validation = false\r\n    //                     state.navigatorList[state.openProjectIndex].children[idxParent].children.forEach(child => {\r\n    //                         if (child.validation == true) {\r\n    //                             isValidation = true\r\n    //                         }\r\n    //                     })\r\n    //                     if (!isValidation) {\r\n    //                         state.navigatorList[state.openProjectIndex].children[idxParent].validation = false\r\n    //                         state.navigatorList[state.openProjectIndex].children.forEach(childchild => {\r\n    //                             if (childchild.validation == true) {\r\n    //                                 isValidation = true\r\n    //                             }\r\n    //                         })\r\n    //                         if (!isValidation) {\r\n    //                             state.navigatorList[state.openProjectIndex].validation = false\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     },\r\n    //     saveElement(state, payload) {\r\n    //         var FileSaver = require('file-saver');\r\n    //         //var blob = new Blob([JSON.stringify(this.getters.getSaveObject(payload.list))], { type: \"text/plain;charset=utf-8\" });\r\n    //         var s = new XMLSerializer(); //DOM 트리를 직렬화하여 XML을 포함하는 문자열로 변환합니다.\r\n    //         var saveList = this.getters.sortSaveList(payload.list)\r\n    //         var d = this.getters.getSaveObject(saveList);\r\n    //         var str = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' //getSaveObject에 넣으면 개행이 안된다!!!!\r\n    //         str += s.serializeToString(d); //문서의 DOM 트리를 XML로 다시 직렬화할 수 있습니다.\r\n    //         var blob = new Blob([str], { type: \"text/xml\" });\r\n    //         try { FileSaver.saveAs(blob, payload.saveName); } catch (e) { alert('Failed to save the file !'); }\r\n    //     },\r\n    //     saveList(state, payload) {\r\n    //         var FileSaver = require('file-saver');\r\n    //         var blob = new Blob([JSON.stringify(payload.list)], { type: \"text/plain;charset=utf-8\" });\r\n    //         try { FileSaver.saveAs(blob, payload.saveName); } catch (e) { alert('Failed to save the file !'); }\r\n    //     },\r\n\r\n    //     uploadFileprocess(state, payload) {\r\n    //         var parser, xmlDoc\r\n    //         console.log(payload.fileInfo)\r\n    //         parser = new DOMParser()\r\n    //         xmlDoc = parser.parseFromString(payload.fileInfo, \"text/xml\")\r\n    //         this.commit('saveInputfile', { xmlDoc: xmlDoc })\r\n    //         Vue.nextTick(() => { //mainview에만 넣으니 tab이 늦게 그려져서 선이 안그려짐\r\n    //             state.isInputFileComplate = true\r\n    //         })\r\n    //     },\r\n    //     initialiseStore(state) {\r\n    //         // if (localStorage.getItem(\"SAHLProject\")) {\r\n    //         //     //console.log(\"loading SAHLProject\");\r\n    //         //     state.SAHLProject = JSON.parse(localStorage.getItem(\"SAHLProject\"))\r\n    //         // }\r\n    //         // if (localStorage.getItem(\"navigatorList\")) {\r\n    //         //     //console.log(\"loading navigatorList\");\r\n    //         //     state.navigatorList = JSON.parse(localStorage.getItem(\"navigatorList\"))\r\n    //         // }\r\n    //         if (localStorage.getItem(\"setting\")) {\r\n    //             //console.log(\"loading setting\");\r\n    //             state.setting = JSON.parse(localStorage.getItem(\"setting\"))\r\n    //         }\r\n    //         if (localStorage.getItem(\"savePath\")) {\r\n    //             //console.log(\"loading savePath\");\r\n    //             state.strSavePath = JSON.parse(localStorage.getItem(\"savePath\"))\r\n    //         }\r\n    //         if (localStorage.getItem(\"visibleDetailView\")) {\r\n    //             //console.log(\"loading visibleDetailView\");\r\n    //             state.visibleDetailView = JSON.parse(localStorage.getItem(\"visibleDetailView\"))\r\n    //         }\r\n    //     }\r\n    // },\r\n    actions: {}\r\n});"]}]}